<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about ubuntu)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/ubuntu.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;Cloistered Monkey&lt;/a&gt; 
&lt;div id="license"xmlns:cc="http://creativecommons.org/ns#" &gt;This work is licensed under
&lt;a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"&gt;CC BY 4.0
&lt;img src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"&gt;
&lt;img src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"&gt;&lt;/a&gt;
&lt;/div&gt;
</copyright><lastBuildDate>Sat, 19 Apr 2025 22:55:47 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Noble Numbat and the Broken Virtual Environments</title><link>https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/#orge191ef7"&gt;What is this about?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/#org0c7176f"&gt;What Happened&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/#orgad64f4b"&gt;Short Version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/#orga5f4cd8"&gt;The First Hint (pipx)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/#orgafa04e1"&gt;The Broken Virtual Environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/#org62c9b7c"&gt;Then a Nikola Error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/#org934eba2"&gt;An Ape-Iron Problem (no distutils)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/#orgfeb54ce"&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge191ef7" class="outline-2"&gt;
&lt;h2 id="orge191ef7"&gt;What is this about?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge191ef7"&gt;
&lt;p&gt;
These are notes I made when I was fixing some errors that occurred after updating Ubuntu to 24.04. It's been over a year so I don't really remember writing this, but, here it is.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0c7176f" class="outline-2"&gt;
&lt;h2 id="org0c7176f"&gt;What Happened&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0c7176f"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;I updated Ubuntu&lt;/li&gt;
&lt;li&gt;Something raised an obscure error when I changed into one of my git repositories&lt;/li&gt;
&lt;li&gt;It turned out that the upgrade broke the python virtual environment&lt;/li&gt;
&lt;li&gt;Re-setting-up using the newer version of python that came with the upgrade fixed things.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgad64f4b" class="outline-2"&gt;
&lt;h2 id="orgad64f4b"&gt;Short Version&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgad64f4b"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Upgrading to Ubuntu 24.04 made python changes that broke all my virtual enviroments&lt;/li&gt;
&lt;li&gt;Reinstalled &lt;code&gt;pipx&lt;/code&gt; using apt&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vf ls --details&lt;/code&gt; shows the python versions for all (virtualfish created) virtual environments (and which are broken)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vf upgrade --rebuild&lt;/code&gt; will upgrade the currently active virtual environment (may take more than one run to get past errors)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pipx reinstall-all&lt;/code&gt; fixed the missing &lt;code&gt;nikola&lt;/code&gt; and &lt;code&gt;pygmentize&lt;/code&gt; errors (and probably others)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install setuptools --upgrade&lt;/code&gt; in the environment re-setup &lt;code&gt;distutils&lt;/code&gt; which was removed from pthyon 3.12 (which Ubuntu Installed)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga5f4cd8" class="outline-2"&gt;
&lt;h2 id="orga5f4cd8"&gt;The First Hint (pipx)&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga5f4cd8"&gt;
&lt;p&gt;
I don't remember exactly what cued me in to what was going wrong, but somewhere in trying to figure out what was wrong I found that running &lt;a href="https://github.com/frostming/legit"&gt;legit&lt;/a&gt; after updating to Ubuntu 24.04 returned an error saying that &lt;code&gt;legit&lt;/code&gt; wasn't found. It took a while to figure out where &lt;code&gt;legit&lt;/code&gt; was supposed to be coming from, but it turned out I had installed it with &lt;a href="https://pipx.pypa.io/latest/installation/"&gt;pipx&lt;/a&gt; and had to re-install it to get it working.
&lt;/p&gt;

&lt;p&gt;
I don't remember exactly what I did anymore, but based on the command history it looks like:
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Re-install &lt;code&gt;pipx&lt;/code&gt; (I purged the original installation that had been installed using &lt;code&gt;pip&lt;/code&gt; and instead used &lt;code&gt;apt&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Re-install &lt;code&gt;legit&lt;/code&gt; using the updated &lt;code&gt;pipx&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
So, was &lt;code&gt;pipx&lt;/code&gt; the problem? Well, partly.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgafa04e1" class="outline-2"&gt;
&lt;h2 id="orgafa04e1"&gt;The Broken Virtual Environments&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgafa04e1"&gt;
&lt;p&gt;
The next problem came when I tried to build the HTML for this site.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola build
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/home/hades/.virtualenvs/necromuralist.github.io/bin/nikola"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nikola.__main__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;
&lt;span class="ne"&gt;ModuleNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s1"&gt;'nikola'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
For some reason the &lt;code&gt;nikola&lt;/code&gt; executable was missing. Since I was in a virtual environment I tried to re-install nikola but using &lt;code&gt;pip&lt;/code&gt; gave another error.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip --version
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/home/hades/.virtualenvs/necromuralist.github.io/bin/pip"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pip._internal.cli.main&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;
&lt;span class="ne"&gt;ModuleNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s1"&gt;'pip'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So, not only was &lt;code&gt;nikola&lt;/code&gt; missing but so was &lt;code&gt;pip&lt;/code&gt;, which I thought was a part of the python installation… I looked at what was in the virtualenvironment -
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls ~/.virtualenvs/necromuralist.github.io/lib
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And saw that it had this python version:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python3.11/
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
But when I checked the version of the python I was using it gave this.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python --version
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Python 3.12.3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So it looked like the ubuntu update created a bit of a mismatch. It turns out that &lt;a href="https://virtualfish.readthedocs.io/en/latest/"&gt;virtualfish&lt;/a&gt; has a command to list what virtual environments you have set up (&lt;code&gt;vf ls&lt;/code&gt;) and if you pass it the &lt;code&gt;--details=&lt;/code&gt; option it will show you the python version the environment is using.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vf ls --details
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
It listed all my environments but in particular it showed this for the environment for this site's repository.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;necromuralist.github.io &lt;span class="o"&gt;(&lt;/span&gt;broken&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;virtualfish&lt;/code&gt; also has a command to upgrade the currently active environment so I tried running it.
&lt;/p&gt;

&lt;p&gt;
Running this with the &lt;i&gt;necromuralist&lt;/i&gt; environment active:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vf upgrade --rebuild
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Gave this error.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Collecting &lt;span class="nv"&gt;PyYAML&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;6.0
  Downloading PyYAML-6.0.tar.gz &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;124&lt;/span&gt; kB&lt;span class="o"&gt;)&lt;/span&gt;
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 125.0/125.0 kB 3.5 MB/s eta 0:00:00
  Installing build dependencies ... done
  Getting requirements to build wheel ... error
  error: subprocess-exited-with-error

  × Getting requirements to build wheel did &lt;span class="k"&gt;not&lt;/span&gt; run successfully.
  │ &lt;span class="k"&gt;exit&lt;/span&gt; code: 1
  ╰─&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;54&lt;/span&gt; lines of output&lt;span class="o"&gt;]&lt;/span&gt;
      running egg_info
      writing lib/PyYAML.egg-info/PKG-INFO
      writing dependency_links to lib/PyYAML.egg-info/dependency_links.txt
      writing top-level names to lib/PyYAML.egg-info/top_level.txt
      Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
        File &lt;span class="s2"&gt;"/home/hades/.virtualenvs/necromuralist.github.io/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py"&lt;/span&gt;, line 353, &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;module&amp;gt;
          main&lt;span class="o"&gt;()&lt;/span&gt;
        File &lt;span class="s2"&gt;"/home/hades/.virtualenvs/necromuralist.github.io/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py"&lt;/span&gt;, line 335, &lt;span class="k"&gt;in&lt;/span&gt; main
          json_out&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'return_val'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; hook&lt;span class="o"&gt;(&lt;/span&gt;**hook_input&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'kwargs'&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
                                   &lt;span class="o"&gt;^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/span&gt;
        File &lt;span class="s2"&gt;"/home/hades/.virtualenvs/necromuralist.github.io/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py"&lt;/span&gt;, line 118, &lt;span class="k"&gt;in&lt;/span&gt; get_requires_for_build_wheel
          &lt;span class="k"&gt;return&lt;/span&gt; hook&lt;span class="o"&gt;(&lt;/span&gt;config_settings&lt;span class="o"&gt;)&lt;/span&gt;
                 &lt;span class="o"&gt;^^^^^^^^^^^^^^^^^^^^^&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/build_meta.py"&lt;/span&gt;, line 325, &lt;span class="k"&gt;in&lt;/span&gt; get_requires_for_build_wheel
          &lt;span class="k"&gt;return&lt;/span&gt; self._get_build_requires&lt;span class="o"&gt;(&lt;/span&gt;config_settings, &lt;span class="nv"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;'wheel'&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
                 &lt;span class="o"&gt;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/build_meta.py"&lt;/span&gt;, line 295, &lt;span class="k"&gt;in&lt;/span&gt; _get_build_requires
          self.run_setup&lt;span class="o"&gt;()&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/build_meta.py"&lt;/span&gt;, line 311, &lt;span class="k"&gt;in&lt;/span&gt; run_setup
          &lt;span class="nb"&gt;exec&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;code, locals&lt;span class="o"&gt;())&lt;/span&gt;
        File &lt;span class="s2"&gt;"&amp;lt;string&amp;gt;"&lt;/span&gt;, line 288, &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;module&amp;gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/__init__.py"&lt;/span&gt;, line 103, &lt;span class="k"&gt;in&lt;/span&gt; setup
          &lt;span class="k"&gt;return&lt;/span&gt; distutils.core.setup&lt;span class="o"&gt;(&lt;/span&gt;**attrs&lt;span class="o"&gt;)&lt;/span&gt;
                 &lt;span class="o"&gt;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/_distutils/core.py"&lt;/span&gt;, line 184, &lt;span class="k"&gt;in&lt;/span&gt; setup
          &lt;span class="k"&gt;return&lt;/span&gt; run_commands&lt;span class="o"&gt;(&lt;/span&gt;dist&lt;span class="o"&gt;)&lt;/span&gt;
                 &lt;span class="o"&gt;^^^^^^^^^^^^^^^^^^&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/_distutils/core.py"&lt;/span&gt;, line 200, &lt;span class="k"&gt;in&lt;/span&gt; run_commands
          dist.run_commands&lt;span class="o"&gt;()&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/_distutils/dist.py"&lt;/span&gt;, line 969, &lt;span class="k"&gt;in&lt;/span&gt; run_commands
          self.run_command&lt;span class="o"&gt;(&lt;/span&gt;cmd&lt;span class="o"&gt;)&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/dist.py"&lt;/span&gt;, line 968, &lt;span class="k"&gt;in&lt;/span&gt; run_command
          super&lt;span class="o"&gt;()&lt;/span&gt;.run_command&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/_distutils/dist.py"&lt;/span&gt;, line 988, &lt;span class="k"&gt;in&lt;/span&gt; run_command
          cmd_obj.run&lt;span class="o"&gt;()&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/command/egg_info.py"&lt;/span&gt;, line 321, &lt;span class="k"&gt;in&lt;/span&gt; run
          self.find_sources&lt;span class="o"&gt;()&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/command/egg_info.py"&lt;/span&gt;, line 329, &lt;span class="k"&gt;in&lt;/span&gt; find_sources
          mm.run&lt;span class="o"&gt;()&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/command/egg_info.py"&lt;/span&gt;, line 550, &lt;span class="k"&gt;in&lt;/span&gt; run
          self.add_defaults&lt;span class="o"&gt;()&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/command/egg_info.py"&lt;/span&gt;, line 588, &lt;span class="k"&gt;in&lt;/span&gt; add_defaults
          sdist.add_defaults&lt;span class="o"&gt;(&lt;/span&gt;self&lt;span class="o"&gt;)&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/command/sdist.py"&lt;/span&gt;, line 102, &lt;span class="k"&gt;in&lt;/span&gt; add_defaults
          super&lt;span class="o"&gt;()&lt;/span&gt;.add_defaults&lt;span class="o"&gt;()&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/_distutils/command/sdist.py"&lt;/span&gt;, line 250, &lt;span class="k"&gt;in&lt;/span&gt; add_defaults
          self._add_defaults_ext&lt;span class="o"&gt;()&lt;/span&gt;
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/_distutils/command/sdist.py"&lt;/span&gt;, line 335, &lt;span class="k"&gt;in&lt;/span&gt; _add_defaults_ext
          self.filelist.extend&lt;span class="o"&gt;(&lt;/span&gt;build_ext.get_source_files&lt;span class="o"&gt;())&lt;/span&gt;
                               &lt;span class="o"&gt;^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/span&gt;
        File &lt;span class="s2"&gt;"&amp;lt;string&amp;gt;"&lt;/span&gt;, line 204, &lt;span class="k"&gt;in&lt;/span&gt; get_source_files
        File &lt;span class="s2"&gt;"/tmp/pip-build-env-1ai8jd66/overlay/lib/python3.12/site-packages/setuptools/_distutils/cmd.py"&lt;/span&gt;, line 107, &lt;span class="k"&gt;in&lt;/span&gt; __getattr__
          raise AttributeError&lt;span class="o"&gt;(&lt;/span&gt;attr&lt;span class="o"&gt;)&lt;/span&gt;
      AttributeError: cython_sources
      &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt; of output&lt;span class="o"&gt;]&lt;/span&gt;

  note: This error originates from a subprocess, &lt;span class="k"&gt;and&lt;/span&gt; is likely &lt;span class="k"&gt;not&lt;/span&gt; a problem with pip.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Which looked like I was in trouble, but it turned out that re-running the upgrade fixed it. One of those magic fixes that would be scary if this was a critical site, I suppose, but which is instead, just another bit of python mystery.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org62c9b7c" class="outline-2"&gt;
&lt;h2 id="org62c9b7c"&gt;Then a Nikola Error&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org62c9b7c"&gt;
&lt;p&gt;
So, with the virtual environment updated to the current python, I waded back into building the site.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola build
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
First this produced a &lt;code&gt;nikola&lt;/code&gt; not found error (updating the virtual environment apparently doesn't fix everything). But since the environment itself was fixed pip was now working so I installed it again, but then building the site produced a different error.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DependencyError - taskid:render_posts:cache/posts/2ac-updating-a-nikola-shortcode-plugin.html  
ERROR: Task &lt;span class="s1"&gt;'render_posts:cache/posts/2ac-updating-a-nikola-shortcode-plugin.html'&lt;/span&gt; saving success: Dependent file &lt;span class="s1"&gt;'/home/hades/.virtualenvs/necromuralist.github.io/lib/python3.11/site-packa&lt;/span&gt;
&lt;span class="s1"&gt;ges/nikola/data/shortcodes/mako/raw.tmpl'&lt;/span&gt; does &lt;span class="k"&gt;not&lt;/span&gt; exist.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Re-reinstalling nikola and re-running the build made the error go away, but in the output I noticed some disturbing messages that looked like these.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.  render_pages:output/posts/destroying-tags-with-beautiful-soup/index.html
line &lt;span class="m"&gt;135&lt;/span&gt; column &lt;span class="m"&gt;56&lt;/span&gt; - Error: &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;module&amp;gt; is &lt;span class="k"&gt;not&lt;/span&gt; recognized!
line &lt;span class="m"&gt;144&lt;/span&gt; column &lt;span class="m"&gt;56&lt;/span&gt; - Error: &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;module&amp;gt; is &lt;span class="k"&gt;not&lt;/span&gt; recognized!
line &lt;span class="m"&gt;154&lt;/span&gt; column &lt;span class="m"&gt;56&lt;/span&gt; - Error: &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;module&amp;gt; is &lt;span class="k"&gt;not&lt;/span&gt; recognized!
This document has errors that must be fixed before
using HTML Tidy to generate a tidied up version.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
There were are a lot of these errors (which didn't cause nikola to quit so I wouldn't have seen them if I wasn't watching the build messages).
&lt;/p&gt;

&lt;p&gt;
This turned out to be because nikola was encountering errors, trapping them and not failing and then embedding the python error messages into the HTML (and the error messages were causing HTML tidy to fail and then raise a different error message).
&lt;/p&gt;

&lt;p&gt;
This is an example of an error message embedded in the HTML nikola created:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/home/hades/.local/bin/pygmentize"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pygments.cmdline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;
&lt;span class="ne"&gt;ModuleNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s1"&gt;'pygments'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The cause for this one was a little more mysterious, but it turned out that I had installed &lt;code&gt;pygmentize&lt;/code&gt; using &lt;code&gt;pipx&lt;/code&gt; so it needed to be updated separately. I decided to use &lt;code&gt;pipx reinstall-all&lt;/code&gt; to get everything updated.
&lt;/p&gt;

&lt;p&gt;
Unfortunately, there were a lot of posts with the &lt;code&gt;pygmentize&lt;/code&gt; errors, and since they aren't registered as errors by nikola, just building the site didn't fix them so I wiped it first and then re-built it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola clean
nikola build
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And since there weren't anymore errors I decided to cross my fingers and move on.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org934eba2" class="outline-2"&gt;
&lt;h2 id="org934eba2"&gt;An Ape-Iron Problem (no distutils)&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org934eba2"&gt;
&lt;p&gt;
The &lt;code&gt;vf ls --details&lt;/code&gt; command I used to check on the virtual environment for this site also showed that all my other virtual environments were broken so I decided to try and fix the &lt;code&gt;Ape-Iron&lt;/code&gt; repository while it was fresh on my mind. First I rebuilt the environment.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vf upgrade --rebuild Ape-Iron
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And of course, it gave me errors.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Collecting &lt;span class="nv"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;1.24.3
  Downloading numpy-1.24.3.tar.gz &lt;span class="o"&gt;(&lt;/span&gt;10.9 MB&lt;span class="o"&gt;)&lt;/span&gt;
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 10.9/10.9 MB 7.7 MB/s eta 0:00:00
  Installing build dependencies ... done
  Getting requirements to build wheel ... done
ERROR: Exception:
Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
  File &lt;span class="s2"&gt;"/home/hades/.virtualenvs/Ape-Iron/lib/python3.12/site-packages/pip/_internal/cli/base_command.py"&lt;/span&gt;, line 180, &lt;span class="k"&gt;in&lt;/span&gt; exc_logging_wrapper
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;File &lt;span class="s2"&gt;"/tmp/pip-build-env-f7h7lvcc/overlay/lib/python3.12/site-packages/setuptools/__init__.py"&lt;/span&gt;, line 10, &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;module&amp;gt;
    import distutils.core
ModuleNotFoundError: No module named &lt;span class="s1"&gt;'distutils'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
According to &lt;a href="https://stackoverflow.com/a/77233866"&gt;this answer&lt;/a&gt; to a question on &lt;i&gt;StackOverflow&lt;/i&gt; &lt;code&gt;distutils&lt;/code&gt; was removed from python 3.12, which is the default with &lt;i&gt;noble-numbat&lt;/i&gt;. The answer suggests installing &lt;a href="https://github.com/pypa/setuptools"&gt;&lt;code&gt;setuptools&lt;/code&gt;&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
So, I tride that.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install setuptools --upgrade
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Amazingly, the upgrade of Ape-Iron seemed to work.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vf upgrade --rebuild Ape-Iron
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
At this point I think I just called it a day.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfeb54ce" class="outline-2"&gt;
&lt;h2 id="orgfeb54ce"&gt;Links&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfeb54ce"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://virtualfish.readthedocs.io/en/latest/usage.html#upgrading-virtual-environments"&gt;Upgrading Virtual Environments&lt;/a&gt;: Virtualfish Documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yaml/pyyaml/issues/601"&gt;AttributeError: cython_sources&lt;/a&gt;: A PyYAML bug report that looks related to the error.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>pipx</category><category>ubuntu</category><category>upgrading</category><category>virtualfish</category><guid>https://necromuralist.github.io/posts/noble-numbat-and-the-broken-virtual-environments/</guid><pubDate>Mon, 27 May 2024 23:21:26 GMT</pubDate></item><item><title>Apt-Fast In Sparky Linux</title><link>https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#org019f34a"&gt;Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#orga8b9bdc"&gt;The Intructions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#orgc3f29f5"&gt;Create An Apt Entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#org5b5b6f8"&gt;Add the Keyring and Install&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#org45d4e48"&gt;The apt-key Solution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#org9ce6a08"&gt;The Start of the Solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#orgb048e49"&gt;Getting the GPG File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#orgabd5047"&gt;Now Back to Setting it Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#org5a37367"&gt;Update and Install&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#org21606e2"&gt;And Now, Another Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#org75c815e"&gt;What Have We Learned Today Children?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/#org42b613d"&gt;Links Collected&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org019f34a" class="outline-2"&gt;
&lt;h2 id="org019f34a"&gt;Background&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org019f34a"&gt;
&lt;p&gt;
I have an old eeePC netbook that I thought I'd revive by loading &lt;a href="https://sparkylinux.org/"&gt;Sparky Linux&lt;/a&gt; onto it. One of the things I set up on it is &lt;a href="https://github.com/ilikenwf/apt-fast"&gt;apt-fast&lt;/a&gt;, which the README on the github repository describes like this:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
apt-fast is a shellscript wrapper for apt-get and aptitude that can drastically improve apt download times by downloading packages in parallel, with multiple connections per package.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I've used it for a while on ubuntu but Sparky Linux didn't have it in the repositories. The apt-fast documentation has instructions for &lt;a href="https://github.com/ilikenwf/apt-fast#debian-and-derivates"&gt;installing it on debian (and derivatives)&lt;/a&gt; and since Sparky Linux is based on debian (the current version, SparkyLinux 6.7 (Po-Tolo) is based on debian bullseye) I decided to try that. Ultimately I got it working, but as is often the case, it wasn't quite so straightforward as I would like for it to have been.
&lt;/p&gt;

&lt;p&gt;
Unusual Ingredients List:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;SparkyLinux 6.7 (Po-Tolo)&lt;/li&gt;
&lt;li&gt;fish shell&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga8b9bdc" class="outline-2"&gt;
&lt;h2 id="orga8b9bdc"&gt;The Intructions&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga8b9bdc"&gt;
&lt;p&gt;
Although the PPA system is built for Ubuntu, the recommendation from apt-fast is to use it with debian-based systems too (apt-fast is just a shell-script that runs &lt;code&gt;aria2&lt;/code&gt; and &lt;code&gt;apt&lt;/code&gt; (or &lt;code&gt;apt-get&lt;/code&gt;, etc.) so it's not like there's a lot of dependencies that might conflict). This is what they say to do.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc3f29f5" class="outline-3"&gt;
&lt;h3 id="orgc3f29f5"&gt;Create An Apt Entry&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc3f29f5"&gt;
&lt;p&gt;
First I created a file for the sources at &lt;code&gt;/etc/apt/sources.list.d/apt-fast.list&lt;/code&gt; and put these lines in it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deb http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main 
deb-src http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Bionic came out in 2018 so they maybe haven't updated the instructions in a while.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5b5b6f8" class="outline-3"&gt;
&lt;h3 id="org5b5b6f8"&gt;Add the Keyring and Install&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5b5b6f8"&gt;
&lt;p&gt;
Once the file was in place I ran the commands.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B
apt-get update
apt-get install apt-fast
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The first output I saw was a warning:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Warning: apt-key is deprecated. Manage keyring files &lt;span class="k"&gt;in&lt;/span&gt; trusted.gpg.d instead &lt;span class="o"&gt;(&lt;/span&gt;see apt-key&lt;span class="o"&gt;(&lt;/span&gt;8&lt;span class="o"&gt;))&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This is something I've seen on ubuntu as well so fixing it seemed like a useful thing to do, especially since at the end of the regular output I got an error.
&lt;/p&gt;

&lt;p&gt;
Between the warning and the final error there was the usual output that I've seen:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Executing: /tmp/apt-key-gpghome.YL04bWmGAF/gpg.1.sh --keyserver keyserver.ubuntu.com --recv-keys A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B
gpg: key 1EE2FF37CA8DA16B: public key &lt;span class="s2"&gt;"Launchpad PPA for apt-fast"&lt;/span&gt; imported
gpg: Total number processed: 1
gpg:               imported: 1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Then came this, the error I mentioned, which is not what I usually see:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg: no writable keyring found: Not found
gpg: error reading &lt;span class="s1"&gt;'[stdin]'&lt;/span&gt;: General error
gpg: import from &lt;span class="s1"&gt;'[stdin]'&lt;/span&gt; failed: General error
gpg: Total number processed: 0
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
I don't know if this is a debian problem or a sparky linux problem, but since you're not supposed to be using this method anyway, I went looking for a different solution.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org45d4e48" class="outline-2"&gt;
&lt;h2 id="org45d4e48"&gt;The apt-key Solution&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org45d4e48"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9ce6a08" class="outline-3"&gt;
&lt;h3 id="org9ce6a08"&gt;The Start of the Solution&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9ce6a08"&gt;
&lt;p&gt;
The first part of the solution was pointed to by &lt;a href="https://stackoverflow.com/a/71384057"&gt;this Stack Overflow Answer&lt;/a&gt;. There was a problem with the answer, though, in that the person asking the question was using a URL that pointed to a gpg file, so the answers all assumed you could download it with curl, wget, etc. (all the answers that I could understand, anyway). So now that I had the answer I had a new problem - how do you get the file from the keyserver?
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb048e49" class="outline-3"&gt;
&lt;h3 id="orgb048e49"&gt;Getting the GPG File&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb048e49"&gt;
&lt;p&gt;
Once again to the web, this time &lt;a href="https://superuser.com/a/1643115"&gt;this answer from SuperUser&lt;/a&gt; seemed to work.
&lt;/p&gt;

&lt;p&gt;
First, I made a temporary directory and pointed &lt;code&gt;GNUPGHOME&lt;/code&gt; to it so that I wasn't adding anything to my actual gpg setup (this is fish-shell syntax).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; -x GNUPGHOME &lt;span class="nv"&gt;$(&lt;/span&gt;mktemp -d&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;echo $GNUPGHOME&lt;/code&gt; showed that this created a file at &lt;code&gt;/tmp/tmp.dUDUEgFQ0x&lt;/code&gt; (but I didn't actually need to know that, I'm just mentioning it).
&lt;/p&gt;

&lt;p&gt;
Taking the &lt;code&gt;--recv-keys&lt;/code&gt; argument from the instructions above (&lt;code&gt;apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B&lt;/code&gt;) I added the key.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg --keyserver keyserver.ubuntu.com --recv-keys A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Next I made a place to put the gpg file.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /etc/apt/keyrings
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Then I output the file in my home directory (the &lt;code&gt;GNUPGHOME&lt;/code&gt;  environment variable is only available to my user, so I put the file somewhere that I didn't need to be root, i.e. my home directory).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gpg -o A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B.gpg --export A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Then I moved the file into the directory I created for it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mv A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B.gpg /etc/apt/keyrings/
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The SuperUser answer I linked to used &lt;code&gt;gpg -ao&lt;/code&gt; but the &lt;code&gt;a&lt;/code&gt; option makes it an "armored" file, and part of the Stack Overflow answer for setting up the key is about de-armoring it so I just left that option out.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgabd5047" class="outline-3"&gt;
&lt;h3 id="orgabd5047"&gt;Now Back to Setting it Up&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgabd5047"&gt;
&lt;p&gt;
So now that we have the keyring we need to edit the &lt;code&gt;/etc/apt/sources.list.d/apt-fast.list&lt;/code&gt; file that we created at the beginning of this.
&lt;/p&gt;

&lt;p&gt;
This is what I started with.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deb http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main 
deb-src http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And I changed it to refer to the gpg file that I created.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deb &lt;span class="o"&gt;[&lt;/span&gt;signed-by&lt;span class="o"&gt;=&lt;/span&gt;/etc/apt/keyrings/A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B.gpg&lt;span class="o"&gt;]&lt;/span&gt; http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main
deb-src  &lt;span class="o"&gt;[&lt;/span&gt;signed-by&lt;span class="o"&gt;=&lt;/span&gt;/etc/apt/keyrings/A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B.gpg&lt;span class="o"&gt;]&lt;/span&gt;  http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5a37367" class="outline-3"&gt;
&lt;h3 id="org5a37367"&gt;Update and Install&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5a37367"&gt;
&lt;p&gt;
So then I updated apt and installed it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt update
sudo apt install apt-fast
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And it worked.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org21606e2" class="outline-2"&gt;
&lt;h2 id="org21606e2"&gt;And Now, Another Problem&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org21606e2"&gt;
&lt;p&gt;
This got me to a working &lt;code&gt;apt-fast&lt;/code&gt; installation but the fact that I was using &lt;code&gt;bionic&lt;/code&gt; seemed off to me so I decided to update the &lt;code&gt;apt-fast.list&lt;/code&gt;. Under the instructions for adding the PPA is this note.
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Note that the PPA version bionic might need to be updated with the recent Ubuntu LTS codename to stay up-to-date.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
So I went and looked up the &lt;a href="https://ubuntu.com/about/release-cycle"&gt;Ubuntu Release Cycle&lt;/a&gt; and saw that "jammy" is the most recent version so I updated the &lt;code&gt;apt-fast.list&lt;/code&gt; file to match.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deb &lt;span class="o"&gt;[&lt;/span&gt;signed-by&lt;span class="o"&gt;=&lt;/span&gt;/etc/apt/keyrings/A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B.gpg&lt;span class="o"&gt;]&lt;/span&gt; http://ppa.launchpad.net/apt-fast/stable/ubuntu jammy main
deb-src  &lt;span class="o"&gt;[&lt;/span&gt;signed-by&lt;span class="o"&gt;=&lt;/span&gt;/etc/apt/keyrings/A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B.gpg&lt;span class="o"&gt;]&lt;/span&gt;  http://ppa.launchpad.net/apt-fast/stable/ubuntu jammy main
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And then I installed the newer version.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt update
sudo apt install apt-fast
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And I got a nice long stack-trace and error message at the bottom of which was this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg-deb: error: archive &lt;span class="s1"&gt;'/var/cache/apt/archives/apt-fast_1.9.12-1~ubuntu22.04.1_all.deb'&lt;/span&gt; uses unknown compression &lt;span class="k"&gt;for&lt;/span&gt; member &lt;span class="s1"&gt;'control.tar.zst'&lt;/span&gt;, giving up
dpkg: error processing archive /var/cache/apt/archives/apt-fast_1.9.12-1~ubuntu22.04.1_all.deb &lt;span class="o"&gt;(&lt;/span&gt;--unpack&lt;span class="o"&gt;)&lt;/span&gt;:
 dpkg-deb --control subprocess returned error &lt;span class="k"&gt;exit&lt;/span&gt; &lt;span class="nb"&gt;status &lt;/span&gt;2
Errors were encountered &lt;span class="k"&gt;while&lt;/span&gt; processing:
 /var/cache/apt/archives/apt-fast_1.9.12-1~ubuntu22.04.1_all.deb
E: Sub-process /usr/bin/dpkg returned an error code &lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The part of it that seemed like it might matter the most was the fragment:
&lt;/p&gt;

&lt;pre class="example" id="orga8c1fed"&gt;
uses unknown compression for member 'control.tar.zst', giving up~
&lt;/pre&gt;

&lt;p&gt;
What is a &lt;code&gt;zst&lt;/code&gt; file? &lt;a href="https://en.wikipedia.org/wiki/Zstd?useskin=vector"&gt;According to wikipedia&lt;/a&gt; it's a "Zstandard" file and Debian and Ubuntu added support for using it to compress &lt;code&gt;deb&lt;/code&gt; packages back in 2018. There is a package listed in &lt;code&gt;apt&lt;/code&gt; called &lt;code&gt;zstd&lt;/code&gt; that it says supports &lt;code&gt;zst&lt;/code&gt; compression so I installed it but the error remained.
&lt;/p&gt;

&lt;p&gt;
Once again, someone ran into this and asked about it on &lt;a href="https://unix.stackexchange.com/questions/669004/zst-compression-not-supported-by-apt-dpkg"&gt;Stack Exchange&lt;/a&gt;. &lt;a href="https://unix.stackexchange.com/a/669008"&gt;One of the answers&lt;/a&gt; said:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Debian’s dpkg package didn’t support zstd compression prior to version 1.21.18. Support was added just in time for Debian 12.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Since the SparkyLinux install is based on Debian 11 that seemed like it might be the problem. I checked the dpkg-version and got back:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Debian&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'dpkg'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;package&lt;span class="w"&gt; &lt;/span&gt;management&lt;span class="w"&gt; &lt;/span&gt;program&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.20.12&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;i386&lt;span class="o"&gt;)&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So that seemed like the likely culprit. The ubuntu release dates page noted that there was a LTS version between "bionic" and "jammy" called "focal" so I edited the &lt;code&gt;apt-fast.list&lt;/code&gt; file again, replacing "jammy" with "focal" and re-ran the installation and so far… it works.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org75c815e" class="outline-2"&gt;
&lt;h2 id="org75c815e"&gt;What Have We Learned Today Children?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org75c815e"&gt;
&lt;p&gt;
Further down in the installation instructions it says that you can just download the files and install them along with the &lt;code&gt;aria2&lt;/code&gt; package, so going through this whole thing was kind of unnecessary, but getting around the apt-key problem was something that I'd wondered about before, so it might be useful in the future, if PPA creators keep using it and they don't come up with an automatic fix for it.
&lt;/p&gt;

&lt;p&gt;
I guess the main thing I learned is that I should have read to the end of the instructions and picked the easy way out instead of trying to force the old familiar way to work.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org42b613d" class="outline-2"&gt;
&lt;h2 id="org42b613d"&gt;Links Collected&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org42b613d"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;FWDekker. Answer to “Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead” [Internet]. Stack Overflow. 2022 [cited 2023 Jun 16]. Available from: &lt;a href="https://stackoverflow.com/a/71384057"&gt;https://stackoverflow.com/a/71384057&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kitt S. Answer to “zst compression not supported by apt/dpkg” [Internet]. Unix &amp;amp; Linux Stack Exchange. 2021 [cited 2023 Jun 16]. Available from: &lt;a href="https://unix.stackexchange.com/a/669008"&gt;https://unix.stackexchange.com/a/669008&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fuzzydrawrings. Answer to “gpg: only download a key from a keyserver” [Internet]. Super User. 2021 [cited 2023 Jun 16]. Available from: &lt;a href="https://superuser.com/a/1643115"&gt;https://superuser.com/a/1643115&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ilikenwf/apt-fast: apt-fast: A shellscript wrapper for apt that speeds up downloading of packages. [Internet]. [cited 2023 Jun 16]. Available from: &lt;a href="https://github.com/ilikenwf/apt-fast"&gt;https://github.com/ilikenwf/apt-fast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;zstd. In: Wikipedia [Internet]. 2023 [cited 2023 Jun 16]. Available from: &lt;a href="https://en.wikipedia.org/w/index.php?title=Zstd&amp;amp;oldid=1157564498"&gt;https://en.wikipedia.org/w/index.php?title=Zstd&amp;amp;oldid=1157564498&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>apt</category><category>debian</category><category>howto</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/apt-fast-in-sparky-linux/</guid><pubDate>Fri, 16 Jun 2023 20:15:45 GMT</pubDate></item><item><title>Fish, Mocha, Chai - A Local Global Installation In Ubuntu</title><link>https://necromuralist.github.io/posts/fish-mocha-chai-a-local-global-installation-in-ubuntu/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org3976c6b" class="outline-2"&gt;
&lt;h2 id="org3976c6b"&gt;What This Is About&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3976c6b"&gt;
&lt;p&gt;
I've been getting back into &lt;a href="https://p5.js.org"&gt;p5.js&lt;/a&gt; lately and thought that I should add some testing so I went to their site and found that they had a tutorial page called &lt;a href="https://p5js.org/learn/tdd.html"&gt;"Unit Testing and Test Driven Development"&lt;/a&gt; which I decided to follow along with to get re-acquainted with testing javascript but then I ran into a problem running &lt;a href="https://mochajs.org/"&gt;mocha&lt;/a&gt;, or more specifically, running mocha crashed because it couldn't find &lt;a href="https://www.chaijs.com/"&gt;chai&lt;/a&gt; even though I'd followed the instructions to install it. So here goes what I did to fix it.
&lt;/p&gt;

&lt;p&gt;
This is another case where you can basically find the answer online if you look at the right page - but there seems to be more pages with the unhelpful answers and I use the fish shell and ubuntu so it's a little different from the stuff I found that did work.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf39b5ea" class="outline-2"&gt;
&lt;h2 id="orgf39b5ea"&gt;The Tutorial's Installation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf39b5ea"&gt;
&lt;p&gt;
This is how they tell you to install mocha and chai.
&lt;/p&gt;

&lt;p&gt;
First, update npm (assuming you've already installed it somehow).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo npm install npm@latest -g
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Then install mocha and chai using npm.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install mocha -g
npm install chai -g
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This right here is actually where the trouble starts. If you try to install things globally, you need to run it as root, thus the use of &lt;code&gt;sudo&lt;/code&gt; when updating &lt;code&gt;npm&lt;/code&gt;. But their instructions on installing &lt;code&gt;mocha&lt;/code&gt; and &lt;code&gt;chai&lt;/code&gt; don't say to use &lt;code&gt;sudo&lt;/code&gt;, which will result in a permission error, so did they forget to run it as root, or did they not mean to install it globally? I decided to  re-run their instructions as root.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo npm install mocha -g
sudo npm install chai -g
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This seemed to work, but when I ran &lt;code&gt;mocha&lt;/code&gt; on the folder where I put the code given in the tutorial:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mocha color_unit_tests/
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
It gave me an error.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Error: Cannot find module &lt;span class="s1"&gt;'chai'&lt;/span&gt;
Require stack:
- /home/hades/projects/ape-iron/p5tests/color_unit_tests/test.js
    at Module._resolveFilename &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1097:15&lt;span class="o"&gt;)&lt;/span&gt;
    at Module._load &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:942:27&lt;span class="o"&gt;)&lt;/span&gt;
    at Module.require &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1163:19&lt;span class="o"&gt;)&lt;/span&gt;
    at require &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/cjs/helpers:110:18&lt;span class="o"&gt;)&lt;/span&gt;
    at Object.&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;anonymous&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;/home/hades/projects/ape-iron/p5tests/color_unit_tests/test.js:5:16
&lt;span class="o"&gt;)&lt;/span&gt;
    at Module._compile &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1276:14&lt;span class="o"&gt;)&lt;/span&gt;
    at Module._extensions..js &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1330:10&lt;span class="o"&gt;)&lt;/span&gt;
    at Module.load &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:1139:32&lt;span class="o"&gt;)&lt;/span&gt;
    at Module._load &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/cjs/loader:980:12&lt;span class="o"&gt;)&lt;/span&gt;
    at ModuleWrap.&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;anonymous&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/esm/translators:169:29&lt;span class="o"&gt;)&lt;/span&gt;
    at ModuleJob.run &lt;span class="o"&gt;(&lt;/span&gt;node:internal/modules/esm/module_job:194:25&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So, maybe that wasn't the answer.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5def699" class="outline-2"&gt;
&lt;h2 id="org5def699"&gt;This Might Be the Wrong Way&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5def699"&gt;
&lt;p&gt;
I found a &lt;a href="https://stackoverflow.com/questions/43156635/chai-mocha-global-local"&gt;Stack Overflow&lt;/a&gt; question that described the exact problem I had, but one of the comments had this to say:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Mocha can be installed either locally or globally, but Chai can only be installed locally. Has to do with the way it is applied (i.e., to the specific app instance). – 
Steve Carey
May 30, 2020 at 21:11
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I don't know who "Steve Carey" is and whether what he is saying is true, but the &lt;a href="https://www.chaijs.com/guide/installatio"&gt;chai installation instructions&lt;/a&gt; do tell you to install it locally, rather than globally, but when you do this for every project you end up with &lt;code&gt;node_modules&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files all over the place. I suppose there's a reason for this, maybe to couple the version of chai you're using with the project, but I decided to try another way.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf582407" class="outline-2"&gt;
&lt;h2 id="orgf582407"&gt;The Local Global&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf582407"&gt;
&lt;p&gt;
&lt;a href="https://stackoverflow.com/a/13021677"&gt;This answer&lt;/a&gt; on Stack Overflow describes how to install npm-packages into your home directory as your global directory. It assumes you're using bash, though, so I had to change it up a little bit.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3dc0c70" class="outline-3"&gt;
&lt;h3 id="org3dc0c70"&gt;Make a local package directory&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org3dc0c70"&gt;
&lt;p&gt;
First I made a local package directory.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir ~/.npm-packages
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Then I created a file called &lt;code&gt;~/.npmrc&lt;/code&gt; that had one line in it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; /home/hades/.npm-packages
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
With &lt;code&gt;/home/hades/&lt;/code&gt; being my home-directory.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbeb6c5c" class="outline-3"&gt;
&lt;h3 id="orgbeb6c5c"&gt;Edit the Fish Configuration&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbeb6c5c"&gt;
&lt;p&gt;
At the bottom of the &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; file I added these lines.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; -x NPM_PACKAGES &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.npm-packages
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This is where &lt;code&gt;npm&lt;/code&gt; will install stuff if you tell it to install files globally once we're done. The folder can be named anything, I imagine, but it will need to match what's in the &lt;code&gt;.npmrc&lt;/code&gt; file.
&lt;/p&gt;

&lt;p&gt;
When &lt;code&gt;npm&lt;/code&gt; installs packages some of them will be executable commands (like &lt;code&gt;mocha&lt;/code&gt;) and so I had to update the fish &lt;code&gt;PATH&lt;/code&gt;.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fish_add_path &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.npm-packages/bin
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Although this will make &lt;code&gt;mocha&lt;/code&gt; available, &lt;code&gt;chai&lt;/code&gt; isn't an executable so you have to set the &lt;code&gt;NODE_PATH&lt;/code&gt; variable so that node will no where to look for modules to import.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; --export NODE_PATH &lt;span class="nv"&gt;$NPM_PACKAGES&lt;/span&gt;/lib/node_modules
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
I was originally appending the current contents of &lt;code&gt;NODE_PATH&lt;/code&gt; to the end, like you would with a regular path variable (&lt;code&gt;$NPM_PACKAGES/lib/node_modules:$NODE_PATH&lt;/code&gt;) but for some reason this breaks something and the variable doesn't get set. Or at least it was always empty when I tried to run &lt;code&gt;mocha&lt;/code&gt;. So the solution for me was to always clobber the entire path (the variable was empty before I started using it anyway).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc20996d" class="outline-2"&gt;
&lt;h2 id="orgc20996d"&gt;And Now&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc20996d"&gt;
&lt;p&gt;
Running the tests again:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mocha ../../ape-iron/p5tests/color_unit_tests/
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;


these are my first tests for p5js
  ✔ should be a string
  ✔ should be equal to awesome


2 passing (5ms)

&lt;/pre&gt;


&lt;p&gt;
The path is different because I'm writing this post in a different repository, but, anyway, it looks like it works.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org77f33ec" class="outline-2"&gt;
&lt;h2 id="org77f33ec"&gt;Sources&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org77f33ec"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Drechsel E. Install NPM into home directory with distribution nodejs package (Ubuntu) [Internet]. Stack Overflow. 2019 [cited 2023 Jun 8]. Available from: &lt;a href="https://stackoverflow.com/q/10081293"&gt;https://stackoverflow.com/q/10081293&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;Unit Testing and Test Driven Development | p5.js [Internet]. [cited 2023 Jun 8]. Available from: &lt;a href="https://p5js.org/learn/tdd.html"&gt;https://p5js.org/learn/tdd.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>fish</category><category>howto</category><category>node</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/fish-mocha-chai-a-local-global-installation-in-ubuntu/</guid><pubDate>Thu, 08 Jun 2023 23:29:32 GMT</pubDate></item><item><title>Ubuntu 22.04, Python 3.11 and the "emacs-jupyter Symbol's variable is void" Error</title><link>https://necromuralist.github.io/posts/python-311-and-emacs-jupyter-symbols-variable-is-void-error/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-orgf87be14" class="outline-2"&gt;
&lt;h2 id="orgf87be14"&gt;What This Is About&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf87be14"&gt;
&lt;p&gt;
Ubuntu 22.04 no longer let's you install python packages globally using pip by default (you can override it but they warn you not to). This has caused a cascade of broken parts on my system, since I use python so much. This particular case started with me trying to start the &lt;a href="https://docs.jupyter.org/en/latest/projects/kernels.html"&gt;&lt;code&gt;jupyter kernel&lt;/code&gt;&lt;/a&gt; so that I could run some python code in org-mode and getting (what looked like) an error and fixing it ended up uncovering the fact that working with the new policy for pip broke my emacs setup a little too, so this is a dump of how I got it back up and running again. I recorded it as I was fixing things so there might be a better way, but this is the first pass I took.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1c0defd" class="outline-2"&gt;
&lt;h2 id="org1c0defd"&gt;The Jupyter Kernel Warning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1c0defd"&gt;
&lt;p&gt;
This is what happened when I tried to start the jupyter kernel.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Ape-Iron&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;hades@erebus&lt;span class="w"&gt; &lt;/span&gt;~&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;jupyter&lt;span class="w"&gt; &lt;/span&gt;kernel
&lt;span class="o"&gt;[&lt;/span&gt;KernelApp&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Starting&lt;span class="w"&gt; &lt;/span&gt;kernel&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'python3'&lt;/span&gt;
&lt;span class="m"&gt;0&lt;/span&gt;.00s&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;Debugger&lt;span class="w"&gt; &lt;/span&gt;warning:&lt;span class="w"&gt; &lt;/span&gt;It&lt;span class="w"&gt; &lt;/span&gt;seems&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;frozen&lt;span class="w"&gt; &lt;/span&gt;modules&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;being&lt;span class="w"&gt; &lt;/span&gt;used,&lt;span class="w"&gt; &lt;/span&gt;which&lt;span class="w"&gt; &lt;/span&gt;may
&lt;span class="m"&gt;0&lt;/span&gt;.00s&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;debugger&lt;span class="w"&gt; &lt;/span&gt;miss&lt;span class="w"&gt; &lt;/span&gt;breakpoints.&lt;span class="w"&gt; &lt;/span&gt;Please&lt;span class="w"&gt; &lt;/span&gt;pass&lt;span class="w"&gt; &lt;/span&gt;-Xfrozen_modules&lt;span class="o"&gt;=&lt;/span&gt;off
&lt;span class="m"&gt;0&lt;/span&gt;.00s&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;disable&lt;span class="w"&gt; &lt;/span&gt;frozen&lt;span class="w"&gt; &lt;/span&gt;modules.
&lt;span class="m"&gt;0&lt;/span&gt;.00s&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;Note:&lt;span class="w"&gt; &lt;/span&gt;Debugging&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;proceed.&lt;span class="w"&gt; &lt;/span&gt;Set&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;PYDEVD_DISABLE_FILE_VALIDATION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;disable&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;val
idation.
&lt;span class="o"&gt;[&lt;/span&gt;KernelApp&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Connection&lt;span class="w"&gt; &lt;/span&gt;file:&lt;span class="w"&gt; &lt;/span&gt;/home/hades/.local/share/jupyter/runtime/kernel-a57a8231-bfea-468
&lt;span class="m"&gt;0&lt;/span&gt;-9f8b-6bf1b1e3a7ac.json
&lt;span class="o"&gt;[&lt;/span&gt;KernelApp&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;To&lt;span class="w"&gt; &lt;/span&gt;connect&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;client:&lt;span class="w"&gt; &lt;/span&gt;--existing&lt;span class="w"&gt; &lt;/span&gt;kernel-a57a8231-bfea-4680-9f8b-6bf1b1e3a7ac.json
&lt;span class="m"&gt;0&lt;/span&gt;.00s&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;Debugger&lt;span class="w"&gt; &lt;/span&gt;warning:&lt;span class="w"&gt; &lt;/span&gt;It&lt;span class="w"&gt; &lt;/span&gt;seems&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;frozen&lt;span class="w"&gt; &lt;/span&gt;modules&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;being&lt;span class="w"&gt; &lt;/span&gt;used,&lt;span class="w"&gt; &lt;/span&gt;which&lt;span class="w"&gt; &lt;/span&gt;may
&lt;span class="m"&gt;0&lt;/span&gt;.00s&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;debugger&lt;span class="w"&gt; &lt;/span&gt;miss&lt;span class="w"&gt; &lt;/span&gt;breakpoints.&lt;span class="w"&gt; &lt;/span&gt;Please&lt;span class="w"&gt; &lt;/span&gt;pass&lt;span class="w"&gt; &lt;/span&gt;-Xfrozen_modules&lt;span class="o"&gt;=&lt;/span&gt;off
&lt;span class="m"&gt;0&lt;/span&gt;.00s&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;disable&lt;span class="w"&gt; &lt;/span&gt;frozen&lt;span class="w"&gt; &lt;/span&gt;modules.
&lt;span class="m"&gt;0&lt;/span&gt;.00s&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;Note:&lt;span class="w"&gt; &lt;/span&gt;Debugging&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;proceed.&lt;span class="w"&gt; &lt;/span&gt;Set&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;PYDEVD_DISABLE_FILE_VALIDATION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;disable&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;validation.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
According to &lt;a href="https://stackoverflow.com/questions/75114841/debugger-warning-from-ipython-frozen-modules"&gt;this Stack Overflow post&lt;/a&gt; the output, though scary-looking, is only a warning, and you should be able to ignore it. It's happening because python 3.11 uses a "frozen" version of python with code objects for some of the built-in python modules that get loaded when the interpreter starts up already pre-allocated in order to reduce their load time during python's start up (i.e. they set it up to start faster), and their doing this means that the debugger might not work correctly - but since I'm not using the debugger, it shouldn't matter.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/whatsnew/3.11.html#faster-startup"&gt;Python Note on their freezing the modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.python.org/moin/Freeze"&gt;Python documentation of "freezing"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Ah, but there's always a problem lurking behind the advice to ignore "harmless warnings". Even with the kernel running, I couldn't get python/jupyter to work in my org-babel source blocks, so there was more to do.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org962b1db" class="outline-2"&gt;
&lt;h2 id="org962b1db"&gt;Getting emacs-jupyter Working&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org962b1db"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4c60c2f" class="outline-3"&gt;
&lt;h3 id="org4c60c2f"&gt;The Problem&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4c60c2f"&gt;
&lt;p&gt;
The first clue as to what might be happing was this line in emacs' startup messages.
&lt;/p&gt;

&lt;pre class="example" id="org16b2cb1"&gt;
Symbol’s function definition is void: org-babel-execute:jupyter-python
&lt;/pre&gt;

&lt;p&gt;
It looked like &lt;a href="https://github.com/emacs-jupyter/jupyter"&gt;emacs-jupyter&lt;/a&gt; wasn't loading properly. There was also this message in the output:
&lt;/p&gt;

&lt;pre class="example" id="orga915c96"&gt;
Error retrieving kernelspecs: (json-number-format 5)
&lt;/pre&gt;

&lt;p&gt;
Searching for that error-message brought up this bug-report on github:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/emacs-jupyter/jupyter/issues/436"&gt;https://github.com/emacs-jupyter/jupyter/issues/436&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Wherein the author of the bug-report mentions that loading emacs-jupyter is failing because it's trying to parse the output of jupyter and the warnings I was seeing causes it to fail (the bug-report references a different jupyter command, but the problematic output is the same).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0113c1a" class="outline-3"&gt;
&lt;h3 id="org0113c1a"&gt;Testing Turning Off the Warning&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0113c1a"&gt;
&lt;p&gt;
The first thing I tried was to follow the directions in the output and supress the warnings by setting an environment variable.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--universal&lt;span class="w"&gt; &lt;/span&gt;--export&lt;span class="w"&gt; &lt;/span&gt;PYDEVD_DISABLE_FILE_VALIDATION&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt; This is fish-shell syntax.
&lt;/p&gt;

&lt;p&gt;
I restarted the jupyter kernel and the warnings had gone away, so this much worked.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-orgc3bd71f" class="outline-3"&gt;
&lt;h3 id="orgc3bd71f"&gt;Really Turning Off the Warning&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc3bd71f"&gt;
&lt;p&gt;
Setting the environment variable at the command-line changes the environment for my user, but I'm running &lt;a href="https://www.emacswiki.org/emacs/EmacsAsDaemon"&gt;emacs as a daemon&lt;/a&gt; so I needed to edit the &lt;code&gt;systemctl&lt;/code&gt; file for my emacs service. I opened up the &lt;code&gt;~/.config/systemd/user/emacs.service&lt;/code&gt; file in emacs and added the line to set the environment variable for the emacs daemon.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"PYDEVD_DISABLE_FILE_VALIDATION=1"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Then I restarted the service.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;restart&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="w"&gt; &lt;/span&gt;emacs
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Which gave me a warning that my changes to the configuration have to be re-loaded before restarting the service.
&lt;/p&gt;

&lt;pre class="example" id="org08299bb"&gt;
Warning: The unit file, source configuration file or drop-ins of emacs.service changed on disk
. Run 'systemctl --user daemon-reload' to reload units.
&lt;/pre&gt;

&lt;p&gt;
Oops.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="w"&gt; &lt;/span&gt;daemon-reload
systemctl&lt;span class="w"&gt; &lt;/span&gt;restart&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="w"&gt; &lt;/span&gt;emacs
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This time the emacs startup messages didn't have the jupyter errors so it looked like things were fixed.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5bf600e" class="outline-2"&gt;
&lt;h2 id="org5bf600e"&gt;Swapping a Virtual Environment For pipx&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5bf600e"&gt;
&lt;p&gt;
Suppressing the warnings &lt;i&gt;pretty much&lt;/i&gt; solved the problem, but while I was getting this fixed I was also trying to set up a USB Windows installer using &lt;a href="https://github.com/WoeUSB/WoeUSB"&gt;WoeUSB&lt;/a&gt; and found that pipx couldn't install it because of a dependency error. Pipx is good at installing some standalone python commands but it won't install things that are just libraries and it seems to sometimes also have problems installing dependencies for the commands that it &lt;i&gt;will&lt;/i&gt; install. This has come up for me before, and the old solution was just for me to install the dependencies separately  using &lt;code&gt;pip&lt;/code&gt; before trying to install whatever it was that I was installing with pipx. Now, though, since ubuntu is trying to keep you from installing python modules globally, installing the dependencies means they either have to be available through &lt;code&gt;apt&lt;/code&gt; or you have to set up a virtual environment and install them there (when I say &lt;i&gt;have to&lt;/i&gt; I mean that since that's the way I know how to do it, that's the way I have to do it, not that there aren't other ways to do it that I just don't know about).
&lt;/p&gt;

&lt;p&gt;
Doing it this way is easy enough, since I use python virtual environments a lot anyway, but then I ran into another problem which was that once I got the virtual environment set up I found out I had to run woeUSB as root, which then bypasses the whole virtual environment setup. The solution to that was to pass the full path to the virtual environment's woeUSB launcher to &lt;code&gt;sudo&lt;/code&gt;, but it took enough time experimenting with other ways to do it before I got to that step that I decided I should minimalize how much I use pipx as much as possible - and in particular I should avoid using it with my emacs setup, since emacs will sometimss just quietly fail if there's a python-based error and it's only when things don't work that I'll realize there's a problem. So I decided to go with a dedicated virtual environment instead of installing jupyter with pipx.
&lt;/p&gt;

&lt;p&gt;
This, once again was not a big deal in hindsight, but it took enough experimenting with other options before coming to the conclusion that this was the way to go that I thought I should make a note to my future self about it. To get jupyter working with jupyter-emacs:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;create a virtual environment (&lt;code&gt;python3 -m venv emacs-environment&lt;/code&gt;) in the &lt;code&gt;.virtualenvs&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;activate it, then use pip to install &lt;code&gt;wheels&lt;/code&gt; and &lt;code&gt;jupyter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
In the &lt;code&gt;/.emacs.d/init.el&lt;/code&gt; file, activate the virtual environment &lt;i&gt;before&lt;/i&gt; you load emacs-jupyter or anything else that needs python:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;'pyvenv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;pyvenv-activate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"~/.virtualenvs/emacs-environment"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Then restart emacs. So far this seems to have fixed it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org27b8e2a" class="outline-2"&gt;
&lt;h2 id="org27b8e2a"&gt;Other Links&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org27b8e2a"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;EmacsWiki: Emacs As Daemon [Internet]. [cited 2023 May 28]. Available from: &lt;a href="https://www.emacswiki.org/emacs/EmacsAsDaemon#h5o-2"&gt;https://www.emacswiki.org/emacs/EmacsAsDaemon#h5o-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Schäfer J. pyvenv.el, Python virtual environment support for Emacs [Internet]. 2023 [cited 2023 May 28]. Available from: &lt;a href="https://github.com/jorgenschaefer/pyvenv"&gt;https://github.com/jorgenschaefer/pyvenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>jupyter</category><category>python</category><category>troubleshooting</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/python-311-and-emacs-jupyter-symbols-variable-is-void-error/</guid><pubDate>Thu, 25 May 2023 23:12:27 GMT</pubDate></item><item><title>Kernel Panic At the Lunar Lobster</title><link>https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/#orgcada2e4"&gt;What Is This About?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/#org837a1de"&gt;First Get It Working&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/#org07f2575"&gt;Not a Solution But A Finger Pointing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/#org3fe35bb"&gt;Blame It On the Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/#org42d9bab"&gt;From Nouveau To Nvidia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/#orgb63145e"&gt;And the End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcada2e4" class="outline-2"&gt;
&lt;h2 id="orgcada2e4"&gt;What Is This About?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgcada2e4"&gt;
&lt;p&gt;
I got a notification yesterday (May 3, 2023) that there's a new version of Ubuntu out (&lt;i&gt;Lunar Lobster - 23.04&lt;/i&gt;) so I ran &lt;code&gt;do-release-upgrade&lt;/code&gt; while watching a video (&lt;a href="https://en.wikipedia.org/wiki/An_Honest_Liar?useskin=vector"&gt;An Honest Liar&lt;/a&gt;) about James Randi. At the end of the upgrade there was some kind of error message about not being able to configure the Linux headers, which in retrospect should have worried me, but I was distracted so I just dismissed it. Then today when I booted up the computer I got an error message saying &lt;code&gt;Kernel Panic - Not syncing: VFS: Unable to mount root fs on unknown-block (0,0)&lt;/code&gt;. I managed to get it working (eventually) but now that Ubuntu's been around long enough and search engines seem to be choked with outdated answers I thought I'd document what I did in case it happens on another update.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org837a1de" class="outline-2"&gt;
&lt;h2 id="org837a1de"&gt;First Get It Working&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org837a1de"&gt;
&lt;p&gt;
The first thing I tried was to follow the answers on &lt;a href="https://askubuntu.com/questions/41930/kernel-panic-not-syncing-vfs-unable-to-mount-root-fs-on-unknown-block0-0"&gt;this Stackoverflow page&lt;/a&gt;. The only thing this did was get my computer up and running again - which is, I suppose a big thing, not to be minimized, but there's a lot of stuff on that page and the only relevant parts were:
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Reboot&lt;/li&gt;
&lt;li&gt;At the menu that comes up choose "Advanced Options for Ubuntu"&lt;/li&gt;
&lt;li&gt;Pick a prior version of the Linux kernel (5.19.26 in my case) and let it finish starting up.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org07f2575" class="outline-2"&gt;
&lt;h2 id="org07f2575"&gt;Not a Solution But A Finger Pointing&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org07f2575"&gt;
&lt;p&gt;
The first thing I tried from that page was from &lt;a href="https://askubuntu.com/a/939883"&gt;this answer&lt;/a&gt;:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo dpkg --configure -a
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This gave me &lt;code&gt;error processing package linux-image-6.2.0-generic (--configure)&lt;/code&gt;. So I searched some more and tried the suggestion from &lt;a href="https://askubuntu.com/a/517882"&gt;this askubuntu answer&lt;/a&gt;:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo dpkg --purge linux-image-6.2.0-20-generic
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This gives an error along the lines of "&lt;code&gt;dependency problems, not purging&lt;/code&gt;". Oi. So then I tried:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt autoremove
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This gave me another error:
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/purge-error.webp" alt="Purge Error" loading="lazy"&gt;
&lt;/p&gt;

&lt;p&gt;
This time in the error message it said to check out &lt;code&gt;/var/lib/dkms/nvidia/510.108.03/build/make.log&lt;/code&gt; which turned out not to have any useful information (to me, anyway) but it did tell me that there was something going on with my nvidia drivers that was causing the configuration of the new Linux kernel to fail.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3fe35bb" class="outline-2"&gt;
&lt;h2 id="org3fe35bb"&gt;Blame It On the Drivers&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3fe35bb"&gt;
&lt;p&gt;
&lt;i&gt;"Something going on with my nvidia drivers"&lt;/i&gt; being a little too vague for me to troubleshoot, I decided to go the brute force way and uninstall the nvidia-drivers. This actually proved a little harder than I thought it would be (which seems to always be the case, maybe I'm too optimistic about this kind of stuff). Every time I tried to run
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt remove nvidia-driver-510
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;apt&lt;/code&gt; would try and configure the Linux kernel and run into the same error that I had before and exit without uninstalling the driver. Some kind of chicken and the egg thing. So then I tried &lt;code&gt;dpkg&lt;/code&gt; instead of &lt;code&gt;apt&lt;/code&gt; first:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo dpkg --purge nvidia-driver-510
sudo apt autoremove
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;dpkg&lt;/code&gt; managed to uninstall the driver and running &lt;code&gt;apt autoremove&lt;/code&gt; not only cleaned out the unused packages but also triggered the kernel configuration and this time… no errors.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org42d9bab" class="outline-2"&gt;
&lt;h2 id="org42d9bab"&gt;From Nouveau To Nvidia&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org42d9bab"&gt;
&lt;p&gt;
After a reboot it started up okay and this time &lt;code&gt;uname -r&lt;/code&gt; showed that I was using the newer kernel (&lt;code&gt;6.2.0-20-generic&lt;/code&gt;). Yay. But now when I tried to re-install the nvidia drivers neither &lt;code&gt;ubuntu-drivers&lt;/code&gt; nor &lt;code&gt;apt&lt;/code&gt; seemed to know that they existed. It turns out that updating the ubuntu installation removes the proprietary drivers from the apt sources. So I launched the "Software &amp;amp; Updates" GUI.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/software-updates.webp" alt="Software &amp;amp; Updates" loading="lazy"&gt;
&lt;/p&gt;

&lt;p&gt;
And checked the "Proprietary drivers for devices (restricted)" button.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/proprietary-drivers.webp" alt="Proprietary Drivers" loading="lazy"&gt;
&lt;/p&gt;

&lt;p&gt;
I chose to update the apt listing when I closed the GUI and then installed the drivers at the command line:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo ubuntu-drivers install
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And then, after another reboot, now it works (I checked with &lt;code&gt;nvidia-smi&lt;/code&gt;).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb63145e" class="outline-2"&gt;
&lt;h2 id="orgb63145e"&gt;And the End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb63145e"&gt;
&lt;p&gt;
I haven't run any tests other than using the system but this seems to have fixed the problem. Well, the problem with the kernel, updating also broke all my python virtual environments, but, oh, well, better than a kernel panic, I suppose.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>nvidia</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/kernel-panic-at-the-lunar-lobster/</guid><pubDate>Wed, 03 May 2023 23:20:07 GMT</pubDate></item><item><title>Using Systemd To Enable Wake-On-Lan</title><link>https://necromuralist.github.io/posts/using-systemd-to-enable-wake-on-lan/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-systemd-to-enable-wake-on-lan/#orgd42d165"&gt;What is this about?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-systemd-to-enable-wake-on-lan/#orgc8a5bf1"&gt;So, how do you do it?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-systemd-to-enable-wake-on-lan/#org25850e5"&gt;So, That Fixed It?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-systemd-to-enable-wake-on-lan/#org263d19a"&gt;Where did you find out about this?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd42d165" class="outline-2"&gt;
&lt;h2 id="orgd42d165"&gt;What is this about?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd42d165"&gt;
&lt;p&gt;
I made a previous post (&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/"&gt;Enabling Wake-On-LAN (In Ubuntu 20.10)&lt;/a&gt;) about enabling Wake-On-LAN on my server, but it didn't seem to work after a re-boot. I looked in the logs using &lt;a href="https://www.commandlinux.com/man-page/man1/journalctl.1.html"&gt;journalctl&lt;/a&gt; and noticed that the &lt;code&gt;wol.service&lt;/code&gt; that I set up didn't get enabled after the re-boot. I thought about it and I remembered that when I was working with bluetooth and set up a service for it I had to make it wait for the bluetooth service to start first or it wouldn't work and realized that there was nothing in the &lt;code&gt;wol.service&lt;/code&gt; file to tell it to wait so I went poking around and found what I hope to be a fix.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc8a5bf1" class="outline-2"&gt;
&lt;h2 id="orgc8a5bf1"&gt;So, how do you do it?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc8a5bf1"&gt;
&lt;p&gt;
We need to update the &lt;code&gt;/etc/systemd/system/wol.service&lt;/code&gt; that I created in that earlier post. Previously it looked like this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Enable Wake On Lan&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;oneshot&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/sbin/ethtool --change enp4s0 wol g&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;basic.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
We need to update the &lt;code&gt;[Unit]&lt;/code&gt; section by adding
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;Requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network.target&lt;/span&gt;
&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
To let systemd know that we don't want this to run until after the network service has run. I also changed the &lt;code&gt;WantedBy&lt;/code&gt;  to &lt;code&gt;multi-user.target&lt;/code&gt;. So the updated file looks like this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Enable Wake On Lan&lt;/span&gt;
&lt;span class="na"&gt;Requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network.target&lt;/span&gt;
&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network.target&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;oneshot&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/sbin/ethtool --change enp4s0 wol g&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;multi-user.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now reload the daemon and re-enable it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl daemon-reload
sudo systemctl enable wol.service
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
To make sure I didn't introduce any errors I ran it once.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl start wol
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Then I rebooted it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo reboot now
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This time in journalctl I saw this:
&lt;/p&gt;

&lt;pre class="example" id="org42bca8e"&gt;
Dec 07 00:02:17 erebus systemd[1]: Finished Enable Wake On Lan.
Dec 07 00:02:17 erebus systemd[1]: wol.service: Succeeded.
&lt;/pre&gt;

&lt;p&gt;
And running &lt;code&gt;ethtool&lt;/code&gt; showed that it was enabled.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Wake-on: g
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org25850e5" class="outline-2"&gt;
&lt;h2 id="org25850e5"&gt;So, That Fixed It?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org25850e5"&gt;
&lt;p&gt;
Well, insofar as it's working now, yes. But since I change more than one thing I don't really know exactly what did it (was it one of the three lines I changed or all of them?). Anyway, since it works I'll let it lie for now.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org263d19a" class="outline-2"&gt;
&lt;h2 id="org263d19a"&gt;Where did you find out about this?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org263d19a"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The Arch wiki has a page on &lt;a href="https://wiki.archlinux.org/index.php/Wake-on-LAN"&gt;Wake-On-LAN&lt;/a&gt; that tells you many different ways to set it up – I copied the systemd file almost exactly. It has quite a bit of useful information (too much maybe), but not all the commands will work out of the box on Ubuntu (because it's Arch).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>how-to</category><category>networking</category><category>systemd</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/using-systemd-to-enable-wake-on-lan/</guid><pubDate>Sun, 06 Dec 2020 23:10:53 GMT</pubDate></item><item><title>Enabling Wake-On-LAN (In Ubuntu 20.10)</title><link>https://necromuralist.github.io/posts/enabling-wake-on-lan/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/#orgfc17bdf"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/#org1a76fce"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/#org5a312a4"&gt;Ethtool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/#orgeace4b9"&gt;Checking the Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/#orgeccb60d"&gt;Turn It On Temporarily&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/#org0d0ab69"&gt;Test It Out&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/#orge9ce366"&gt;Take Two&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/#orgdcfa6d6"&gt;Making It Permanent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/enabling-wake-on-lan/#org2d468bd"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/b&gt; The systemd configuration here isn't quite right, but since this post is kind of long and convoluted I made a standalone update about the systemd configuration file in &lt;a href="https://necromuralist.github.io/posts/using-systemd-to-enable-wake-on-lan/"&gt;this post&lt;/a&gt;.
&lt;/p&gt;

&lt;div id="outline-container-orgfc17bdf" class="outline-2"&gt;
&lt;h2 id="orgfc17bdf"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfc17bdf"&gt;
&lt;p&gt;
These are my notes on getting &lt;a href="https://en.wikipedia.org/wiki/Wake-on-LAN"&gt;Wake-On-LAN&lt;/a&gt; working in Ubuntu 20.10. I have a server that I use to run most of the computation on when I use emacs/jupyter but I have it in a corner upstairs and although it's only a little walk, I find that the fact that I have to stop what I'm doing and go upstairs to push that little button on the front makes me lazy and so it ends up running more than it has to so I thought I'd enable Wake-On-LAN so I can suspend it and wake it up whenever I need to. I'm only going to use suspend (&lt;a href="https://en.wikipedia.org/wiki/Advanced_Configuration_and_Power_Interface"&gt;APM&lt;/a&gt; S3). When I tried to use hibernate (S4) it ended up shutting down my machine (S5). Interestingly, my BIOS menu has an option to enable waking up from shutdown, but since my disk is encrypted, and I didn't set up a separate SSH server, I have to go enter the passphrase to unlock the disk before the operating system can boot up, so it kind of defeats its own purpose.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1a76fce" class="outline-2"&gt;
&lt;h2 id="org1a76fce"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1a76fce"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5a312a4" class="outline-3"&gt;
&lt;h3 id="org5a312a4"&gt;Ethtool&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5a312a4"&gt;
&lt;p&gt;
The command I used to set up Wake-On-LAN on the remote machine is called &lt;a href="https://en.wikipedia.org/wiki/Ethtool"&gt;ethtool&lt;/a&gt;. It's in the Ubuntu repositories but wasn't installed on my machine so I had to add it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install ethtool
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgeace4b9" class="outline-3"&gt;
&lt;h3 id="orgeace4b9"&gt;Checking the Interface&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgeace4b9"&gt;
&lt;p&gt;
From what I've read, not all ethernet interfaces support Wake-On-LAN (although I've never seen one that doesn't) so a quick check might be useful. First, find the name of your ethernet interface.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip a
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
My machine shows four interfaces so I'll just show the output for the interface I'm interested in rather than the whole output for the command.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2: enp4s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 38:d5:47:79:ab:0b brd ff:ff:ff:ff:ff:ff
    inet 192.168.86.97/24 brd 192.168.86.255 scope global dynamic noprefixroute enp4s0
       valid_lft 84752sec preferred_lft 84752sec
    inet6 fe80::685d:374d:a577:f787/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Ethtool uses the name of the interface, in this case it's &lt;code&gt;enp4s0&lt;/code&gt;, so we'll need to note that. Additionally, the machine that I used to wake up the machine needs the MAC address (&lt;code&gt;38:d5:47:79:ab:0b&lt;/code&gt;) so it'd be useful to write that down someplace. I'm waking it up from the LAN so the IP address isn't so important, and to be able to SSH into it I need to know it anyway, so it's really those two pieces of information that I need. Now to check if it supports Wake-On-LAN.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo ethtool enp4s0
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Ethtool will give you some information if you don't run it as root but for Wake-On-LAN you need to run it as root. The important lines in the output is near the bottom and it looks something like this if it supports Wake-On-LAN.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Supports Wake-on: pumbg
Wake-on: d
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The man-page for &lt;code&gt;ethtool&lt;/code&gt; tell you what that cryptic &lt;code&gt;pumbg&lt;/code&gt; means - the letters are different options that this interface supports for Wake-On-LAN. In this case they are:
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Option&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;p&lt;/td&gt;
&lt;td class="org-left"&gt;Wake on PHY activity&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;u&lt;/td&gt;
&lt;td class="org-left"&gt;Wake on unicast messages&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;m&lt;/td&gt;
&lt;td class="org-left"&gt;Wake on multicast messages&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;b&lt;/td&gt;
&lt;td class="org-left"&gt;Wake on broadcast messages&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;g&lt;/td&gt;
&lt;td class="org-left"&gt;Wake on MagicPacket messages&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
There's an additional option which is what the interface was set on – &lt;code&gt;d&lt;/code&gt; – as you can see in the last line of the output. This means &lt;i&gt;Disable (wake on nothing).  This option clears all previous options.&lt;/i&gt; I don't have many devices on my network, so I don't know that there's a lot of broadcasts, multicasts, etc. that would be waking it up all the time, but since one feature of Wake-On-LAN is that it only wakes the machine when it gets the "Magic Packet", only the &lt;code&gt;g&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; options matter. Now that I knew it was supported, it was time to try it out.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgeccb60d" class="outline-3"&gt;
&lt;h3 id="orgeccb60d"&gt;Turn It On Temporarily&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgeccb60d"&gt;
&lt;p&gt;
The &lt;code&gt;ethtool&lt;/code&gt; will turn on Wake-On-LAN, but (supposedly) everytime you reboot the machine it will reset to disabled. I haven't really tested this out, but I'll document how to make it permanent later, anyway.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo ethtool --change enp4s0 wol g
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So, as you might guess, we changed the Wake-On-LAN setting to listen for MagicPacket messages. You can check using the ethtool again.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo ethtool enp4s0
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The &lt;code&gt;Wake-on&lt;/code&gt; line should have changed to:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Wake-on: g
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now to suspend the machine so we can test it out.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl suspend
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0d0ab69" class="outline-3"&gt;
&lt;h3 id="org0d0ab69"&gt;Test It Out&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0d0ab69"&gt;
&lt;p&gt;
Now, on my local machine I needed to install &lt;a href="https://github.com/jpoliv/wakeonlan"&gt;wakeonlan&lt;/a&gt;. There's a surprising number of programs to send the Magic Packet, but this just happened to be the one I used.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install wakeonlan
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The default way to use &lt;code&gt;wakeonlan&lt;/code&gt; is apparently to just pass it the MAC address of the computer to wake up, and it will send the Magic Packet out as a broadcast, so that's what I did.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wakeonlan 38:d5:47:79:ab:0b
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And then I pinged the machine and I waited. And I waited. And I waited… Eventually I went upstairs and saw that it was still sleeping so I pushed the power button to wake it up and went back downstairs.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge9ce366" class="outline-3"&gt;
&lt;h3 id="orge9ce366"&gt;Take Two&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge9ce366"&gt;
&lt;p&gt;
Something wasn't right so I SSHd into the server and started up &lt;a href="https://www.tcpdump.org/"&gt;tcpdump&lt;/a&gt; to see if the packets were going through.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tcpdump -i enp4s0 '(udp and port 7) or (udp and port 9)'
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Which gave me this output:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on enp4s0, link-type EN10MB (Ethernet), capture size 262144 bytes
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And then I sent the Magic Packet again.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wakeonlan 38:d5:47:79:ab:0b
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
…And nothing happened. For some reason the packets weren't getting picked up by the machine. Luckily, &lt;code&gt;wakeonlan&lt;/code&gt; lets you pass in an IP address as an option. The man page recommends using a broadcast address, but I have the IP addresses of my machines on the LAN reserved on my router/access-point so I just passed in the full address (I did try the LAN broadcast and it worked too).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wakeonlan -i erebus 38:d5:47:79:ab:0b
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
I have my machine's IP address aliased in my &lt;code&gt;/etc/hosts&lt;/code&gt; file so &lt;code&gt;erebus&lt;/code&gt; is just an alias for the machine's IP address. The subnet broadcast version looked like this.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wakeonlan -i 192.168.86.255 38:d5:47:79:ab:0b
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The output from &lt;code&gt;tcpdump&lt;/code&gt; for the first packet looked like this.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on enp4s0, link-type EN10MB (Ethernet), capture size 262144 bytes
20:47:11.689587 IP 192.168.86.141.34805 &amp;gt; erebus.discard: UDP, length 102
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So, something was different. I suspended the machine again and sent the Magic Packet and this time it worked. Go figure.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdcfa6d6" class="outline-3"&gt;
&lt;h3 id="orgdcfa6d6"&gt;Making It Permanent&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdcfa6d6"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgefa6863" class="outline-4"&gt;
&lt;h4 id="orgefa6863"&gt;Set It Up&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgefa6863"&gt;
&lt;p&gt;
The reasons that I said earlier that the Wake-On-LAN setting "supposedly" is temporary is that:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;I haven't really re-booted that machine to test it out (I have rebooted, but I haven't disable the &lt;a href="https://en.wikipedia.org/wiki/Systemd"&gt;systemd&lt;/a&gt; service that I'm documenting here).&lt;/li&gt;
&lt;li&gt;The machine that I'm typing this on had Wake-On-LAN enabled and it doesn't have a &lt;code&gt;systemd&lt;/code&gt; service enabled.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
But, really, I don't remember even enabling Wake-On-LAN on this machine so maybe it just was the default and I didn't realise it… another thing I should look into one of these days. Anyway, to make a service that always enables Wake-On-LAN the first step is to find the path to &lt;code&gt;ethtool&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;which ethtool
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
In my case the path was &lt;code&gt;/sbin/ethtool&lt;/code&gt;, so once you know this you can create a file at &lt;code&gt;/etc/systemd/system/wol.service&lt;/code&gt; (I think you can use another systemd sub-folder, and you can name the file anything you want, within reason, but this one seems to work well enough). In this file you put settings that look something like this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Enable Wake On Lan&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;oneshot&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/sbin/ethtool --change enp4s0 wol g&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;basic.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The only thing specific to my machine is &lt;code&gt;enp4s0&lt;/code&gt;, the name of the ethernet interface, although it's possible that the path to the &lt;code&gt;ethtool&lt;/code&gt; executable might be different too… but it should be the same on Ubuntu 20.10, anyway.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org034b6e1" class="outline-4"&gt;
&lt;h4 id="org034b6e1"&gt;Enable The Service&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org034b6e1"&gt;
&lt;p&gt;
To enable it you can do this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl daemon-reload
sudo systemctl enable wol.service
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Where &lt;code&gt;wol.service&lt;/code&gt; is the name of the file you created with the settings. You can check its status if you want.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl status wol
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And that's that.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2d468bd" class="outline-2"&gt;
&lt;h2 id="org2d468bd"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2d468bd"&gt;
&lt;p&gt;
So, that's how I got one machine working with Wake-On-LAN. Hopefully I won't have to look so hard the next time. Here's the pages that I stole this from.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://www.techrepublic.com/article/how-to-enable-wake-on-lan-in-ubuntu-server-18-04/"&gt;TechRepublic&lt;/a&gt; on using &lt;code&gt;ethtool&lt;/code&gt; and setting up a &lt;code&gt;systemd&lt;/code&gt; service for this (don't use the systemd file here, though).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://askubuntu.com/questions/1792/how-can-i-suspend-hibernate-from-command-line"&gt;Stack Overflow&lt;/a&gt; on how to suspend and hibernate from the command-line&lt;/li&gt;
&lt;li&gt;&lt;a href="https://askubuntu.com/questions/3369/what-is-the-difference-between-hibernate-and-suspend"&gt;Stack Overflow&lt;/a&gt; on what the difference is between suspend and hibernate&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unix.stackexchange.com/questions/318137/wake-on-lan-not-working-on-ubuntu-16-04"&gt;Stack Overflow&lt;/a&gt; on using &lt;code&gt;tcpdump&lt;/code&gt; to look for the Magic Packets on the remote machine&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/2177687/open-file-via-ssh-and-sudo-with-emacs"&gt;Stack Overflow&lt;/a&gt; on editing remote files as root with emacs (not documented here, but maybe later)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/95631/open-a-file-with-su-sudo-inside-emacs"&gt;Stack Overflow&lt;/a&gt; on editing a local file as root with emacs (not used here, but I can never remember the syntax)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>networking</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/enabling-wake-on-lan/</guid><pubDate>Sun, 29 Nov 2020 01:57:35 GMT</pubDate></item><item><title>Mounting An Encrypted USB Drive From the Command Line</title><link>https://necromuralist.github.io/posts/mounting-an-encrypted-usb-drive/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/mounting-an-encrypted-usb-drive/#org8565a36"&gt;Some Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/mounting-an-encrypted-usb-drive/#org3094b0a"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/mounting-an-encrypted-usb-drive/#orga9fbed4"&gt;Find the USB Device Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/mounting-an-encrypted-usb-drive/#org1edcc50"&gt;Unlock the Drive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/mounting-an-encrypted-usb-drive/#orgb9f1a8d"&gt;Mount the Drive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/mounting-an-encrypted-usb-drive/#org27ebd7e"&gt;End&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/mounting-an-encrypted-usb-drive/#org0c314fe"&gt;Sources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8565a36" class="outline-2"&gt;
&lt;h2 id="org8565a36"&gt;Some Background&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8565a36"&gt;
&lt;p&gt;
I have a headless server that I use as sort of a remote heavy-lifter for my code and attached to it is a USB drive that I use for data files. Since USB drives are portable I decided to encrypt it with LUKS, which is easy enough to use on the desktop in ubuntu (the "files" GUI prompts you for the password and handles everything for you after that) but since I use the server headless I have to be able to mount it from the command line. If you search for it there's a Stack Overflow thread that tells you mostly how to do it but:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;I didn't know the &lt;code&gt;/dev&lt;/code&gt; file to use&lt;/li&gt;
&lt;li&gt;Like many Stack Overflow threads there's a lot of noise that isn't relevant to me&lt;/li&gt;
&lt;li&gt;I want to be able to remember how to do this without having to search for it and click through different links to figure out which one has the right information for me&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
So, here's the subset of steps that I did to mount the drive.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3094b0a" class="outline-2"&gt;
&lt;h2 id="org3094b0a"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3094b0a"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga9fbed4" class="outline-3"&gt;
&lt;h3 id="orga9fbed4"&gt;Find the USB Device Name&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga9fbed4"&gt;
&lt;p&gt;
The first think to do is to make sure that the USB device is recognized by the operating system.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsusb
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Which produced a lot of listings, the most relevant one being:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bus 001 Device 002: ID 1058:0748 Western Digital Technologies, Inc. My Passport (WDBKXH, WDBY8L)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Which is the drive I wanted to unencrypt and mount. The next thing is to find the file name (in this case I know the name of the device - "My Passport" - so I used &lt;code&gt;grep&lt;/code&gt;, otherwise I'd use &lt;code&gt;less&lt;/code&gt;).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo fdisk -l | grep "My Passport" -B 1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Which currently gives this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Partition 2 does not start on physical sector boundary.
Disk /dev/sdb: 931.49 GiB, 1000170586112 bytes, 1953458176 sectors
Disk model: My Passport 0748
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
It might have looked a little different when I originally ran it since the drive is already mounted but whatever is in that second line is what we want.
&lt;/p&gt;

&lt;p&gt;
That is the name we need for the drive, but we're going to mount a partition so you need to know the partition name. &lt;code&gt;lsblk&lt;/code&gt; will show it to us.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsblk -e7
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Which gave me the output:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;NAME                        MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT
sda                           8:0    0 931.5G  0 disk  
├─sda1                        8:1    0     1M  0 part  
├─sda2                        8:2    0     1G  0 part  /boot
└─sda3                        8:3    0 930.5G  0 part  
  └─dm_crypt-0              253:0    0 930.5G  0 crypt 
    └─ubuntu--vg-ubuntu--lv 253:1    0   200G  0 lvm   /
sdb                           8:16   0 931.5G  0 disk  
└─sdb1                        8:17   0 931.5G  0 part
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now you can see that the partion for our disk is &lt;code&gt;sdb1&lt;/code&gt; (the last row where it's shown to be a child of &lt;code&gt;sdb&lt;/code&gt; and that its TYPE is a partition).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1edcc50" class="outline-3"&gt;
&lt;h3 id="org1edcc50"&gt;Unlock the Drive&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1edcc50"&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/b&gt; This works, but there's an alternative way to do it with &lt;a href="https://manpages.ubuntu.com/manpages/xenial/man8/cryptsetup.8.html"&gt;cryptsetup&lt;/a&gt; that I find a little easier (but not much). I documented that command as if it continued from this point in &lt;a href="https://necromuralist.github.io/posts/mount-an-encrypted-drive-using-cryptsetup/"&gt;this post&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Next unlock the drive. When you do this it will create a file in &lt;code&gt;/dev/mapper/&lt;/code&gt; that you'll need so it would be a good idea to see what's there before you run it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls /dev/mapper/
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And then do the decrypting, remembering that the partition is &lt;code&gt;sdb1&lt;/code&gt; and like our disk the file is in the &lt;code&gt;/dev&lt;/code&gt; directory.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;udisksctl unlock -b /dev/sdb1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
This will bring up two prompts for you to fill out which are (confusingly) "Passphrase:" and "Password:". The first prompt ("Passphrase") is what you entered when the disk was encrypted so you need to enter whatever you normally enter to decrypt the disk. The second prompt ("Password:") is your admin password so that the program can run as root (assuming you have the right privileges).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb9f1a8d" class="outline-3"&gt;
&lt;h3 id="orgb9f1a8d"&gt;Mount the Drive&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb9f1a8d"&gt;
&lt;p&gt;
If the last command went okay you now need to mount it. There's going to be a file in &lt;code&gt;/dev/mapper&lt;/code&gt; that you need to know. When I did it there was only one new file (&lt;code&gt;luks-3eea956c-e684-4bcb-a640-97d0c8c5a700&lt;/code&gt;) so I didn't have to do anything special to get it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;udisksctl mount -b /dev/mapper/luks-3eea956c-e684-4bcb-a640-97d0c8c5a700
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
If you run the command &lt;code&gt;lsblk -e7&lt;/code&gt; it will show you a tree with the &lt;code&gt;/dev/mapper/&lt;/code&gt; file mapped to the mount point where you can access it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sdb                                             8:16   0 931.5G  0 disk  
└─sdb1                                          8:17   0 931.5G  0 part  
  └─luks-3eea956c-e684-4bcb-a640-97d0c8c5a700 253:3    0 931.5G  0 crypt /media/hades/WDData
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So in this case the drive is accessible at &lt;code&gt;/media/hades/WDData&lt;/code&gt; (it's always the same place but I wanted to document the &lt;code&gt;lsblk -e7&lt;/code&gt; command).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org27ebd7e" class="outline-2"&gt;
&lt;h2 id="org27ebd7e"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org27ebd7e"&gt;
&lt;p&gt;
So, for my future self, if you need to mount an encrypted USB drive without a GUI, there you go. The two main steps are find the file for the USB drive and then run udisksctl.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo fdisk -l
udisksctl unlock -b /dev/sdb1
udisksctl mount -b /dev/mapper/luks-3eea956c-e684-4bcb-a640-97d0c8c5a700
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0c314fe" class="outline-3"&gt;
&lt;h3 id="org0c314fe"&gt;Sources&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0c314fe"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://sourcedigit.com/21292-list-usb-devices-ubuntu-find-usb-device-name-linux-ubuntu/"&gt;sourcedigit.com&lt;/a&gt; - "How To List USB Devices On Ubuntu – Find USB Device Name On Linux Ubuntu"&lt;/li&gt;
&lt;li&gt;&lt;a href="https://askubuntu.com/questions/63594/mount-encrypted-volumes-from-command-line"&gt;Stack Overflow&lt;/a&gt; - "Mount encrypted volumes from command line?"&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>how-to</category><category>luks</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/mounting-an-encrypted-usb-drive/</guid><pubDate>Fri, 25 Sep 2020 01:26:30 GMT</pubDate></item><item><title>Changing the First Day of the Week in Ubuntu 20.04</title><link>https://necromuralist.github.io/posts/changing-the-first-day-of-the-week-in-ubuntu-2004/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org2c9c49c" class="outline-2"&gt;
&lt;h2 id="org2c9c49c"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2c9c49c"&gt;
&lt;p&gt;
I like to have my calendars set up with Monday as the first day of the week, but being that I live in the United States most calendars default to starting the week on Sunday - including the Gnome calendar applet - and while searching pulls up quite a number of pages about how to do it, no one of them quite worked for me so I'm documenting what did work. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org74bb130" class="outline-2"&gt;
&lt;h2 id="org74bb130"&gt;Making the Changes&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org74bb130"&gt;
&lt;p&gt;
First, over at &lt;a href="http://www.beginninglinux.com/home/gnome/change-first-day-of-week-to-monday-on-ubuntu-gnome-calendar"&gt;Beginning Linux&lt;/a&gt; they mentioned that you can find out which file to edit using the &lt;a href="https://man7.org/linux/man-pages/man1/locale.1.html"&gt;locale&lt;/a&gt; command.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# run this in the shell&lt;/span&gt;
locale&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
LANG=en_US.UTF-8
&lt;/pre&gt;


&lt;p&gt;
The second line above (&lt;code&gt;LANG=en_US.UTF-8&lt;/code&gt;) is the output of the command and what we need to note here is that &lt;code&gt;en_US.UTF-8&lt;/code&gt; means that there's a file in &lt;code&gt;/usr/share/i18n/locales/&lt;/code&gt; named &lt;code&gt;en_US&lt;/code&gt; that's being used for my configuration so I made a copy of that file (in case I messed something up) and the opened it up in emacs (any changes you make in this directory have to be done as root). 
&lt;/p&gt;

&lt;p&gt;
Now, what that Beginning Linux post and most other posts say to do is to change the line &lt;code&gt;first_weekday 1&lt;/code&gt; (meaning start on Sunday) to &lt;code&gt;first_weekday 2&lt;/code&gt; (start on Monday). The problem with this is that the &lt;code&gt;en_US&lt;/code&gt; file no longer has that line in it, so you have to add it. Not a big deal, I thought, so I added it as the last line in the file and re-generated the configuration using the &lt;a href="http://manpages.ubuntu.com/manpages/focal/man8/locale-gen.8.html"&gt;locale-gen&lt;/a&gt; command.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;locale-gen
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Which gave me errors like this:
&lt;/p&gt;

&lt;pre class="example" id="orgee925e0"&gt;
Generating locales (this might take a while)...
  en_AG.UTF-8...failed to set locale!
en_US:180: syntax error: not inside a locale definition section
 done
&lt;/pre&gt;

&lt;p&gt;
It turns out that the file is actually broken into sections and you can't just stick the line any old place, you have to stick it in the right block. If you look in one of the other files that has the line (pick one by grepping &lt;code&gt;first_weekday&lt;/code&gt;) you'll see that the block we want starts with  &lt;code&gt;LC_TIME&lt;/code&gt; and ends with &lt;code&gt;END LC_TIME&lt;/code&gt; so I put the line in at the end of the block like so:
&lt;/p&gt;

&lt;pre class="example" id="orge623e75"&gt;
% Define the first day of the week to be displayed in a calendar.
% This weekday is relative to the date defined in the &amp;lt;week&amp;gt; keyword.

first_weekday 2
END LC_TIME
&lt;/pre&gt;

&lt;p&gt;
I copied the comments from one of the Ukranian settings files. I picked Ukranian because I thought UK stood for United Kingdom, but it turns out they use GB to indicate Great Britain instead - anyway, it works. The comment suggests that you might also be able to change the &lt;code&gt;week&lt;/code&gt; definition instead of adding this line, but here's what that line looks like.
&lt;/p&gt;

&lt;pre class="example" id="org74a0b49"&gt;
week 7;19971130;1
&lt;/pre&gt;

&lt;p&gt;
It seems safer to stick with the &lt;code&gt;first_weekday&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
Next I re-ran the locale-gen command.
&lt;/p&gt;

&lt;pre class="example" id="org1070348"&gt;
sudo locale-gen
&lt;/pre&gt;

&lt;p&gt;
And this time it ran without errors. 
&lt;/p&gt;

&lt;p&gt;
So, all fixed, then, right? Well, not quite, because this doesn't update the GUI. There are, once again, many pages telling you how to reload the GUI without logging out, but some, like the Beginning Linux page use names of processes or commands that don't seem to exist any more, or, in one case caused the GUI to raise an error message so I decided it wasn't really worth it to mess with the GUI like that when all you have to do is log out and back in - or not care about it until the next time you log in. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc04e7db" class="outline-2"&gt;
&lt;h2 id="orgc04e7db"&gt;The End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc04e7db"&gt;
&lt;p&gt;
Part of the motivation for writing this is that it took me more time searching for what worked than it did to make the actual change so maybe next time I'll remember that I wrote this down if I ever have to do this again, which I'm sure I will.
&lt;/p&gt;

&lt;p&gt;
As a final note I should mention that the accepted answer to this post &lt;a href="https://askubuntu.com/questions/197613/monday-as-first-day-in-gnome-shell-instead-of-sunday"&gt;on Stack Overflow&lt;/a&gt; pretty much tells you what to do, it's only missing telling you how to double-check which file to edit, but I didn't find it until after I'd made the changes. Also this page on &lt;a href="https://linuxconfig.org/how-to-restart-gui-on-ubuntu-20-04-focal-fossa"&gt;Linux Config&lt;/a&gt; has things to try to restart the GUI without logging out, but trying Method 3 (restarting the gnome-shell) is what gave me the error, but if for some reason you really can't log out and you need the week to start on Monday right now, maybe it's something to try.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ubuntu</category><guid>https://necromuralist.github.io/posts/changing-the-first-day-of-the-week-in-ubuntu-2004/</guid><pubDate>Thu, 13 Aug 2020 02:00:04 GMT</pubDate></item><item><title>Encrypt Dropbox Folders on Ubuntu With CryFS</title><link>https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org4845bbc"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#orgf464dd8"&gt;Encrypt the Folders&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org51e7fb9"&gt;Install It&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org6b4314a"&gt;Create the Target and Source Folders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org24eaca8"&gt;Unmount It&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org1421c74"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4845bbc" class="outline-2"&gt;
&lt;h2 id="org4845bbc"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4845bbc"&gt;
&lt;p&gt;
This is one way to encrypt the contents for cloud-synchronized folders using &lt;a href="https://www.cryfs.org/"&gt;CryFS&lt;/a&gt;. I'm going to illustrate it using the &lt;code&gt;Dropbox&lt;/code&gt; folder that the &lt;a href="https://www.dropbox.com/"&gt;dropbox client&lt;/a&gt; creates.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf464dd8" class="outline-2"&gt;
&lt;h2 id="orgf464dd8"&gt;Encrypt the Folders&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf464dd8"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org51e7fb9" class="outline-3"&gt;
&lt;h3 id="org51e7fb9"&gt;Install It&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org51e7fb9"&gt;
&lt;p&gt;
Ubuntu currently (November 10, 2018) has &lt;code&gt;CryFS&lt;/code&gt; as part of its packages so you can install it with apt.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install cryfs
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6b4314a" class="outline-3"&gt;
&lt;h3 id="org6b4314a"&gt;Create the Target and Source Folders&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org6b4314a"&gt;
&lt;p&gt;
The &lt;code&gt;cryfs&lt;/code&gt; command will create the two folders and set them up for you. The syntax is &lt;code&gt;cryfs &amp;lt;target&amp;gt; &amp;lt;source&amp;gt;&lt;/code&gt;. The &lt;code&gt;target&lt;/code&gt; will contain the encrypted folders so it will go in the Dropbox folder, while the &lt;code&gt;source&lt;/code&gt; will hold the unencrypted files.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cryfs Dropbox/encrypted dropbox_source
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This is the same command you would use on another computer to set-up the existing encrypted folder on your new computer. The &lt;code&gt;source&lt;/code&gt; folder can be named differently, but the &lt;code&gt;target&lt;/code&gt; folder and the password need to be the same one you used when you created it. The files in the &lt;code&gt;source&lt;/code&gt; go away when you unmount it (see &lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org24eaca8"&gt;below&lt;/a&gt;) so you will have to re-mount it whenever you unmount it or log out or restart your computer.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/b&gt; The &lt;a href="https://www.cryfs.org/tutorial"&gt;cryfs tutorial&lt;/a&gt; has a warning that if two different computers access the mounted folder at the same time it can corrupt the files so you have to make sure to unmount it on one computer before mounting it on another. This seems like a really bad thing, but I guess you should/oughta make backups of the unencrypted stuff just in case.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org24eaca8" class="outline-3"&gt;
&lt;h3 id="org24eaca8"&gt;Unmount It&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org24eaca8"&gt;
&lt;p&gt;
The old way to unmount it was using &lt;a href="http://manpages.ubuntu.com/manpages/cosmic/man1/fusermount.1.html"&gt;fusermount&lt;/a&gt; but they've added a &lt;code&gt;cryfs-unmount&lt;/code&gt; command which you can/should use instead.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cryfs-unmount dropbox_source
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This was the old way.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fusermount -u dropbox_source
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Since you are doing all this within your home directory you don't need root privileges (except to install &lt;code&gt;cryfs&lt;/code&gt; with apt).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1421c74" class="outline-2"&gt;
&lt;h2 id="org1421c74"&gt;References&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1421c74"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;I got this from &lt;a href="https://www.linuxbabe.com/ubuntu/encrypt-dropbox-ubuntu-16-04-17-10-desktop-server"&gt;Linux Babe&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;But the &lt;a href="https://www.cryfs.org/tutorial"&gt;CryFS Tutorial&lt;/a&gt; is pretty straight-forward, it just skips the part about installing cryfs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>dropbox</category><category>encryption</category><category>linux</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/</guid><pubDate>Mon, 10 Dec 2018 20:41:05 GMT</pubDate></item></channel></rss>