<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about Web Development)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/cat_web-development.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Thu, 06 Aug 2020 02:45:40 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Flask-Bibliography</title><link>https://necromuralist.github.io/posts/reference/flask-bibliography/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org2d81805" class="outline-2"&gt;
&lt;h2 id="org2d81805"&gt;Web Sockets&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2d81805"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org08ad455" class="outline-3"&gt;
&lt;h3 id="org08ad455"&gt;Flask-SocketIO&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org08ad455"&gt;
&lt;p&gt;
This combines flask with &lt;a href="https://socket.io"&gt;socket.io&lt;/a&gt; (so there's an extra thing to learn, maybe). The author made a &lt;a href="https://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent"&gt;blog post&lt;/a&gt; about it that gives a little more background around it and what advantages he thinks it has over flask-sockets. He also gave a talk at PyCon Ireland 2017 that is on &lt;a href="https://www.youtube.com/watch?v=Jwux1TPZUwg&amp;amp;index=1&amp;amp;list=PLNeBS51Q0m98FAWRHwQLjV1vja2ZdWpCb"&gt;YouTube&lt;/a&gt;.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://flask-socketio.readthedocs.io/en/latest/"&gt;"Flask-SocketIO Documentation." flask-socketio.readthedocs.io. N. p., 2018. Web. 13 Feb. 2018.&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href="https://secdevops.ai/weekend-project-part-1-creating-a-real-time-web-based-application-using-flask-vue-and-socket-b71c73f37df7"&gt;"Weekend Project (Part 1): Creating A Real-Time Web-Based Application Using Flask, Vue, And…." SecDevOps. N. p., 2017. Web. 13 Feb. 2018.&lt;/a&gt; This is a two-part article with a fairly complex example.&lt;/li&gt;

&lt;li&gt;&lt;a href="https://www.twilio.com/blog/2014/11/choose-your-own-adventure-presentations-with-reveal-js-python-and-websockets.html"&gt;"Choose Your Own Adventure Presentations With Reveal.Js, Python And Websockets." Twilio.com. N. p., 2014. Web. 13 Feb. 2018.&lt;/a&gt; This example shows how to use twilio and websockets to let viewers decide what the next slide in a presentation will be.&lt;/li&gt;

&lt;li&gt;&lt;a href="http://www.matthieuamiguet.ch/blog/synchronize-clients-flask-application-websockets"&gt;" Synchronize Clients Of A Flask Application With Websockets | Matthieu Amiguet ." Matthieuamiguet.ch. N. p., 2015. Web. 13 Feb. 2018.&lt;/a&gt; An example of how to synchronize sliders across two clients.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org56c71a3" class="outline-3"&gt;
&lt;h3 id="org56c71a3"&gt;Flask Sockets&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org56c71a3"&gt;
&lt;p&gt;
This is a project from &lt;a href="https://www.kennethreitz.org"&gt;Kenneth Reitz&lt;/a&gt;, the guy who made &lt;a href="http://docs.python-requests.org/en/master/"&gt;requests&lt;/a&gt;. On the one hand, it looks much simpler, on the other it doesn't look like it has as many options. Maybe a good starter that would later need to be swapped out for Socket IO if it got complex enough.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/kennethreitz/flask-sockets"&gt;"Kennethreitz/Flask-Sockets." GitHub. N. p., 2018. Web. 13 Feb. 2018.&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/python-websockets"&gt;"Using Websockets On Heroku With Python | Heroku Dev Center." Devcenter.heroku.com. N. p., 2018. Web. 13 Feb. 2018.&lt;/a&gt; This is a more complete example of how to use flask-sockets and deploy it on Heroku.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org2d5c3e8" class="outline-3"&gt;
&lt;h3 id="org2d5c3e8"&gt;Flask-uWSGI-Websocket&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org2d5c3e8"&gt;
&lt;p&gt;
&lt;a href="https://github.com/zeekay/flask-uwsgi-websocket"&gt;This&lt;/a&gt; looks like it's halfway between flask-sockets and flask-socketIO.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>bibliography</category><category>flask</category><guid>https://necromuralist.github.io/posts/reference/flask-bibliography/</guid><pubDate>Tue, 13 Feb 2018 19:44:32 GMT</pubDate></item><item><title>Monitoring Events With Chromium</title><link>https://necromuralist.github.io/posts/monitoring-events-with-chromium/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div&gt;&lt;p&gt;If you have a chromium-based browser you can find out what events are affecting a particular item on you web-page using the &lt;a class="reference external" href="https://developers.google.com/web/tools/chrome-devtools/debug/command-line/events?hl=en"&gt;monitorEvents&lt;/a&gt; function.&lt;/p&gt;
&lt;div class="section" id="monitoring-events"&gt;
&lt;h2&gt;Monitoring Events&lt;/h2&gt;
&lt;div class="section" id="inspect-the-element"&gt;
&lt;h3&gt;Inspect The Element&lt;/h3&gt;
&lt;p&gt;First right-click on the element that you are interested in and pick "Inspect element" from the context-menu.&lt;/p&gt;
&lt;img alt="inspect_element.png" src="https://necromuralist.github.io/posts/monitoring-events-with-chromium/inspect_element.png"&gt;
&lt;/div&gt;
&lt;div class="section" id="enter-the-event-type"&gt;
&lt;h3&gt;Enter the Event Type&lt;/h3&gt;
&lt;p&gt;There are multiple event types to chooske from (&lt;em&gt;mouse&lt;/em&gt;, &lt;em&gt;key&lt;/em&gt;, &lt;em&gt;touch&lt;/em&gt;, and &lt;em&gt;control&lt;/em&gt;). In this example I'll monitor mouse events. In the javascript console enter:&lt;/p&gt;
&lt;pre class="code javascript"&gt;&lt;a name="rest_code_325961e507b64b5ba3fbcc021989891a-1"&gt;&lt;/a&gt;&lt;span class="nx"&gt;monitorEvents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"mouse"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;$0&lt;/code&gt; is a variable that refers to the element you are inspecting and &lt;code class="docutils literal"&gt;"mouse"&lt;/code&gt; tells it to listen for mouse events&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, as you do things with your mouse on the element, the console output will show you the the events as they happen.&lt;/p&gt;
&lt;img alt="mouse_events.png" src="https://necromuralist.github.io/posts/monitoring-events-with-chromium/mouse_events.png"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="listing-event-listeners"&gt;
&lt;h2&gt;Listing Event Listeners&lt;/h2&gt;
&lt;p&gt;To see the event-listeners associated with the element enter the following at the console.&lt;/p&gt;
&lt;pre class="code javascript"&gt;&lt;a name="rest_code_f3d5540682b84b09b0bce0e2326d52f2-1"&gt;&lt;/a&gt;&lt;span class="nx"&gt;getEventListeners&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;img alt="get_event_listeners.png" src="https://necromuralist.github.io/posts/monitoring-events-with-chromium/get_event_listeners.png"&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The &lt;code class="docutils literal"&gt;getEventListeners&lt;/code&gt; function doesn't work until you've run the &lt;code class="docutils literal"&gt;monitorEvents&lt;/code&gt; function.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="picking-elements-at-the-console"&gt;
&lt;h2&gt;Picking Elements At The Console&lt;/h2&gt;
&lt;p&gt;You don't have to use "Inspect this element" and &lt;code class="docutils literal"&gt;$0&lt;/code&gt;, you can grab an element at the console with javascript instead.&lt;/p&gt;
&lt;pre class="code javascript"&gt;&lt;a name="rest_code_6c22d6fecbc841a59582d30891317173-1"&gt;&lt;/a&gt;&lt;span class="nx"&gt;monitorEvents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"changing-what-you-monitor"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;"mouse"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Will monitor mouse-events for the headline to this sub-section.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>web development</category><guid>https://necromuralist.github.io/posts/monitoring-events-with-chromium/</guid><pubDate>Fri, 23 Sep 2016 23:57:37 GMT</pubDate></item></channel></rss>