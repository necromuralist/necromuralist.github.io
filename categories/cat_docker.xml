<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about Docker)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/cat_docker.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2022 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Wed, 09 Feb 2022 22:00:48 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Building a Jupyter Docker Container</title><link>https://necromuralist.github.io/posts/building-a-jupyter-docker-container/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;This is how I built a docker container to run a jupyter server. The reason why I did it was that I wanted to isolate any non-python dependencies I needed to install, but so far I haven't done any, so this could actually be done more easily using &lt;cite&gt;virtualenv&lt;/cite&gt;, but this is a starting point.&lt;/p&gt;
&lt;section id="the-dockerfile"&gt;
&lt;h2&gt;The Dockerfile&lt;/h2&gt;
&lt;p&gt;This is the configuration for building the docker image.&lt;/p&gt;
&lt;pre class="code dockerfile"&gt;&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-1" name="rest_code_5e28943144bd4ef99482041774124cf3-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s"&gt;ubuntu:latest&lt;/span&gt;
&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-2" name="rest_code_5e28943144bd4ef99482041774124cf3-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /code&lt;/span&gt;
&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-3" name="rest_code_5e28943144bd4ef99482041774124cf3-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get -y upgrade
&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-4" name="rest_code_5e28943144bd4ef99482041774124cf3-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get install -y build-essential python-dev
&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-5" name="rest_code_5e28943144bd4ef99482041774124cf3-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get install -y python python-distribute python-pip
&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-6" name="rest_code_5e28943144bd4ef99482041774124cf3-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; pip install pip --upgrade
&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-7" name="rest_code_5e28943144bd4ef99482041774124cf3-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;ADD&lt;/span&gt; requirements.txt /code
&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-8" name="rest_code_5e28943144bd4ef99482041774124cf3-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; pip install -r requirements.txt
&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-9" name="rest_code_5e28943144bd4ef99482041774124cf3-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; mkdir /notebooks
&lt;a id="rest_code_5e28943144bd4ef99482041774124cf3-10" name="rest_code_5e28943144bd4ef99482041774124cf3-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;CMD&lt;/span&gt; jupyter notebook --no-browser --ip &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0 --port &lt;span class="m"&gt;8888&lt;/span&gt; /notebooks
&lt;/pre&gt;&lt;p&gt;The &lt;code class="docutils literal"&gt;FROM&lt;/code&gt; line shows that I'm building my container using an ubuntu image (the latest image). The &lt;code class="docutils literal"&gt;WORKDIR&lt;/code&gt; sets the current working directory so commands that are run will look there for files. The next set of &lt;code class="docutils literal"&gt;RUN&lt;/code&gt; lines just say to update &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt;&lt;/code&gt; and install some basic python packages. The &lt;code class="docutils literal"&gt;ADD&lt;/code&gt; line takes the &lt;code class="docutils literal"&gt;requirements.txt&lt;/code&gt; file in the directory where I'm going to run this and put it in &lt;code class="docutils literal"&gt;/CODE&lt;/code&gt; which I pointed to with the &lt;code class="docutils literal"&gt;WORKDIR&lt;/code&gt; line. The next &lt;code class="docutils literal"&gt;RUN&lt;/code&gt; commands install my python dependencies and make a folder called &lt;code class="docutils literal"&gt;/notebooks&lt;/code&gt; to put the jupyter notebooks in. The last line (&lt;code class="docutils literal"&gt;CMD&lt;/code&gt;) is what will be executed when the container is run.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="building-the-image"&gt;
&lt;h2&gt;Building the Image&lt;/h2&gt;
&lt;p&gt;If the docker-file is stored in a file named &lt;code class="docutils literal"&gt;jupyter.dockerfile&lt;/code&gt; next to the &lt;code class="docutils literal"&gt;requirements.txt&lt;/code&gt; file, both of which are in the directory where I run the build command. To build it (and name the image &lt;code class="docutils literal"&gt;jupyter&lt;/code&gt;) I'd run the command:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_18403c28ad0044b2a4ba94ee72b4d805-1" name="rest_code_18403c28ad0044b2a4ba94ee72b4d805-1"&gt;&lt;/a&gt;docker -f jupyter.dockerfile -t jupyter:latest .
&lt;/pre&gt;&lt;/section&gt;
&lt;section id="running-the-server"&gt;
&lt;h2&gt;Running the Server&lt;/h2&gt;
&lt;p&gt;To run the server in the same directory where the notebooks should be stored and using the default port of 8888:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_0545ae430a2d4e34935e5a6823e1785a-1" name="rest_code_0545ae430a2d4e34935e5a6823e1785a-1"&gt;&lt;/a&gt;docker --name jupyter -p &lt;span class="m"&gt;8888&lt;/span&gt;:8888 -v &lt;span class="nv"&gt;$PWD&lt;/span&gt;:/notebooks -d jupyter
&lt;/pre&gt;&lt;p&gt;Now the server should be reachable at &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;http://localhost:8888&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/section&gt;</description><category>docker</category><category>how-to</category><category>jupyter</category><guid>https://necromuralist.github.io/posts/building-a-jupyter-docker-container/</guid><pubDate>Mon, 20 Jun 2016 03:48:21 GMT</pubDate></item><item><title>Linking Two Docker Containers</title><link>https://necromuralist.github.io/posts/linking-two-docker-containers/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;I think this is the deprecated to do it, now that they have &lt;cite&gt;docker connect&lt;/cite&gt;, but it works, so I'll keep the notes.&lt;/p&gt;
&lt;p&gt;My goal was to link a container that I'd set up to run a &lt;cite&gt;Jupyter Notebook&lt;/cite&gt; server to a &lt;cite&gt;Mongo DB&lt;/cite&gt; server. I'll leave out the installation notes and just assume that there's a docker image named &lt;code class="docutils literal"&gt;mongo&lt;/code&gt; for &lt;cite&gt;MongoDB&lt;/cite&gt; and one named &lt;code class="docutils literal"&gt;jupyter&lt;/code&gt; for my &lt;cite&gt;Jupyter&lt;/cite&gt; server.&lt;/p&gt;
&lt;p&gt;First I'll run MongoDB. &lt;cite&gt;MongoDB&lt;/cite&gt; is going to use &lt;code class="docutils literal"&gt;/data/db&lt;/code&gt; to store its data-files so I'm going to mount my &lt;cite&gt;data&lt;/cite&gt; directory there.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_11b2c67071544ac1ab3e2febca620976-1" name="rest_code_11b2c67071544ac1ab3e2febca620976-1"&gt;&lt;/a&gt;docker run --name mongo -v &lt;span class="nv"&gt;$PWD&lt;/span&gt;/data:/data/db -d mongo
&lt;/pre&gt;&lt;p&gt;Next I'll run the &lt;cite&gt;Jupyter&lt;/cite&gt; container, using the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--link&lt;/span&gt;&lt;/code&gt; option to point it to the &lt;code class="docutils literal"&gt;mongo&lt;/code&gt; container. The jupyter notebook is running on port 8888 and looking for notebooks in the &lt;code class="docutils literal"&gt;/notebooks&lt;/code&gt; directory so I'll mount my current working director there.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a id="rest_code_d2ab4980047f45e69b17c9744c5712a8-1" name="rest_code_d2ab4980047f45e69b17c9744c5712a8-1"&gt;&lt;/a&gt;docker run --name jupyter -v &lt;span class="nv"&gt;$PWD&lt;/span&gt;:/notebooks -p &lt;span class="m"&gt;8888&lt;/span&gt;:8888 --link mongo -d jupyter
&lt;/pre&gt;&lt;p&gt;At this point, opening a browser at &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;http://localhost:8888&lt;/span&gt;&lt;/code&gt; should open up the jupyter-server's home.&lt;/p&gt;</description><category>docker</category><category>how-to</category><guid>https://necromuralist.github.io/posts/linking-two-docker-containers/</guid><pubDate>Mon, 20 Jun 2016 03:31:20 GMT</pubDate></item></channel></rss>