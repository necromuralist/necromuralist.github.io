<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey</title><link>https://necromuralist.github.io/</link><description>A common place.</description><atom:link href="https://necromuralist.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2019 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Thu, 15 Aug 2019 17:05:52 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>emacs-jupyter</title><link>https://necromuralist.github.io/posts/emacs/emacs-jupyter/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/emacs-jupyter/#orgf781b76"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/emacs-jupyter/#org8885785"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/emacs-jupyter/#org1352da5"&gt;Finding the Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/emacs-jupyter/#org4399b34"&gt;Fixing the Problem&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/emacs-jupyter/#org9e72739"&gt;First Clone the Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/emacs-jupyter/#orgdf0c12c"&gt;Then Install the Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/emacs-jupyter/#orgd44c961"&gt;Then Build It&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/emacs-jupyter/#org34da79a"&gt;Fix the Other Problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/emacs-jupyter/#org4d74de0"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf781b76" class="outline-2"&gt;
&lt;h2 id="orgf781b76"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf781b76"&gt;
&lt;p&gt;
&lt;a href="https://github.com/gregsexton/ob-ipython"&gt;ob-ipython&lt;/a&gt; has become one of the most important tools in my workflow (along with &lt;a href="https://getnikola.com/"&gt;Nikola&lt;/a&gt;, and the &lt;a href="https://plugins.getnikola.com/v8/orgmode/"&gt;org-mode plugin&lt;/a&gt;), but earlier this week I stumbled upon &lt;a href="https://github.com/dzop/emacs-jupyter"&gt;emacs-jupyter&lt;/a&gt; and I thought maybe it'd be worth it to at least take a look. If the &lt;code&gt;readme&lt;/code&gt; file is to be believed, it does everything &lt;code&gt;ob-ipython&lt;/code&gt; does and more, so maybe my world would change once again. But then I ran into a little problem - trying to install it from &lt;a href="https://melpa.org/#/"&gt;MELPA&lt;/a&gt; caused emacs to crash… with no messages, nothing. So is this thing ready for the world to use yet?
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8885785" class="outline-2"&gt;
&lt;h2 id="org8885785"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8885785"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1352da5" class="outline-3"&gt;
&lt;h3 id="org1352da5"&gt;Finding the Problem&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1352da5"&gt;
&lt;p&gt;
I tried different things based on the errors in the emacs-jupyter's &lt;a href="https://github.com/dzop/emacs-jupyter/issues"&gt;"Issues"&lt;/a&gt; but it turned out that &lt;a href="https://github.com/dzop/emacs-zmq/issues/14"&gt;this emacs-zmq bug&lt;/a&gt; had the answer - the &lt;a href="https://launchpad.net/~ubuntu-elisp/+archive/ubuntu/ppa"&gt;emacs snapshot&lt;/a&gt; for Ubuntu wasn't built in a way that works with emacs-jupyter. The bug-report mentions an out of date gcc version, but I didn't confirm that.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4399b34" class="outline-3"&gt;
&lt;h3 id="org4399b34"&gt;Fixing the Problem&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4399b34"&gt;
&lt;p&gt;
So, knowing that the version of emacs I was using was the problem I decided to build it myself. In the earlier days of Ubuntu this was something I did all the time, but it seems like it's been forever since I had to do this so I was a little worried that it might be a huge mess of Makefile debugging, but I found &lt;a href="https://www.emacswiki.org/emacs/EmacsSnapshotAndDebian"&gt;this page on the emacs wiki&lt;/a&gt; which made it pretty easy.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9e72739" class="outline-4"&gt;
&lt;h4 id="org9e72739"&gt;First Clone the Repository&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9e72739"&gt;
&lt;pre class="example"&gt;
git clone --depth 1 git://git.sv.gnu.org/emacs.git
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgdf0c12c" class="outline-4"&gt;
&lt;h4 id="orgdf0c12c"&gt;Then Install the Dependencies&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgdf0c12c"&gt;
&lt;pre class="example"&gt;
sudo apt-fast install autoconf automake libtool texinfo build-essential xorg-dev libgtk2.0-dev libjpeg-dev libncurses5-dev libdbus-1-dev libgif-dev libtiff-dev libm17n-dev libpng-dev librsvg2-dev libotf-dev libgnutls28-dev libxml2-dev
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd44c961" class="outline-4"&gt;
&lt;h4 id="orgd44c961"&gt;Then Build It&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgd44c961"&gt;
&lt;pre class="example"&gt;
cd emacs
./autogen.sh
./configure --prefix=/home/athena/bin/emacs-jupyter/
make bootstrap
make install
sudo ln -s /home/athena/bin/emacs-jupyter/bin/emacs /usr/local/bin/emacs-jupyter
&lt;/pre&gt;

&lt;p&gt;
That bit about installing it in my home directory and linking it isn't necessary, but I didn't want to let the Makefile clobber anything (and I was too lazy to read it too closely).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org34da79a" class="outline-3"&gt;
&lt;h3 id="org34da79a"&gt;Fix the Other Problem&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org34da79a"&gt;
&lt;p&gt;
It turned out that the build went okay, and I could even install emacs-jupyter (yay), but when I tried to execute &lt;code&gt;M-x jupyter-run-repl&lt;/code&gt; I got an error message saying that modules weren't supported (what?). So then I found &lt;a href="http://diobla.info/blog-archive/modules-tut.html"&gt;this blog post&lt;/a&gt; that said you have to pass in the &lt;code&gt;--with-modules&lt;/code&gt; argument when you run &lt;code&gt;configure&lt;/code&gt;… So now the process became this:
&lt;/p&gt;

&lt;pre class="example"&gt;
cd emacs
./autogen.sh
./configure --prefix=/home/athena/bin/emacs-jupyter/ --with-modules
make bootstrap
make install
sudo ln -s /home/athena/bin/emacs-jupyter/bin/emacs /usr/local/bin/emacs-jupyter
&lt;/pre&gt;

&lt;p&gt;
And what do you know, it worked.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4d74de0" class="outline-2"&gt;
&lt;h2 id="org4d74de0"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4d74de0"&gt;
&lt;p&gt;
emacs-jupyter looks like an improvement over &lt;code&gt;ob-ipython&lt;/code&gt; in that it adds a lot of features (and claims to be faster), but getting it to work was way harder than I'm used to. I don't think it was "difficult" in a real sense, given what it used to be like to make and install things on Ubuntu, but I think I've gotten used to things just working. Anyway, now I can see if emacs-jupyter lives up to its own hype.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>emacs-jupyter</category><guid>https://necromuralist.github.io/posts/emacs/emacs-jupyter/</guid><pubDate>Sat, 10 Aug 2019 22:13:27 GMT</pubDate></item><item><title>cuDF With emacs-jupyter</title><link>https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org93a4183"&gt;Beginning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#orgef106ed"&gt;Problems Before I Even Started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#orgffa98f5"&gt;the &lt;b&gt;&lt;b&gt;RAPIDS&lt;/b&gt;&lt;/b&gt; instruction for starting the docker container is out of date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#orgb5d5aac"&gt;The emacs-snapshot isn't compatible with emacs-jupyter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org9a39bda"&gt;Imports&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org9e09bb8"&gt;PyPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org94828f2"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org0f86be2"&gt;Connecting To the Docker Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org98920f3"&gt;Create Series&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#orgf20a92b"&gt;CUDF Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#orgd2fac01"&gt;dask CUDF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#orgc34d521"&gt;Data Frames&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org50b6b77"&gt;From a Pandas DataFrame&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org7ef24cb"&gt;Selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org933f39e"&gt;Applyng functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org9b12184"&gt;String Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/#org0335d93"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org93a4183" class="outline-2"&gt;
&lt;h2 id="org93a4183"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org93a4183"&gt;
&lt;p&gt;
This is a first attempt to use &lt;a href="https://rapids.ai/"&gt;RAPIDS&lt;/a&gt; using their docker container and &lt;a href="https://github.com/dzop/emacs-jupyter#building-the-widget-support-experimental"&gt;emacs-jupyter&lt;/a&gt;. So there's multiple places where things can go wrong and I don't know why.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgef106ed" class="outline-3"&gt;
&lt;h3 id="orgef106ed"&gt;Problems Before I Even Started&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgef106ed"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgffa98f5" class="outline-4"&gt;
&lt;h4 id="orgffa98f5"&gt;the &lt;b&gt;&lt;b&gt;RAPIDS&lt;/b&gt;&lt;/b&gt; instruction for starting the docker container is out of date&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgffa98f5"&gt;
&lt;p&gt;
The instructions on the &lt;a href="https://rapids.ai/start.html"&gt;getting started page&lt;/a&gt; say to start the docker container using this:
&lt;/p&gt;
&lt;pre class="example"&gt;
docker run --runtime=nvidia --rm -it -p 8888:8888 -p 8787:8787 -p 8786:8786 \
    rapidsai/rapidsai:0.8-cuda10.0-runtime-ubuntu18.04-gcc7-py3.7
&lt;/pre&gt;

&lt;p&gt;
But the &lt;code&gt;--runtime=nvidia&lt;/code&gt; flag is for the now-deprecated &lt;code&gt;nvidia-docker2&lt;/code&gt; package (which isn't compatible with Ubuntu Disco Dingo anyway) and it will cause it to fail with an &lt;code&gt;unknown runtime&lt;/code&gt; error if you don't have that older package installed (which I don't). Removing the flag (and having the &lt;a href="https://github.com/NVIDIA/nvidia-docker"&gt;NVIDIA Container Toolkit&lt;/a&gt; installed) fixes the error.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb5d5aac" class="outline-4"&gt;
&lt;h4 id="orgb5d5aac"&gt;The emacs-snapshot isn't compatible with emacs-jupyter&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgb5d5aac"&gt;
&lt;p&gt;
&lt;a href="https://github.com/gregsexton/ob-ipython"&gt;ob-ipython&lt;/a&gt; has become such a center-piece for how I work I can't even remember how I did things before I discovered it, but now there's &lt;a href="https://github.com/dzop/emacs-jupyter"&gt;Emacs Jupyter&lt;/a&gt; which claims to have even more features, so I thought I'd try it out, but when I tried to install it emacs would crash (during the installation). According to  &lt;a href="https://github.com/dzop/emacs-zmq/issues/14"&gt;this bug report&lt;/a&gt; the &lt;a href="https://launchpad.net/~ubuntu-elisp/+archive/ubuntu/ppa"&gt;emacs snapshot&lt;/a&gt; for Ubuntu is built with an out-of-date version of gcc. I don't know if that's true, but I re-built emacs with &lt;a href="https://www.emacswiki.org/emacs/EmacsSnapshotAndDebian"&gt;the instructions on the emacs wiki&lt;/a&gt; and it at least installed emacs-jupyter without crashing. Here's where I find out if it works. Of course, I now have two versions of emacs. One that gets updated automatically and one that works with emacs-jupyter. I'll have to figure out what to do about that, assuming emacs-jupyter turns out to be worth keeping.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9a39bda" class="outline-3"&gt;
&lt;h3 id="org9a39bda"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9a39bda"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9e09bb8" class="outline-4"&gt;
&lt;h4 id="org9e09bb8"&gt;PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9e09bb8"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import cudf
import dask_cudf
import pandas
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org94828f2" class="outline-2"&gt;
&lt;h2 id="org94828f2"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org94828f2"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0f86be2" class="outline-3"&gt;
&lt;h3 id="org0f86be2"&gt;Connecting To the Docker Container&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0f86be2"&gt;
&lt;p&gt;
According to the emacs-snapshot documentation you can connect via SSH (but the Rapids docker container doesn't have it installed by default) or you can connect to a notebook server. I originally was going to try the SSH route, since I already do that with ob-ipython, but the notebook-server might be more suited to this case. Let's see.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print("test")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
test

&lt;/pre&gt;

&lt;p&gt;
So, the notebook doesn't seem to work as-is, but the SSH connection does, which is nice, but it's not different from what ob-ipython gave me (well it kind of is in that I didn't copy the file over).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org98920f3" class="outline-3"&gt;
&lt;h3 id="org98920f3"&gt;Create Series&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org98920f3"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf20a92b" class="outline-4"&gt;
&lt;h4 id="orgf20a92b"&gt;CUDF Series&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf20a92b"&gt;
&lt;p&gt;
This runs on the GPU.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;s = cudf.Series([1, 2, 3, None, 4])
print(s)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
0    1
1    2
2    3
3     
4    4
dtype: int64

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd2fac01" class="outline-4"&gt;
&lt;h4 id="orgd2fac01"&gt;dask CUDF&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgd2fac01"&gt;
&lt;p&gt;
This also runs on the GPU, but if you have more than one GPU it will use more than one.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ds = dask_cudf.from_cudf(s, npartitions=2)
print(ds.compute())
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
0    1
1    2
2    3
3     
4    4
dtype: int64

&lt;/pre&gt;

&lt;p&gt;
My machine only has one GPU, so this didn't gain anything, but I do have more than one machine with a GPU so this might help with distributed computing, if I get around to it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc34d521" class="outline-3"&gt;
&lt;h3 id="orgc34d521"&gt;Data Frames&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc34d521"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;frame = cudf.DataFrame([("a", list(range(10))),
			("b", list(range(10)))])
frame["a"] = frame.a * 5
print(frame)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
    a  b
0   0  0
1   5  1
2  10  2
3  15  3
4  20  4
5  25  5
6  30  6
7  35  7
8  40  8
9  45  9
&lt;/pre&gt;
&lt;/div&gt;
&lt;div id="outline-container-org50b6b77" class="outline-4"&gt;
&lt;h4 id="org50b6b77"&gt;From a Pandas DataFrame&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org50b6b77"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;frame = pandas.DataFrame({"a": list(range(4)), "b": list(range(4, 8))})
frame = cudf.DataFrame.from_pandas(frame)
print(frame)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
   a  b
0  0  4
1  1  5
2  2  6
3  3  7

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7ef24cb" class="outline-3"&gt;
&lt;h3 id="org7ef24cb"&gt;Selection&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7ef24cb"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(frame[frame.a &amp;gt; 1])
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
   a  b
2  2  6
3  3  7

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org933f39e" class="outline-3"&gt;
&lt;h3 id="org933f39e"&gt;Applyng functions&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org933f39e"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;frame["a"] = frame.a.applymap(lambda row: row + 5)
print(frame)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
   a  b
0  5  4
1  6  5
2  7  6
3  8  7

&lt;/pre&gt;

&lt;p&gt;
This is basically the pandas.DataFrame.apply method, but they renamed it for some reason.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9b12184" class="outline-3"&gt;
&lt;h3 id="org9b12184"&gt;String Methods&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9b12184"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;series = cudf.Series(["Alpha", "Beta", "GAMMA", "dELTA"])
print(series.str.lower())
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
0    alpha
1     beta
2    gamma
3    delta
dtype: object

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0335d93" class="outline-2"&gt;
&lt;h2 id="org0335d93"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0335d93"&gt;
&lt;p&gt;
After a certain point, this was kind of a boring exercise, mostly because &lt;code&gt;cuDF&lt;/code&gt; runs a subset of pandas but on the GPU, so if you know pandas, you know some of &lt;code&gt;cuDF&lt;/code&gt;, but just getting it working (with emacs-jupyter) was a little bit of work, so maybe it's useful to have recorded that here.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cudf</category><category>emacs-jupyter</category><category>walk-through</category><guid>https://necromuralist.github.io/posts/rapids/cudf-with-emacs-jupyter/</guid><pubDate>Sat, 10 Aug 2019 21:12:42 GMT</pubDate></item><item><title>Opening Remote Files In Emacs Using SSH</title><link>https://necromuralist.github.io/posts/emacs/opening-remote-files-in-emacs-using-ssh/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/opening-remote-files-in-emacs-using-ssh/#org6c96f57"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/opening-remote-files-in-emacs-using-ssh/#org2974e86"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/opening-remote-files-in-emacs-using-ssh/#orge2a1be4"&gt;Editing a Remote User File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/opening-remote-files-in-emacs-using-ssh/#orgd109467"&gt;Editing a Remote File As Root&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/emacs/opening-remote-files-in-emacs-using-ssh/#org2903fb8"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6c96f57" class="outline-2"&gt;
&lt;h2 id="org6c96f57"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6c96f57"&gt;
&lt;p&gt;
For some strange reason, &lt;a href="https://www.emacswiki.org/emacs/TrampMode"&gt;the emacs wiki page on tramp mode&lt;/a&gt; doesn't have instructions on how to open a file on a remote machine using tramp in its main section. You instead have to go down to the &lt;i&gt;Tips and Tricks&lt;/i&gt; and try and pick out a version that works. So I'm writing this here so I maybe won't have to do all the searching I did the next time. This is the version that worked for me (Emacs 27.0.50, Ubuntu 19.04).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2974e86" class="outline-2"&gt;
&lt;h2 id="org2974e86"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2974e86"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge2a1be4" class="outline-3"&gt;
&lt;h3 id="orge2a1be4"&gt;Editing a Remote User File&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge2a1be4"&gt;
&lt;p&gt;
You start by opening the file like you would a local file (&lt;code&gt;C-x C-f&lt;/code&gt;) and then in when the minibuffer opens up you use this syntax for the path:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/ssh:&amp;lt;username&amp;gt;@&amp;lt;hostname&amp;gt;&amp;gt;:&amp;lt;path to file&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So, for example, I have an SSH alias to &lt;code&gt;hades@erebus&lt;/code&gt; named &lt;code&gt;Hades&lt;/code&gt; and if I wanted to edit the emacs init file on that machine I would use this:
&lt;/p&gt;

&lt;pre class="example"&gt;
/ssh:Hades:.emacs.d/init.el
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd109467" class="outline-3"&gt;
&lt;h3 id="orgd109467"&gt;Editing a Remote File As Root&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd109467"&gt;
&lt;p&gt;
To open a file as root you stick an extra pipe (&lt;code&gt;|sudo&lt;/code&gt;) into the previous path syntax.
&lt;/p&gt;

&lt;pre class="example"&gt;
/ssh:&amp;lt;username&amp;gt;@&amp;lt;hostname&amp;gt;|sudo:&amp;lt;hostname&amp;gt;:&amp;lt;path to file&amp;gt;
&lt;/pre&gt;

&lt;p&gt;
This syntax doesn't work with SSH aliases (or didn't seem to when I tried), so editing the &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; file the same machine as before would use this:
&lt;/p&gt;

&lt;pre class="example"&gt;
/ssh:hades@erebus|sudo:erebus:/etc/apt/sources.list
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2903fb8" class="outline-2"&gt;
&lt;h2 id="org2903fb8"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2903fb8"&gt;
&lt;p&gt;
I got the &lt;code&gt;sudo&lt;/code&gt; version from &lt;a href="https://stackoverflow.com/questions/20624024/what-is-the-best-way-to-open-remote-files-with-emacs-and-ssh"&gt;Stack Overflow&lt;/a&gt; (of course).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>howto</category><category>ssh</category><guid>https://necromuralist.github.io/posts/emacs/opening-remote-files-in-emacs-using-ssh/</guid><pubDate>Sat, 27 Jul 2019 19:58:44 GMT</pubDate></item><item><title>A Mouse Follower</title><link>https://necromuralist.github.io/posts/processing/a-mouse-follower/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-mouse-follower/#org6007cc1"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-mouse-follower/#org5384f2c"&gt;Middle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-mouse-follower/#orgd5df02c"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6007cc1" class="outline-2"&gt;
&lt;h2 id="org6007cc1"&gt;Beginning&lt;/h2&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5384f2c" class="outline-2"&gt;
&lt;h2 id="org5384f2c"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5384f2c"&gt;
&lt;script language="javascript" type="text/javascript" src="https://necromuralist.github.io/posts/processing/a-mouse-follower/follower.js"&gt;&lt;/script&gt;
&lt;div id="mouse-follower"&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;let mouse_follower_sketch = function(p) {
    p.setup = function() {
	let parent_div_id = "mouse-follower";
	this.canvas = p.createCanvas($("#" + parent_div_id).outerWidth(true), 800);
	//this.canvas.parent(parent_div_id);
	p.walker = new Walker(p);
    }

    p.draw = function() {
	p.background(255);
	p.walker.walk();
	p.walker.display();
    }
};

function Walker(p) {
    this.position = p.createVector(p.width/2, p.height/2);
    this.velocity = p.createVector(0, 0)

    this.walk = function() {
	mouse = p.createVector(p.mouseX, p.mouseY);
	// calling sub on the vectors does an in-place update
	// using p5.Vector.sub creates a new vector
	// This is a static method so we use the module (p5) not the instance (p)
	acceleration = mouse.sub(this.position);

	// setMag always produces the same magnitude (but the orientation stays the same)
	acceleration.setMag(0.5);
	this.velocity = this.velocity.add(acceleration)
	this.position = this.position.add(this.velocity)
  }

  this.display = function() {
      p.stroke(0);
      p.noFill();
      p.background(255, 255, 255, 25);
      p.ellipse(this.position.x, this.position.y, 48, 48);
  }
}

sketch_container = new p5(mouse_follower_sketch, 'mouse-follower');
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd5df02c" class="outline-2"&gt;
&lt;h2 id="orgd5df02c"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd5df02c"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Shiffman D. &lt;a href="https://natureofcode.com/"&gt;The nature of code&lt;/a&gt;: simulating natural systems with processing. Version 1.0, generated December 6, 2012. s.l.: Selbstverl.; 2012. 498 p.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>p5.js</category><guid>https://necromuralist.github.io/posts/processing/a-mouse-follower/</guid><pubDate>Sun, 21 Jul 2019 23:03:37 GMT</pubDate></item><item><title>A Random Accelerator</title><link>https://necromuralist.github.io/posts/processing/a-random-accelerator/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-random-accelerator/#orgc64f9ff"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-random-accelerator/#orgdbab3a9"&gt;Middle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-random-accelerator/#org0149791"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc64f9ff" class="outline-2"&gt;
&lt;h2 id="orgc64f9ff"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc64f9ff"&gt;
&lt;p&gt;
This is an extension of the random walker with acceleration added.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgdbab3a9" class="outline-2"&gt;
&lt;h2 id="orgdbab3a9"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgdbab3a9"&gt;
&lt;script language="javascript" type="text/javascript" src="https://necromuralist.github.io/posts/processing/a-random-accelerator/walker.js"&gt;&lt;/script&gt;
&lt;div id="random-accelerator"&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;let random_accelerator_sketch = function(p) {
    p.setup = function() {
	let parent_div_id = "random-accelerator";
	this.canvas = p.createCanvas($("#" + parent_div_id).outerWidth(true), 800);
	this.canvas.parent(parent_div_id);
	p.walker = new Walker(p);
    }

    p.draw = function() {
	p.background(255);
	p.walker.walk();
	p.walker.display();
    }
};

function Walker(p) {
    this.position = p.createVector(p.width/2, p.height/2);
    this.velocity = p.createVector(0, 0)

    this.walk = function() {
	acceleration = p.createVector(p.random(-1, 1), p.random(-1, 1));
	acceleration = acceleration.mult(0.1)
	this.velocity = this.velocity.add(acceleration)
	this.position = this.position.add(this.velocity)
  }

  this.display = function() {
      p.stroke(0);
      p.noFill();
      p.background(255, 255, 255, 25);
      p.ellipse(this.position.x, this.position.y, 48, 48);
  }
}

sketch_container = new p5(random_accelerator_sketch, 'random-accelerator');
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0149791" class="outline-2"&gt;
&lt;h2 id="org0149791"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0149791"&gt;
&lt;p&gt;
This was a very rudimentary walker, the main point of it was that at this point we have the basic kinematic elements to make something following the rules of classical physics (more or less).
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Shiffman D. &lt;a href="https://natureofcode.com/"&gt;The nature of code&lt;/a&gt;: simulating natural systems with processing. Version 1.0, generated December 6, 2012. s.l.: Selbstverl.; 2012. 498 p.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>p5.js</category><guid>https://necromuralist.github.io/posts/processing/a-random-accelerator/</guid><pubDate>Sun, 21 Jul 2019 22:14:42 GMT</pubDate></item><item><title>Random Walker Take Two</title><link>https://necromuralist.github.io/posts/processing/random-walker-take-two/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div&gt;&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://necromuralist.github.io/posts/processing/random-walker-take-two/#beginning" id="id1"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://necromuralist.github.io/posts/processing/random-walker-take-two/#middle" id="id2"&gt;Middle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://necromuralist.github.io/posts/processing/random-walker-take-two/#end" id="id3"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="beginning"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://necromuralist.github.io/posts/processing/random-walker-take-two/#id1"&gt;Beginning&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Another take on getting p5.js to behave using the random walker.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="middle"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://necromuralist.github.io/posts/processing/random-walker-take-two/#id2"&gt;Middle&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, make a div to contain the javascript.&lt;/p&gt;
&lt;pre class="code html"&gt;&lt;a name="rest_code_85bfdbacc8434f2cb2f2636bce8ecc4e-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"javascript"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'random-walker-vectorized.js'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_85bfdbacc8434f2cb2f2636bce8ecc4e-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"random-walker-vectorized"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_85bfdbacc8434f2cb2f2636bce8ecc4e-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;script language="javascript" type="text/javascript" src="https://necromuralist.github.io/posts/processing/random-walker-take-two/random-walker-vectorized.js"&gt;&lt;/script&gt;

&lt;div id="random-walker-vectorized"&gt;
&lt;/div&gt;&lt;div class="system-message"&gt;
&lt;p class="system-message-title"&gt;System Message: ERROR/3 (&lt;tt class="docutils"&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 29)&lt;/p&gt;
&lt;p&gt;Unknown directive type "listings".&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. listings:: random-walker-vectorized.js
   :code: javascript

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="end"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://necromuralist.github.io/posts/processing/random-walker-take-two/#id3"&gt;End&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The big thing that fixed the positioning of the canvas was that I was putting the line to include the javascript inside the &lt;tt class="docutils literal"&gt;div&lt;/tt&gt; where it was supposed to render. Keeping the &lt;tt class="docutils literal"&gt;div&lt;/tt&gt; for the canvas empty fixed it.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>p5.js</category><guid>https://necromuralist.github.io/posts/processing/random-walker-take-two/</guid><pubDate>Sun, 21 Jul 2019 21:06:03 GMT</pubDate></item><item><title>A Random Walk(er)</title><link>https://necromuralist.github.io/posts/processing/a-random-walker/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-random-walker/#orgc944584"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-random-walker/#orgca60ab2"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-random-walker/#orgccd94f0"&gt;A Div to Locate the Sketch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-random-walker/#org5953a40"&gt;The Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/processing/a-random-walker/#org7be973b"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc944584" class="outline-2"&gt;
&lt;h2 id="orgc944584"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc944584"&gt;
&lt;p&gt;
This is another post to see if I understand how to get &lt;a href="https://p5js.org/"&gt;p5.js&lt;/a&gt; working in nikola. It's been a while since I tried and I just want to see if I remember how. This uses the random walk example from Daniel Schiffman's book &lt;i&gt;the Nature of Code&lt;/i&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgca60ab2" class="outline-2"&gt;
&lt;h2 id="orgca60ab2"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgca60ab2"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgccd94f0" class="outline-3"&gt;
&lt;h3 id="orgccd94f0"&gt;A Div to Locate the Sketch&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgccd94f0"&gt;
&lt;p&gt;
The id of this div is set in the &lt;code&gt;p5.js&lt;/code&gt; &lt;code&gt;setup&lt;/code&gt; function as the parent of the sketch.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;script language="javascript" type="text/javascript" src="walker.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;div id="random-walk-container"&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script language="javascript" type="text/javascript" src="https://necromuralist.github.io/posts/processing/a-random-walker/walker.js"&gt;&lt;/script&gt;
&lt;div id="random-walk-container"&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt; Originally this wasn't working, because I had the line to include the javascript inside the &lt;code&gt;div&lt;/code&gt; to hold the canvas. Make sure that &lt;code&gt;div&lt;/code&gt; is always empty.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5953a40" class="outline-3"&gt;
&lt;h3 id="org5953a40"&gt;The Javascript&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5953a40"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;let sketch = function(p) {
    p.setup = function() {
	let parent_div_id = "random-walk-container";
	this.canvas = p.createCanvas($("#" + parent_div_id).outerWidth(true), 300);
	this.canvas.parent();
	p.walker = new Walker(p);
    }

    p.draw = function() {
	p.background(255);
	p.walker.walk();
	p.walker.display();
    }
};

function Walker(p) {
  this.x = p.width/2;
  this.y = p.height/2;

  this.walk = function() {
    this.x = this.x + p.random(-1, 1) * 10;
    this.y = this.y + p.random(-1, 1) * 10;
  }

  this.display = function() {
    p.fill(0);
    p.ellipse(this.x, this.y, 48, 48);
  }
}

//let node = document.getElementById("random-walk")
//window.document.getElementsByTagName("body")[0].appendChild(node);
sketch_container = new p5(sketch, 'random-walk-container');
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7be973b" class="outline-2"&gt;
&lt;h2 id="org7be973b"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7be973b"&gt;
&lt;p&gt;
As always, this was way harder than it should have been.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>javascript</category><category>p5.js</category><category>processing</category><guid>https://necromuralist.github.io/posts/processing/a-random-walker/</guid><pubDate>Sun, 21 Jul 2019 19:29:09 GMT</pubDate></item><item><title>Reading Links</title><link>https://necromuralist.github.io/posts/reading-links/</link><dc:creator>Cloistered Monkey</dc:creator><description></description><category>links</category><category>reading</category><guid>https://necromuralist.github.io/posts/reading-links/</guid><pubDate>Tue, 02 Apr 2019 06:00:39 GMT</pubDate></item><item><title>Moving BeyondPod Files To the SDCard (Android 9)</title><link>https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#org835f0e9"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#orgcf166cf"&gt;Give Your App Storage Permissions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#orgb426f48"&gt;Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#org19537aa"&gt;Apps &amp;amp; Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#orga1a8ef3"&gt;App Info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#org5cda40c"&gt;App Permissions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#orgcd51b19"&gt;Figure Out The Path To Your SDCard&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#orgc53e109"&gt;Using ADB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#org7c348ef"&gt;Using "Files" Instead of ADB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#org81e92d3"&gt;Last Step: Point Beyond Pod To the SDCard&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#org7dac52f"&gt;Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#orgb8602e1"&gt;Advanced Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/#orga9f9737"&gt;Podcast Storage Location&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org835f0e9" class="outline-2"&gt;
&lt;h2 id="org835f0e9"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org835f0e9"&gt;
&lt;p&gt;
I don't follow the changes going on with Android closely enough to know exactly when all the changes were made to disable moving things to the SD Card, but I've been running out of storage recently, even though my SD Card has over 60 GB of free space so I looked into it and there are currently three things that seem to have changed that caused this problem with my Moto-X running Android Pie (9):
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;The option to use the SDCard as an extention of the Internal Storage has disappeared from the storage options.&lt;/li&gt;
&lt;li&gt;The option to move any of my apps to the SDCard has disappeared from the Apps' settings&lt;/li&gt;
&lt;li&gt;The last update seems to have broken all the connections between my apps and the SDCard so none of them are (were) using the external storage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
There might be a way to get around the first two problems, but I don't really feel like chasing that right now. It turns out that fixing the last case for some of my apps works, but isn't as intuitive as I would like it to be. Here's what to do.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcf166cf" class="outline-2"&gt;
&lt;h2 id="orgcf166cf"&gt;Give Your App Storage Permissions&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgcf166cf"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb426f48" class="outline-3"&gt;
&lt;h3 id="orgb426f48"&gt;Settings&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb426f48"&gt;
&lt;p&gt;
In your Android settings menu pick "Apps &amp;amp; notifications".
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/apps_and_notifications.png" alt="apps_and_notifications.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org19537aa" class="outline-3"&gt;
&lt;h3 id="org19537aa"&gt;Apps &amp;amp; Notifications&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org19537aa"&gt;
&lt;p&gt;
Next pick Beyond Pod from the list of applications (in this case it was one of my recently opened applications, but it isn't always).
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/apps_list.png" alt="apps_list.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga1a8ef3" class="outline-3"&gt;
&lt;h3 id="orga1a8ef3"&gt;App Info&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga1a8ef3"&gt;
&lt;p&gt;
In the BeyondPod settings make sure that &lt;i&gt;Permissions&lt;/i&gt; has &lt;i&gt;Storage&lt;/i&gt; listed, if not tap the &lt;i&gt;Permissions&lt;/i&gt; to get to that setting.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/beyond_pod_settings.png" alt="beyond_pod_settings.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5cda40c" class="outline-3"&gt;
&lt;h3 id="org5cda40c"&gt;App Permissions&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5cda40c"&gt;
&lt;p&gt;
In the "App permissions" make sure the switch next to "Storage" is turned on.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/beyond_pod_storage.png" alt="beyond_pod_storage.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcd51b19" class="outline-2"&gt;
&lt;h2 id="orgcd51b19"&gt;Figure Out The Path To Your SDCard&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgcd51b19"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc53e109" class="outline-3"&gt;
&lt;h3 id="orgc53e109"&gt;Using ADB&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc53e109"&gt;
&lt;p&gt;
I couldn't any way to find out the path to the sdcard in the Android settings themselves. The easiest way (to me) is to set up &lt;a href="https://developer.android.com/studio/command-line/adb"&gt;android debug bridge&lt;/a&gt; and then list the contents of the &lt;code&gt;storage&lt;/code&gt; folder.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hades@erebus ~/d/datasets [1]&amp;gt; adb shell
payton_sprout:/ $ ls /storage/
ls: /storage//193D-4160: Permission denied
56DC-7D9D emulated self 
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;payton_sprout:/ $ df -h storage/56DC-7D9D/
Filesystem              Size  Used Avail Use% Mounted on
/mnt/media_rw/56DC-7D9D  60G  3.5G   56G   7% /storage/56DC-7D9D
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf12385c" class="outline-4"&gt;
&lt;h4 id="orgf12385c"&gt;The Wrong Way&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf12385c"&gt;
&lt;p&gt;
If you look at the permissions for the folder you can see that the folder itself has read-write permissions if you're &lt;code&gt;root&lt;/code&gt; or part of the &lt;code&gt;sdcard_sw&lt;/code&gt; group
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;payton_sprout:/ $ ls -l storage/56DC-7D9D/
ls: storage/56DC-7D9D//.android_secure: Permission denied
total 128
drwxrwx--x 3 root sdcard_rw 131072 2019-01-27 14:04 Android
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
and although there is that &lt;code&gt;Permission denied&lt;/code&gt; for the &lt;code&gt;.android_secure&lt;/code&gt; file, it let me create folders and files in there so I figured I would create a folder for downloads and point BeyondPod to it. 
&lt;/p&gt;

&lt;p&gt;
It turns out that this doesn't work. I was going to walk through the error but I've already set it up the right way and I don't want to undo it. The key to figuring out why it kept telling me my folder didn't exist or was read only was finding &lt;a href="http://www.beyondpod.com/forum/showthread.php?3880-Moving-podcasts-to-external-SD-Card"&gt;this beyondpod forums thread&lt;/a&gt;. It looks like when you give permission to BeyondPod to use the SDCard, Android creates a specific folder that BeyondPod can use and you have to point it there. The format is:
&lt;/p&gt;

&lt;pre class="example"&gt;
/storage/&amp;lt;sd card&amp;gt;/d/data/mobi.beyondpod/files/
&lt;/pre&gt;

&lt;p&gt;
So in my case the path is:
&lt;/p&gt;

&lt;pre class="example"&gt;
/storage/56DC-7D9D/Android/data/mobi.beyondpod/files/
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7c348ef" class="outline-3"&gt;
&lt;h3 id="org7c348ef"&gt;Using "Files" Instead of ADB&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7c348ef"&gt;
&lt;p&gt;
Even though the Settings menus don't seem to show you the path to the sdcard you can use a file browser app if you don't want to use adb. Here's my sdcards name in the &lt;a href="https://files.google.com/"&gt;files&lt;/a&gt; app (it's not a file browser, but it's rather something that's supposed to help you clean up your storage but it works for this case).
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/files_browser.png" alt="files_browser.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org81e92d3" class="outline-2"&gt;
&lt;h2 id="org81e92d3"&gt;Last Step: Point Beyond Pod To the SDCard&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org81e92d3"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7dac52f" class="outline-3"&gt;
&lt;h3 id="org7dac52f"&gt;Settings&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7dac52f"&gt;
&lt;p&gt;
Open Beyond Pod and scroll to the bottom feeds list and tap on the &lt;code&gt;Settings&lt;/code&gt; option.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/beyond_pod_settings_menu.png" alt="beyond_pod_settings_menu.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb8602e1" class="outline-3"&gt;
&lt;h3 id="orgb8602e1"&gt;Advanced Settings&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb8602e1"&gt;
&lt;p&gt;
Now click on the hamburger menu icon on the top right to open it up and tap on &lt;code&gt;Advanced Settings&lt;/code&gt;.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/beyond_pod_advanced_settings_menu.png" alt="beyond_pod_advanced_settings_menu.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga9f9737" class="outline-3"&gt;
&lt;h3 id="orga9f9737"&gt;Podcast Storage Location&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga9f9737"&gt;
&lt;p&gt;
Scroll all the way down until you reach the &lt;code&gt;Podcast Storage Location&lt;/code&gt; section and tap on &lt;code&gt;Episode Download Path&lt;/code&gt; to enter the folder path. You should probably also click &lt;code&gt;Lock to Current Path&lt;/code&gt; as well.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/beyond_pod_storage_path.png" alt="beyond_pod_storage_path.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Once you change the settings BeyondPod will move the files and restart and at this point it should be storing everything to the SDCard. Now, on to all the other apps in there. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>android</category><category>howto</category><guid>https://necromuralist.github.io/posts/moving-beyondpod-files-to-the-sdcard-android-9/</guid><pubDate>Sun, 27 Jan 2019 21:23:01 GMT</pubDate></item><item><title>pyLDAvis In org-mode With JQuery</title><link>https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/#org885c15f"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/#orgc5e2304"&gt;Imports&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/#org4aff46f"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/#org0a10ba3"&gt;From PyPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/#orgae18c06"&gt;The Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/#org601a17b"&gt;The Vectorizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/#orge48feb1"&gt;The LDA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/#org9b6b3d4"&gt;PyLDAvis&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/#org97fa2a6"&gt;Prepare the Data for the Visualization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org885c15f" class="outline-2"&gt;
&lt;h2 id="org885c15f"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org885c15f"&gt;
&lt;p&gt;
In my &lt;a href="https://necromuralist.github.io/posts/pyldavis-in-org-mode/"&gt;last post&lt;/a&gt; I loaded the pyLDAvis widget by dumping the HTML/Javascript right into the org-mode document. The problem with doing this is that the document has a lot of lines of text in it, which slows down emacs a noticeable amount, making it hard to display one widget, and pretty much impractical to show more than one. So, since &lt;a href="https://www.getnikola.com/"&gt;Nikola&lt;/a&gt; (or maybe bootstrap or one of the other plugins I'm using) is loading &lt;a href="https://jquery.com/"&gt;JQuery&lt;/a&gt; anyway, I'm going to use javascript to add the HTML after it loads from a file.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc5e2304" class="outline-2"&gt;
&lt;h2 id="orgc5e2304"&gt;Imports&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc5e2304"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4aff46f" class="outline-3"&gt;
&lt;h3 id="org4aff46f"&gt;Python&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4aff46f"&gt;
&lt;p&gt;
&lt;code&gt;datetime&lt;/code&gt; is just to show how long things take. In this case the data-set is fairly small so it doesn't take very long, but in other cases it might take a very long time to build the LDA model so I like to time it so I know the next time about how long I should wait.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0a10ba3" class="outline-3"&gt;
&lt;h3 id="org0a10ba3"&gt;From PyPi&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0a10ba3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.datasets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fetch_20newsgroups&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.decomposition&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LatentDirichletAllocation&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CountVectorizer&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyLDAvis&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyLDAvis.sklearn&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgae18c06" class="outline-2"&gt;
&lt;h2 id="orgae18c06"&gt;The Data&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgae18c06"&gt;
&lt;p&gt;
I'm going to use the &lt;a href="https://archive.ics.uci.edu/ml/datasets/Twenty+Newsgroups"&gt;Twenty Newsgroups&lt;/a&gt; data-set, not because of anything significant, but because sklearn has a downloader for it so I figured it'd be easiest.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"~/datasets/newsgroups/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;newsgroups&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fetch_20newsgroups&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_home&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"train"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
/home/brunhilde/datasets/newsgroups

&lt;/pre&gt;

&lt;p&gt;
The &lt;code&gt;newsgroups.data&lt;/code&gt; is a list, so it doesn't have a shape attribute like it would it it were a numpy array.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"{:,}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newsgroups&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"{:.2f}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newsgroups&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;18000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
11,314
0.63

&lt;/pre&gt;

&lt;p&gt;
The &lt;a href="https://sklearn.org/datasets/twenty_newsgroups.html#newsgroups"&gt;documentation for the &lt;code&gt;fetch_20newsgroups&lt;/code&gt; function&lt;/a&gt; says that the full dataset has 18,000 entries, so we have about 63% of the full set.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org601a17b" class="outline-2"&gt;
&lt;h2 id="org601a17b"&gt;The Vectorizer&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org601a17b"&gt;
&lt;p&gt;
I'm going to use sklearn's &lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html"&gt;CountVectorizer&lt;/a&gt; to convert the newsgroups documents to arrays of token counts. This is about the visualization, not making an accurate model so I'm going to use the built-in tokenizer. I'm not sure what the &lt;code&gt;fit&lt;/code&gt; method is for, but the &lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html#sklearn.feature_extraction.text.CountVectorizer.fit_transform"&gt;fit_transform&lt;/a&gt; method returns the document-term matrix that we need (each row represents a document, the columns are the tokens, and the cells hold the counts for each token in the document).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;started&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;vectorizer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CountVectorizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stop_words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"english"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;document_term_matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vectorizer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit_transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newsgroups&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Elapsed: {}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Elapsed: 0:00:03.033235

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge48feb1" class="outline-2"&gt;
&lt;h2 id="orge48feb1"&gt;The LDA&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge48feb1"&gt;
&lt;p&gt;
Now we'll build the &lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.LatentDirichletAllocation.html"&gt;Latent Dirichlet Allocation Model&lt;/a&gt;.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;topics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newsgroups&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target_names&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;lda&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LatentDirichletAllocation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;topics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;lda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;document_term_matrix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Elapsed: {}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Elapsed: 0:02:37.479097

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9b6b3d4" class="outline-2"&gt;
&lt;h2 id="org9b6b3d4"&gt;PyLDAvis&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9b6b3d4"&gt;
&lt;p&gt;
Okay so here's where we try and get &lt;a href="https://pyldavis.readthedocs.io/en/latest/readme.html#"&gt;pyLDAvis&lt;/a&gt; into this thing.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org97fa2a6" class="outline-3"&gt;
&lt;h3 id="org97fa2a6"&gt;Prepare the Data for the Visualization&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org97fa2a6"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd32a8b8" class="outline-4"&gt;
&lt;h4 id="orgd32a8b8"&gt;The Prepared Data&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgd32a8b8"&gt;
&lt;p&gt;
The first step in using pyLDAvis is to create a &lt;code&gt;PreparedData&lt;/code&gt; named-tuple using the &lt;a href="https://pyldavis.readthedocs.io/en/latest/modules/API.html#pyLDAvis.prepare"&gt;prepare&lt;/a&gt; function.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;prepared_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyLDAvis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lda&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;document_term_matrix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vectorizer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Elapsed: {}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Elapsed: 0:00:34.293668

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org30c3340" class="outline-4"&gt;
&lt;h4 id="org30c3340"&gt;Build the HTML&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org30c3340"&gt;
&lt;p&gt;
Now we can create an HTML fragment using the &lt;a href="https://pyldavis.readthedocs.io/en/latest/modules/API.html#pyLDAvis.prepared_data_to_html"&gt;prepared_data&lt;/a&gt; function. The output is a string of HTML script, style, and div tags. It adds the entire data-set as a javascript object so the more data you have, the longer the string will be.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;div_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"pyldavis-in-org-mode"&lt;/span&gt;
&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyLDAvis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prepared_data_to_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prepared_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
				      &lt;span class="n"&gt;template_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"simple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
				      &lt;span class="n"&gt;visid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;div_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8f8a957" class="outline-4"&gt;
&lt;h4 id="org8f8a957"&gt;Export the HTML&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org8f8a957"&gt;
&lt;p&gt;
Now I'm going to save the html to a file so we can load it later.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"pyldavis-in-org-mode-with-jquery"&lt;/span&gt;
&lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"../files/posts/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;joinpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"pyldavis_fragment.html"&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_dir&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;joinpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_file&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So here's where we create the HTML that will be embedded in this post. The &lt;a href="https://api.jquery.com/load/"&gt;JQuery load&lt;/a&gt; function puts the content of our saved file into the div. I added the &lt;a href="https://api.jquery.com/css/"&gt;css&lt;/a&gt; call because I have my site's font-size set to extra-large, since the Goudy Bookstyle looks too small to me otherwise (I think nice fonts look better when they're big), which causes the buttons in the pyLDAvis widget to overflow out of the header. Under normal circumstances you wouldn't need to do this, but if you do want to do any one-off styling, here's an example of how to do it. Otherwise maybe an update to the style-sheet would be better. 
&lt;/p&gt;

&lt;p&gt;
The right-hand box is still messed up, but it's good enough for this example.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'''#+BEGIN_EXPORT html&lt;/span&gt;
&lt;span class="s1"&gt;&amp;lt;div id="{0}"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;$("#{0}").load("{1}")&lt;/span&gt;
&lt;span class="s1"&gt;$("#{0}-top").css("font-size", "large")&lt;/span&gt;
&lt;span class="s1"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;#+END_EXPORT'''&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;div_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div id="pyldavis-in-org-mode"&gt;&lt;/div&gt;
&lt;script&gt;
$("#pyldavis-in-org-mode").load("pyldavis_fragment.html")
$("#pyldavis-in-org-mode-top").css("font-size", "large")
&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>nikola</category><category>pyldavis</category><category>visualization</category><guid>https://necromuralist.github.io/posts/pyldavis-in-org-mode-with-jquery/</guid><pubDate>Wed, 19 Dec 2018 19:27:01 GMT</pubDate></item></channel></rss>