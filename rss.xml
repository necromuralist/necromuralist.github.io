<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey</title><link>https://necromuralist.github.io/</link><description>A common place.</description><atom:link href="https://necromuralist.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2018 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Sun, 16 Dec 2018 21:31:59 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Slip Box System Parts List</title><link>https://necromuralist.github.io/posts/slip-box-system-parts-list/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/slip-box-system-parts-list/#orgc53df8f"&gt;The Four Parts&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/slip-box-system-parts-list/#orge16f3fc"&gt;A Capture System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/slip-box-system-parts-list/#org313e38d"&gt;A Reference System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/slip-box-system-parts-list/#org1cdc8db"&gt;The Slip Box&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/slip-box-system-parts-list/#orgc861bd9"&gt;Something To Produce a Final Product&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/slip-box-system-parts-list/#org3c03de0"&gt;Related Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/slip-box-system-parts-list/#orgcb1ea79"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc53df8f" class="outline-2"&gt;
&lt;h2 id="orgc53df8f"&gt;The Four Parts&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc53df8f"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge16f3fc" class="outline-3"&gt;
&lt;h3 id="orge16f3fc"&gt;A Capture System&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge16f3fc"&gt;
&lt;p&gt;
This should be paper-based, or at least something that's always there and quick to use.
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;a notebook&lt;/li&gt;
&lt;li&gt;index cards&lt;/li&gt;
&lt;li&gt;loose paper&lt;/li&gt;
&lt;li&gt;napkins…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org313e38d" class="outline-3"&gt;
&lt;h3 id="org313e38d"&gt;A Reference System&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org313e38d"&gt;
&lt;p&gt;
This is where you put information about your sources. For books and papers &lt;a href="https://www.zotero.org"&gt;Zotero&lt;/a&gt; is handy, although once again, the fact that I have to fire up this GUI-based program adds a little bit of overhead. The original system was just another box so I'm going to try something like that. Maybe a sub-folder…
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1cdc8db" class="outline-3"&gt;
&lt;h3 id="org1cdc8db"&gt;The Slip Box&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1cdc8db"&gt;
&lt;p&gt;
The original system was a wooden box with &lt;a href="https://papersizes.io/a/a6"&gt;A6&lt;/a&gt; paper. I'm using a static site with plain text (org-mode).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc861bd9" class="outline-3"&gt;
&lt;h3 id="orgc861bd9"&gt;Something To Produce a Final Product&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc861bd9"&gt;
&lt;p&gt;
The system is aimed at writers, but I'm a computer programmer, and I think it might work with other types of output (like drawing) so it's really just having a way to produce something from your project.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3c03de0" class="outline-2"&gt;
&lt;h2 id="org3c03de0"&gt;Related Posts&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3c03de0"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/"&gt;Using the Slip Box&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgcb1ea79" class="outline-2"&gt;
&lt;h2 id="orgcb1ea79"&gt;Reference&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgcb1ea79"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/reference/bibliography-how-to-take-smart-notes/"&gt;HTTSN&lt;/a&gt; - How To Take Smart Notes&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>method</category><category>notes</category><category>research</category><category>slip box</category><guid>https://necromuralist.github.io/posts/slip-box-system-parts-list/</guid><pubDate>Sun, 16 Dec 2018 20:33:04 GMT</pubDate></item><item><title>Using Your Slip Box</title><link>https://necromuralist.github.io/posts/using-your-slip-box/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#orgb733aca"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#orgee477ab"&gt;The Method&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org0b069d4"&gt;Capture Everything&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org565550e"&gt;Take Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org26c8e32"&gt;Make Your Notes Permanent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org580c990"&gt;Put the Permanent Notes in the Slip Box&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#orge6254c4"&gt;Work Bottoms-Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org9942071"&gt;Build Projects From Copies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org444de62"&gt;Translate Your Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org19855b1"&gt;Revise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#orgb02f960"&gt;Move On&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org7fdedf4"&gt;Implementation Details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org68fb6db"&gt;Related Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/using-your-slip-box/#org83cf817"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb733aca" class="outline-2"&gt;
&lt;h2 id="orgb733aca"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb733aca"&gt;
&lt;p&gt;
This is my re-wording of the Slip Box Method.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgee477ab" class="outline-2"&gt;
&lt;h2 id="orgee477ab"&gt;The Method&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgee477ab"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0b069d4" class="outline-3"&gt;
&lt;h3 id="org0b069d4"&gt;Capture Everything&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0b069d4"&gt;
&lt;p&gt;
Write everything down - ideas don't count until they're out of your head and on paper. Writing it down also frees your mind to move on to other things.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org565550e" class="outline-3"&gt;
&lt;h3 id="org565550e"&gt;Take Notes&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org565550e"&gt;
&lt;p&gt;
Whenever you are taking in someone else's ideas (e.g. reading, listening) take notes.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org26c8e32" class="outline-3"&gt;
&lt;h3 id="org26c8e32"&gt;Make Your Notes Permanent&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org26c8e32"&gt;
&lt;p&gt;
The initial notes are just temporary inputs, later in the day you need to convert them into some form that has these attributes:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;They are complete - write them for your future self, don't rely on being able to remember what else is needed to understand the note.&lt;/li&gt;
&lt;li&gt;They are written in a way that relates to your interests.&lt;/li&gt;
&lt;li&gt;There is only one idea per note.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org580c990" class="outline-3"&gt;
&lt;h3 id="org580c990"&gt;Put the Permanent Notes in the Slip Box&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org580c990"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;When you file your note look through the other notes and try and place it behind a related note.&lt;/li&gt;
&lt;li&gt;Add links to other notes that are related.&lt;/li&gt;
&lt;li&gt;Add the new note to an entry-point note that holds links to other notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge6254c4" class="outline-3"&gt;
&lt;h3 id="orge6254c4"&gt;Work Bottoms-Up&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge6254c4"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Don't try and come up with a project by "thinking", look through the slip box and let it tell you what you're interested in.&lt;/li&gt;
&lt;li&gt;If you have an idea for what to do but there isn't enough in the box yet, take more notes.&lt;/li&gt;
&lt;li&gt;Keep the notes in one folder - don't sort them into sub-categories. This way you can make new associations that you didn't have when you first made the note.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9942071" class="outline-3"&gt;
&lt;h3 id="org9942071"&gt;Build Projects From Copies&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9942071"&gt;
&lt;p&gt;
Copy everything that seems relevant to a project folder on your desktop and see what needs to be filled in and what seems redundant (or maybe just wrong).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org444de62" class="outline-3"&gt;
&lt;h3 id="org444de62"&gt;Translate Your Notes&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org444de62"&gt;
&lt;p&gt;
Take these fragmented notes and convert them into a coherent argument. If you can't then look to take more notes to fill in what's missing.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org19855b1" class="outline-3"&gt;
&lt;h3 id="org19855b1"&gt;Revise&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org19855b1"&gt;
&lt;p&gt;
Don't accept the first draft, edit, erase, re-do.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb02f960" class="outline-3"&gt;
&lt;h3 id="orgb02f960"&gt;Move On&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb02f960"&gt;
&lt;p&gt;
When you're done with the project, start over with a new one.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7fdedf4" class="outline-2"&gt;
&lt;h2 id="org7fdedf4"&gt;Implementation Details&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7fdedf4"&gt;
&lt;p&gt;
The original method used paper and a wooden box. I really like paper and am tempted to try this, but I don't think doing something that makes me even more if a pack-rat is a good idea. The book (&lt;a href="https://takesmartnotes.com"&gt;How To Take Smart Notes&lt;/a&gt;) recommends a &lt;a href="http://www.zettelkasten.danielluedecke.de/en/index.php"&gt;computer program&lt;/a&gt; written specifically for this system, but I am a little leery of getting tied into one program, and all these GUI programs are starting to turn me off.
&lt;/p&gt;

&lt;p&gt;
Instead, I'm going to try and use this blog as my slip-box, so, as far as "equipment" goes, this is what I'm going to use:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/software/emacs/"&gt;GNU emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://orgmode.org"&gt;org-mode&lt;/a&gt; (comes with emacs)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getnikola.com"&gt;Nikola&lt;/a&gt; (a static site generator)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com"&gt;git&lt;/a&gt; (and &lt;a href="https://pages.github.com"&gt;github pages&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Flattening out the file-system makes it hard to browse the files, though. I guess &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;ls&lt;/code&gt; are going to be the main thing I use (and maybe &lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;ag&lt;/a&gt; and &lt;a href="https://jblevins.org/projects/deft/"&gt;deft&lt;/a&gt;). We'll see, I only started reading the book yesterday so I'm still trying to figure this out as I go.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org68fb6db" class="outline-2"&gt;
&lt;h2 id="org68fb6db"&gt;Related Posts&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org68fb6db"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/slip-box-parts-list/"&gt;Slip Box Parts List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org83cf817" class="outline-2"&gt;
&lt;h2 id="org83cf817"&gt;Reference&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org83cf817"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/reference/bibliography-how-to-take-smart-notes/"&gt;HTTSN&lt;/a&gt; - How To Take Smart Notes&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>method</category><category>notes</category><category>research</category><category>slip box</category><guid>https://necromuralist.github.io/posts/using-your-slip-box/</guid><pubDate>Sun, 16 Dec 2018 19:53:31 GMT</pubDate></item><item><title>Bibliography Entrance</title><link>https://necromuralist.github.io/posts/reference/bibliography-entrance/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/reference/bibliography-entrance/#orgc4f94dd"&gt;Researching&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc4f94dd" class="outline-2"&gt;
&lt;h2 id="orgc4f94dd"&gt;Researching&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc4f94dd"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/reference/bibliography-how-to-take-smart-notes/"&gt;HTTSN&lt;/a&gt; - How To Take Smart Notes&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>bibliograph</category><category>entry point</category><guid>https://necromuralist.github.io/posts/reference/bibliography-entrance/</guid><pubDate>Sun, 16 Dec 2018 19:09:36 GMT</pubDate></item><item><title>Bibliography: How To Take Smart Notes</title><link>https://necromuralist.github.io/posts/reference/bibliography-how-to-take-smart-notes/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/reference/bibliography-how-to-take-smart-notes/#org7033809"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/reference/bibliography-how-to-take-smart-notes/#org768c778"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7033809" class="outline-2"&gt;
&lt;h2 id="org7033809"&gt;Description&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7033809"&gt;
&lt;p&gt;
This book describes the &lt;i&gt;Slip-Box&lt;/i&gt; method developed by Niklas Luhmann. Its focus is on research writing, but seems like a good system for projects in general. It points that people are generally taught that you should work in a series of "next-steps", but if you are doing something creative (or at least something you haven't done before) then this is an impractical, if not impossible, way to work. Instead the author proposes that you use a system of note-taking to capture everything and then look for patterns in your notes - a bottoms-up approach rather than a top-down one.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org768c778" class="outline-2"&gt;
&lt;h2 id="org768c778"&gt;Reference&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org768c778"&gt;
&lt;p&gt;
[HTTSN] Ahrens S. How to take smart notes: one simple technique to boost writing, learning and thinking: for students, academics and nonfiction book writers. North Charleston, SC: CreateSpace; 2017. 170 p. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>bibliography</category><category>notes</category><guid>https://necromuralist.github.io/posts/reference/bibliography-how-to-take-smart-notes/</guid><pubDate>Sat, 15 Dec 2018 18:48:43 GMT</pubDate></item><item><title>Encrypt Dropbox Folders on Ubuntu</title><link>https://necromuralist.github.io/posts/ubuntu/encrypt-dropbox-folders-on-ubuntu/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org4cd21e9" class="outline-2"&gt;
&lt;h2 id="org4cd21e9"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4cd21e9"&gt;
&lt;p&gt;
This is one way to encrypt the contents for cloud-synchronized folders using &lt;a href="https://www.cryfs.org/"&gt;CryFS&lt;/a&gt;. I'm going to illustrate it using the &lt;code&gt;Dropbox&lt;/code&gt; folder that the &lt;a href="https://www.dropbox.com/"&gt;dropbox client&lt;/a&gt; creates.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1d3e741" class="outline-2"&gt;
&lt;h2 id="org1d3e741"&gt;Encrypt the Folders&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1d3e741"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga82e27a" class="outline-3"&gt;
&lt;h3 id="orga82e27a"&gt;Install It&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga82e27a"&gt;
&lt;p&gt;
Ubuntu currently (November 10, 2018) has &lt;code&gt;CryFS&lt;/code&gt; as part of its packages so you can install it with apt.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install cryfs
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge60405f" class="outline-3"&gt;
&lt;h3 id="orge60405f"&gt;Create the Target and Source Folders&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge60405f"&gt;
&lt;p&gt;
The &lt;code&gt;cryfs&lt;/code&gt; command will create the two folders and set them up for you. The syntax is &lt;code&gt;cryfs &amp;lt;target&amp;gt; &amp;lt;source&amp;gt;&lt;/code&gt;. The &lt;code&gt;target&lt;/code&gt; will contain the encrypted folders so it will go in the Dropbox folder, while the &lt;code&gt;source&lt;/code&gt; will hold the unencrypted files.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cryfs Dropbox/encrypted dropbox_source
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This is the same command you would use on another computer to set-up the existing encrypted folder on your new computer. The &lt;code&gt;source&lt;/code&gt; folder can be named differently, but the &lt;code&gt;target&lt;/code&gt; folder and the password need to be the same one you used when you created it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfe02d8d" class="outline-3"&gt;
&lt;h3 id="orgfe02d8d"&gt;Unmount It&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfe02d8d"&gt;
&lt;p&gt;
If you need to unmount it you can use &lt;a href="http://manpages.ubuntu.com/manpages/cosmic/man1/fusermount.1.html"&gt;fusermount&lt;/a&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fusermount -u dropbox_source
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Since you are doing all this within your home directory you don't need root privileges (except to install &lt;code&gt;cryfs&lt;/code&gt; with apt).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd496e08" class="outline-2"&gt;
&lt;h2 id="orgd496e08"&gt;References&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd496e08"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;I got this from &lt;a href="https://www.linuxbabe.com/ubuntu/encrypt-dropbox-ubuntu-16-04-17-10-desktop-server"&gt;Linux Babe&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>dropbox</category><category>encryption</category><category>linux</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/ubuntu/encrypt-dropbox-folders-on-ubuntu/</guid><pubDate>Mon, 10 Dec 2018 20:41:05 GMT</pubDate></item><item><title>Grep Coroutines</title><link>https://necromuralist.github.io/posts/grep-coroutines/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#org6410322"&gt;Set Up&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#orge815052"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#orga41edf6"&gt;Constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#org181e6fa"&gt;Grab the Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#org718811b"&gt;Functions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#orgd97e8a9"&gt;Coroutine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#org7aa868c"&gt;A Cat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#orgb467b97"&gt;GREP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#orgbbc594f"&gt;Count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#org027218d"&gt;Fanout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/grep-coroutines/#orgd7ac534"&gt;Try It&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6410322" class="outline-2"&gt;
&lt;h2 id="org6410322"&gt;Set Up&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6410322"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge815052" class="outline-3"&gt;
&lt;h3 id="orge815052"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge815052"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org23b6fc7" class="outline-4"&gt;
&lt;h4 id="org23b6fc7"&gt;Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org23b6fc7"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7078248" class="outline-4"&gt;
&lt;h4 id="org7078248"&gt;PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7078248"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga41edf6" class="outline-3"&gt;
&lt;h3 id="orga41edf6"&gt;Constants&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga41edf6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PRIDE_AND_PREJUDICE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://www.gutenberg.org/files/1342/1342-0.txt"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org181e6fa" class="outline-3"&gt;
&lt;h3 id="org181e6fa"&gt;Grab the Source&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org181e6fa"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PRIDE_AND_PREJUDICE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ok&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org718811b" class="outline-2"&gt;
&lt;h2 id="org718811b"&gt;Functions&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org718811b"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd97e8a9" class="outline-3"&gt;
&lt;h3 id="orgd97e8a9"&gt;Coroutine&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd97e8a9"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;coroutine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Sets up the co-routine&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;     function: coroutine function&lt;/span&gt;

&lt;span class="sd"&gt;    Returns:&lt;/span&gt;
&lt;span class="sd"&gt;     wrapper futnction that starts the co-routine&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
	&lt;span class="n"&gt;co_routine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;co_routine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;co_routine&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7aa868c" class="outline-3"&gt;
&lt;h3 id="org7aa868c"&gt;A Cat&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7aa868c"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;case_insensitive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Sends the lines in the text to the receiver&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;     text: iterable text lines&lt;/span&gt;
&lt;span class="sd"&gt;     receiver: thing to send lines to&lt;/span&gt;
&lt;span class="sd"&gt;     case_insensitive: whether to lowercase the lines&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;case_insensitive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;processor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;processor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;processor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb467b97" class="outline-3"&gt;
&lt;h3 id="orgb467b97"&gt;GREP&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb467b97"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@coroutine&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;case_insensitive&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""count tokens in the line"""&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;case_insensitive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;yield&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="n"&gt;receiver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgbbc594f" class="outline-3"&gt;
&lt;h3 id="orgbbc594f"&gt;Count&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbbc594f"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@coroutine&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;yield&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;GeneratorExit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org027218d" class="outline-3"&gt;
&lt;h3 id="org027218d"&gt;Fanout&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org027218d"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@coroutine&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;children&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;yield&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd7ac534" class="outline-2"&gt;
&lt;h2 id="orgd7ac534"&gt;Try It&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd7ac534"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"utf-8"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"feelings"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"feelings"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
feelings 86

&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"utf-8"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"beauty"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"beauty"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
beauty 27

&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"utf-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"cried"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"cried"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
cried 91

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>asynchronous</category><category>coroutines</category><category>python</category><guid>https://necromuralist.github.io/posts/grep-coroutines/</guid><pubDate>Sun, 09 Dec 2018 22:55:48 GMT</pubDate></item><item><title>Data Source Links</title><link>https://necromuralist.github.io/posts/data/data-source-links/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/data/data-source-links/#org36714fc"&gt;Collections of Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/data/data-source-links/#org7cac420"&gt;Miscellaneous&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org36714fc" class="outline-2"&gt;
&lt;h2 id="org36714fc"&gt;Collections of Links&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org36714fc"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://hadoopilluminated.com/hadoop_illuminated/Public_Bigdata_Sets.html"&gt;Hadoop Illuminated&lt;/a&gt; - Part of an online book about hadoop.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_datasets_for_machine_learning_research"&gt;Wikipedia&lt;/a&gt; - Page with table of datasets for machine learning research.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7cac420" class="outline-2"&gt;
&lt;h2 id="org7cac420"&gt;Miscellaneous&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7cac420"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/norvig/pytudes"&gt;Peter Norvig's Pytudes&lt;/a&gt; - Covers a range of topics, but I found it via a link to the Probablity section so it's ending up here.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>data</category><category>links</category><guid>https://necromuralist.github.io/posts/data/data-source-links/</guid><pubDate>Tue, 04 Dec 2018 20:55:36 GMT</pubDate></item><item><title>SQL Alchemy Tutorial</title><link>https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/#org9aacedd"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/#org5ad6ef2"&gt;Create the Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/#org9a2cfc8"&gt;Declare a Mapping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/#org24f2051"&gt;Create a Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/#orgb7bd70a"&gt;Create a User&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/#org9f749ec"&gt;Create a Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/#org46dbff7"&gt;Add Bob to the Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/#orgbb6241b"&gt;More Users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This is a walk through the &lt;a href="https://docs.sqlalchemy.org/en/latest/orm/tutorial.html"&gt;SQL Alchemy Tutorial&lt;/a&gt;. There's nothing original here, I'm just trying to re-acquaint myself with SQL Alchemy.
&lt;/p&gt;
&lt;div id="outline-container-org9aacedd" class="outline-2"&gt;
&lt;h2 id="org9aacedd"&gt;Imports&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9aacedd"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy.ext.declarative&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;declarative_base&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy.orm&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sessionmaker&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5ad6ef2" class="outline-2"&gt;
&lt;h2 id="org5ad6ef2"&gt;Create the Engine&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5ad6ef2"&gt;
&lt;p&gt;
This is going to connect to &lt;a href="https://sqlite.org/index.html"&gt;SQLite&lt;/a&gt; (in memory).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"sqlite:///:memory:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The &lt;code&gt;echo&lt;/code&gt; parameter tells SQLAlchemy to start logging.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9a2cfc8" class="outline-2"&gt;
&lt;h2 id="org9a2cfc8"&gt;Declare a Mapping&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9a2cfc8"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2fcc2e9" class="outline-3"&gt;
&lt;h3 id="org2fcc2e9"&gt;The Base&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org2fcc2e9"&gt;
&lt;p&gt;
This creates a base-class that our classes will inherit from.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Base&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;declarative_base&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgeb5fc5b" class="outline-3"&gt;
&lt;h3 id="orgeb5fc5b"&gt;A User&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgeb5fc5b"&gt;
&lt;p&gt;
First we're going to create a User class that maps to a user-table in the database.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;__tablename__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"users"&lt;/span&gt;
    &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;primary_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fullname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;User (name={} fullname={} password={})"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
								&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
								&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org24f2051" class="outline-2"&gt;
&lt;h2 id="org24f2051"&gt;Create a Schema&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org24f2051"&gt;
&lt;p&gt;
SQL Alchemy automatically creates a Table object for us.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__table__&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Table('users', MetaData(bind=None), Column('id', Integer(), table=&amp;lt;users&amp;gt;, primary_key=True, nullable=False), Column('name', String(), table=&amp;lt;users&amp;gt;), Column('fullname', String(), table=&amp;lt;users&amp;gt;), Column('password', String(), table=&amp;lt;users&amp;gt;), schema=None)

&lt;/pre&gt;

&lt;p&gt;
If you try and print it you will only get the table-name 'users'.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgde66ffd" class="outline-3"&gt;
&lt;h3 id="orgde66ffd"&gt;Create the Table&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgde66ffd"&gt;
&lt;p&gt;
Now we actually create the table using the Base object.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
2018-11-30 18:05:27,009 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-11-30 18:05:27,010 INFO sqlalchemy.engine.base.Engine ()
2018-11-30 18:05:27,011 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-11-30 18:05:27,011 INFO sqlalchemy.engine.base.Engine ()
2018-11-30 18:05:27,013 INFO sqlalchemy.engine.base.Engine PRAGMA table_info("users")
2018-11-30 18:05:27,014 INFO sqlalchemy.engine.base.Engine ()
2018-11-30 18:05:27,015 INFO sqlalchemy.engine.base.Engine 
CREATE TABLE users (
	id INTEGER NOT NULL, 
	name VARCHAR, 
	fullname VARCHAR, 
	password VARCHAR, 
	PRIMARY KEY (id)
)


2018-11-30 18:05:27,016 INFO sqlalchemy.engine.base.Engine ()
2018-11-30 18:05:27,017 INFO sqlalchemy.engine.base.Engine COMMIT
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb7bd70a" class="outline-2"&gt;
&lt;h2 id="orgb7bd70a"&gt;Create a User&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb7bd70a"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"bob"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fullname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Bob Dobolina"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"bob spelled backwards"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
bob
Bob Dobolina
None

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9f749ec" class="outline-2"&gt;
&lt;h2 id="org9f749ec"&gt;Create a Session&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9f749ec"&gt;
&lt;p&gt;
So far we've only been working with python objects, you need a session to actually talk to a database.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sessionmaker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org46dbff7" class="outline-2"&gt;
&lt;h2 id="org46dbff7"&gt;Add Bob to the Session&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org46dbff7"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bob&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This still doesn't actually add it to the database, we need to commit it. This is useful because you can continue to create objects and update them without continuously hitting the database.
&lt;/p&gt;

&lt;p&gt;
Now we actually do our first communication with the database.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
2018-12-03 14:39:51,652 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2018-12-03 14:39:51,655 INFO sqlalchemy.engine.base.Engine INSERT INTO users (name, fullname, password) VALUES (?, ?, ?)
2018-12-03 14:39:51,656 INFO sqlalchemy.engine.base.Engine ('bob', 'Bob Dobolina', 'bob spelled backwards')
2018-12-03 14:39:51,658 INFO sqlalchemy.engine.base.Engine COMMIT
&lt;/pre&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Bob's ID: {}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Bob's ID: 1

&lt;/pre&gt;

&lt;p&gt;
Even though we didn't specify the ID, it gets added when the entry is committed to the database.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbb6241b" class="outline-2"&gt;
&lt;h2 id="orgbb6241b"&gt;More Users&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbb6241b"&gt;
&lt;p&gt;
Instead of adding them one at a time you can pass in a list of users.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ted"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fullname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Ted Thompson"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"wordpass"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"tom"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fullname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Tom Tuttle"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"tacoma"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
2018-12-03 14:46:48,764 INFO sqlalchemy.engine.base.Engine INSERT INTO users (name, fullname, password) VALUES (?, ?, ?)
2018-12-03 14:46:48,765 INFO sqlalchemy.engine.base.Engine ('ted', 'Ted Thompson', 'wordpass')
2018-12-03 14:46:48,766 INFO sqlalchemy.engine.base.Engine INSERT INTO users (name, fullname, password) VALUES (?, ?, ?)
2018-12-03 14:46:48,767 INFO sqlalchemy.engine.base.Engine ('tom', 'Tom Tuttle', 'tacoma')
2018-12-03 14:46:48,768 INFO sqlalchemy.engine.base.Engine COMMIT

&lt;/pre&gt;

&lt;p&gt;
Now we can make a query to see what's there.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
2018-12-03 14:48:53,556 INFO sqlalchemy.engine.base.Engine SELECT users.id AS users_id, users.name AS users_name, users.fullname AS users_fullname, users.password AS users_password 
FROM users ORDER BY users.id
2018-12-03 14:48:53,557 INFO sqlalchemy.engine.base.Engine ()
1 Bob Dobolina
2 Ted Thompson
3 Tom Tuttle

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>sqlalchemy</category><category>tutorial</category><guid>https://necromuralist.github.io/posts/database/sql-alchemy-tutorial/</guid><pubDate>Sat, 01 Dec 2018 01:10:50 GMT</pubDate></item><item><title>Remote jupyter Sessions With ob-ipython</title><link>https://necromuralist.github.io/posts/programming/remote-jupyter-sessions-with-ob-ipython/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/programming/remote-jupyter-sessions-with-ob-ipython/#orgb69840d"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/programming/remote-jupyter-sessions-with-ob-ipython/#org63df9ab"&gt;The Layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/programming/remote-jupyter-sessions-with-ob-ipython/#orgd3ec94f"&gt;Setting up the Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/programming/remote-jupyter-sessions-with-ob-ipython/#org98caaa3"&gt;A Plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/programming/remote-jupyter-sessions-with-ob-ipython/#org3ca5653"&gt;One More Thing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb69840d" class="outline-2"&gt;
&lt;h2 id="orgb69840d"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb69840d"&gt;
&lt;p&gt;
These are my notes about trying to use a remote jupyter session in org-mode (with ob-ipython). My main source was &lt;a href="https://vxlabs.com/2017/11/30/run-code-on-remote-ipython-kernels-with-emacs-and-orgmode/"&gt;this blog post&lt;/a&gt; from vxlabs, and also the &lt;a href="https://github.com/ipython/ipython/wiki/Cookbook:-Connecting-to-a-remote-kernel-via-ssh"&gt;ipython&lt;/a&gt; instructions for setting up a remote-session. I also referred to the &lt;a href="https://github.com/gregsexton/ob-ipython#working-with-a-remote-session"&gt;ob-ipython notes&lt;/a&gt; on setting up a remote session, although I didn't really understand everything it said until after I had done it once.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org63df9ab" class="outline-2"&gt;
&lt;h2 id="org63df9ab"&gt;The Layout&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org63df9ab"&gt;
&lt;p&gt;
Both this post and the jupyter server are running on my desktop (Hades) while I'm editing them in emacs on my laptop.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd3ec94f" class="outline-2"&gt;
&lt;h2 id="orgd3ec94f"&gt;Setting up the Session&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd3ec94f"&gt;
&lt;p&gt;
The steps are:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Find out where the JSON file you will need is going to be put on the server&lt;/li&gt;
&lt;li&gt;Start the server&lt;/li&gt;
&lt;li&gt;Copy the json file that was created to your client&lt;/li&gt;
&lt;li&gt;Start an ipython session to connect to the remote session&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id="outline-container-org273bb11" class="outline-3"&gt;
&lt;h3 id="org273bb11"&gt;Find Out Where the JSON File Will Be&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org273bb11"&gt;
&lt;p&gt;
While ssh'd into the server (and with the appropriate virtual environment running if you need it), enter the command to show the folder where the JSON file will be.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;jupyter --runtime-dir
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
In my case this is what came out.
&lt;/p&gt;

&lt;pre class="example"&gt;
/run/user/1000/jupyter
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org910af1b" class="outline-3"&gt;
&lt;h3 id="org910af1b"&gt;Start the Server&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org910af1b"&gt;
&lt;p&gt;
Change into the directory where you want the jupyter server to run and start the ipython kernel.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ipython kernel
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This is what came out for me.
&lt;/p&gt;

&lt;pre class="example"&gt;
NOTE: When using the `ipython kernel` entry point, Ctrl-C will not work.

To exit, you will have to explicitly quit this process, by either sending
"quit" from a client, or using Ctrl-\ in UNIX-like environments.

To read more about this, see https://github.com/ipython/ipython/issues/2049


To connect another client to this kernel, use:
    --existing kernel-10181.json

&lt;/pre&gt;
&lt;p&gt;
That last line refers to the JSON file that we're going to need on the client side (&lt;code&gt;kernel-10181.json&lt;/code&gt;).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org226a705" class="outline-3"&gt;
&lt;h3 id="org226a705"&gt;Copy the File From the Server To the Client&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org226a705"&gt;
&lt;p&gt;
Go back to your client (my laptop in this case) and check where your jupyter installation is.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;jupyter --runtime-dir
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
/run/user/1000/jupyter
&lt;/pre&gt;

&lt;p&gt;
Both my laptop and desktop had the same location, so it's probably the default. Now change into that directory on the client and copy the file from the server.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /run/user/1000/jupyter
scp Hades:/run/user/1000/jupyter/kernel-10181.json .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7a1552c" class="outline-3"&gt;
&lt;h3 id="org7a1552c"&gt;Start the Client&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7a1552c"&gt;
&lt;p&gt;
You can run this next command anywhere on the client where you can run jupyter.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;jupyter console --existing kernel-10181.json --ssh Hades
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Where &lt;code&gt;kernel-10181.json&lt;/code&gt; is the files copied from the server and &lt;code&gt;Hades&lt;/code&gt; is the ssh alias for my server (so it would be &lt;code&gt;hades@erebus&lt;/code&gt; without the alias).
&lt;/p&gt;

&lt;p&gt;
When you run this command it will open up an ipython prompt that will be connected to the server. This turns out to be more useful than I thought it would be because the prompt that ob-ipython normally opens seems to be broken when I'm connected to the remote client. Maybe there's something else to configure. Anyway, whatever you add to your emacs ob-ipython namespace will be accessible to you in the ipython prompt so you can fiddle with things live in there.
&lt;/p&gt;

&lt;p&gt;
Once you open this it will add another file (&lt;code&gt;kernel-10181-ssh.json&lt;/code&gt; in this case) that you can use to connect if you want to open up more than ipython prompt for some reason:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;jupyter console --existing kernel-10181-ssh.json
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
You don't pass in the &lt;code&gt;--ssh&lt;/code&gt; flag this time. Note that you're still sharing the same jupyter session so all the variables and stuff will show up in the second console as well.
&lt;/p&gt;

&lt;p&gt;
But, more importantly, this second json file is how we can connect while in emacs.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfa688b5" class="outline-3"&gt;
&lt;h3 id="orgfa688b5"&gt;Use The Session&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfa688b5"&gt;
&lt;p&gt;
To make use of the session you need to pass in the name of the ssh kernel file as the name of the ipython session.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#+BEGIN_SRC ipython :session kernel-10181-ssh.json :results none

#+END_SRC
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Anything you do in a block with that session ID will send the commands to the remote server to be interpreted.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org98caaa3" class="outline-2"&gt;
&lt;h2 id="org98caaa3"&gt;A Plot&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org98caaa3"&gt;
&lt;p&gt;
I'm going to use this example from the &lt;a href="https://seaborn.pydata.org/examples/structured_heatmap.html"&gt;seaborn gallery&lt;/a&gt; to test out the setup. It might not be obvious from the post itself but the web-server for this post is also on my remote machine so I can tell if it worked by checking the page in a browser (because if it was using an ipython session on my laptop the page wouldn't get the image).
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org52a3cc9" class="outline-3"&gt;
&lt;h3 id="org52a3cc9"&gt;Imports From PyPi&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org52a3cc9"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import pandas
import seaborn
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga091f4e" class="outline-3"&gt;
&lt;h3 id="orga091f4e"&gt;Plotting Setup&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga091f4e"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%matplotlib inline
seaborn.set(style="whitegrid",
	    rc={"axes.grid": False,
		"font.family": ["sans-serif"],
		"font.sans-serif": ["Latin Modern Sans", "Lato"],
		"figure.figsize": (13, 13)},
	    font_scale=1)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Load the brain networks example dataset
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;data = seaborn.load_dataset("brain_networks", header=[0, 1, 2], index_col=0)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Select a subset of the networks.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;used_networks = [1, 5, 6, 7, 8, 12, 13, 17]
used_columns = (data.columns.get_level_values("network")
		.astype(int)
		.isin(used_networks))
data = data.loc[:, used_columns]
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Create a categorical palette to identify the networks.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;network_palette = seaborn.husl_palette(8, s=.45)
# I have no idea what the network_lut is.
network_lut = dict(zip(map(str, used_networks), network_palette))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Convert the palette to vectors that will be drawn on the side of the matrix.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;networks = data.columns.get_level_values("network")
network_colors = pandas.Series(networks, index=data.columns).map(network_lut)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Plot.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cluster = seaborn.clustermap(data.corr(), center=0, cmap="vlag",
			     row_colors=network_colors,
			     col_colors=network_colors,
			     linewidths=.75)
title = cluster.fig.suptitle("Brain Networks")
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/programming/remote-jupyter-sessions-with-ob-ipython/cluster_map.png" alt="cluster_map.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Besides the ipython shell not working in emacs I also couldn't get it to render images directly in emacs, but they did render on the remote side so I could see the plot in my web-browser.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3ca5653" class="outline-2"&gt;
&lt;h2 id="org3ca5653"&gt;One More Thing&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3ca5653"&gt;
&lt;p&gt;
I stumbled over this a couple of times so I thought I should mention that the virtualenv you activate in emacs has to be on your client (the laptop in my case), so to make it easier you should set it before opening the remote document via tramp. If you try to activate the virtualenv while in tramp it will attempt to use the remote machine's (server's) virtualenv. You can see that it's the case in the mini-buffer, but I think being prompted like that made me pick the wrong side. Use the virtualenv on the machine you're working on.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>jupyter</category><category>org-mode</category><category>programming</category><category>python</category><guid>https://necromuralist.github.io/posts/programming/remote-jupyter-sessions-with-ob-ipython/</guid><pubDate>Fri, 23 Nov 2018 20:24:49 GMT</pubDate></item><item><title>Using Nvidia Drivers in Ubuntu 18.10</title><link>https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/#org7461919"&gt;What is this about?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/#org018913a"&gt;What didn't work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/#org88ed03a"&gt;So what did work?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7461919" class="outline-2"&gt;
&lt;h2 id="org7461919"&gt;What is this about?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7461919"&gt;
&lt;p&gt;
I had previously found that after upgrading from Ubuntu 18.04 to 18.10 my computer would hang whenever I re-booted. I originally "solved" it by purging the nvidia drivers, but I had actually set out to try and get cuda running this weekend (figuring out the nvidia problem took a day and a half so maybe next weekend) so I wanted a way to get the drivers working. Here's how I did it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org018913a" class="outline-2"&gt;
&lt;h2 id="org018913a"&gt;What didn't work?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org018913a"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org500e9bc" class="outline-3"&gt;
&lt;h3 id="org500e9bc"&gt;Disabling the initial login&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org500e9bc"&gt;
&lt;p&gt;
Since I have disk-encrpytion set up there's an initial login screen to enter the decryption passphrase. This never seemed to hang, but if you google 'disable login screen' or something similar this is what you get. Disabling it basically confirmed that it wasn't the problem. For the record, you do this by editing &lt;code&gt;/etc/default/grub&lt;/code&gt; and changing the line:
&lt;/p&gt;

&lt;pre class="example"&gt;
GRUB_CMDLINE_LINUX_DEFAULT = "quiet splash"
&lt;/pre&gt;

&lt;p&gt;
To:
&lt;/p&gt;

&lt;pre class="example"&gt;
GRUB_CMDLINE_LINUX_DEFAULT = ""
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org95d461c" class="outline-3"&gt;
&lt;h3 id="org95d461c"&gt;Revert the kernel and driver version&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org95d461c"&gt;
&lt;p&gt;
Since I had the nvidia drivers working before I upgraded to Ubuntu 18.10 I decided to try using the same driver version that I had used and running the previous kernel using the Grub Menu. No go the bogeyman.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org88ed03a" class="outline-2"&gt;
&lt;h2 id="org88ed03a"&gt;So what did work?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org88ed03a"&gt;
&lt;p&gt;
I don't know why other people do it, but &lt;a href="https://askubuntu.com/questions/800239/how-to-disable-lightdmdisplay-manager-on-ubuntu-16-0-4-lts"&gt;this Stack Overflow post&lt;/a&gt; tells you how to disable the GUI. It's basically a one-liner.
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo systemctl set-default multi-user.target
&lt;/pre&gt;

&lt;p&gt;
This will cause the machine to boot up without the GUI running so you can bypass the user-login screen (which seems to be what is causing the problem for me) and login at the command-prompt. The post suggested using &lt;code&gt;systemctl&lt;/code&gt; to start the GUI, but that didn't work for me (Ubuntu might not be using &lt;code&gt;lightdm&lt;/code&gt; anymore, which is what the post refers to). Instead I entered &lt;code&gt;startx&lt;/code&gt; and here I am.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lshw -c video
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
*-display
     description: VGA compatible controller
     product: GM206 [GeForce GTX 950]
     vendor: NVIDIA Corporation
     physical id: 0
     bus info: pci@0000:01:00.0
     version: a1
     width: 64 bits
     clock: 33MHz
     capabilities: vga_controller bus_master cap_list rom
     configuration: driver=nvidia latency=0
     resources: irq:41 memory:fd000000-fdffffff memory:d0000000-dfffffff memory:ce000000-cfffffff ioport:dc00(size=128) memory:c0000-dffff
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>drivers</category><category>setup</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/</guid><pubDate>Sun, 28 Oct 2018 19:20:38 GMT</pubDate></item></channel></rss>