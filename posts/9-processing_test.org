#+BEGIN_COMMENT
.. title: p5.js With Org-Mode and Nikola
.. slug: p5-js-with-org-mode-and-nikola
.. date: 2019-07-21 16:03:37 UTC-07:00
.. tags: p5.js
.. category: p5.js
.. link: 
.. description: Using p5.js with org-mode and nikola.
.. type: text
.. template: p5.tmpl
#+END_COMMENT
#+OPTIONS: ^:{}
#+TOC: headlines 3

* What Is This, Then?
This is a re-working of a [[https://p5js.org/][p5js]] post I made a while ago to see if I could remember how to use it with [[https://getnikola.com/][nikola]], my static site generator of choice. Upon revisiting it again I realized that the text was describing how to do it with posts written in [[https://www.writethedocs.org/guide/writing/reStructuredText/][~restructuredText~]] even though I re-wrote the post in [[https://orgmode.org/][org-mode]], and haven't used ~restructuredText~ in a while so I wasn't really sure what I was talking about. Additionally, I had assumed since I have the original org source I could just read it and figure out what I had done, but while that was sort of true, it wasn't as obvious as I would have liked so, this is going to be a post showing:

- How to put a p5js sketch into an org-mode post for HTML exporting.
- How to put multiple p5js sketches on the same page without them conflicting with each other.
- How to display the javascript for the p5js sketch when it's in a separate file.
- How to put the javascript in the org-mode post and tangle it out.

This is nikola specific, but I'm assuming it'd be similar if I switched again to another system.

* The First Sketch

The sketches I'll be using came from [[GSWP][Getting Started With Processing]]. This first one creates a circle that follows your mouse as you move it around. 

** The HTML Elements

The first thing we'll do is create two HTML elements that we want to export as HTML. One is a ~script~ element that imports the javascript for the p5 sketch, the other is a ~div~ element which the javascript puts the sketch into.

#+begin_src org
#+begin_export html
  <script language="javascript" type="text/javascript" src='get_started.js'></script>
  <div id="get_started"></div>
#+end_export
#+end_src

#+begin_export html
  <script language="javascript" type="text/javascript" src='get_started.js'></script>
  <div id="get_started">
  </div>
#+end_export

Wherever you put that block in the org-mode post is where the p5 sketch will be. I created the sketch in a file called ~get_started.js~ so the script tag imports it and the ~div id~ is how the javascript knows where to put the sketch (the big white space above this line is where I put it so if you move your cursor over it you should see something happen).

** The Javascript

When nikola creates the page from this post it's going to copy over the javascript file ("get_started.js") and put it next to the HTML for the post, which is why we can just put the file name in the ~script~ tag and don't need a path. In order for nikola to find it we need to put the file in a folder whose path looks like ~files/posts/<SLUG>/get_started.js~ (starting from the root of the nikola repository). You can probably change it but this is the way it works by default.

The ~<SLUG>~ folder has to be the name of the slugified name for the post (for nikola this is set in the ~slug~ metadata at the top of the post). In this case I used the much too long slug ~p5-js-with-org-mode-and-nikola~ so the path to the javascript file is ~files/posts/p5-js-with-org-mode-and-nikola/get_started.js~. 

We need to know this for two things - one is that's where you have to put the file or it won't get copied over. The other is that I want to show the javascript itself in this post so we need to put an [[https://orgmode.org/manual/Include-Files.html][~include~ directive]] with the path to the file. The thing that I always stumble over is that the path for the ~include~ directive is relative to the location of the org-mode post, not the root of the nikola repository. Since the post is in a sub-folder named ~posts~, our path needs to go up one directory first, then back down, like this:

#+begin_src org
#+include: ../files/posts/p5-js-with-org-mode-and-nikola/get_started.js src js
#+end_src

Wherever you put that in the post is where org-mode will insert the file. The arguments after the path tell org that it's a source block (and not, say, an example) and that it's in javascript so org will apply syntax highlighting to it, like so:

#+include: ../files/posts/p5-js-with-org-mode-and-nikola/get_started.js src js

Of course, you don't need to actually show the javascript, but this is for the future me that's probably going to forget what's going on here.

* The Second Sketch

#+begin_src js :tangle ../files/posts/p5-js-with-org-mode-and-nikola/rotate_translate.js :exports none
<<div-id>>

<<sketch-function>>

<<mouse-pressed>>

<<setup-function>>

<<draw-function>>

<<create-sketch>>
#+end_src

#+begin_src js :noweb-ref div-id
const ROTATE_TRANSLATE_ID = "rotate-translate";
#+end_src

#+begin_src js :noweb-ref sketch-function
let rotate_translate_sketch = function(p5js) {
  const WHITE = 255;
  const BLUE = p5js.color(0, 0, 255);

  let angle = 0.0;
  let side;
#+end_src


#+begin_src js :noweb-ref mouse-pressed
  p5js.mousePressed = function() {
    p5js.background(WHITE);
  }; // mouse_pressed
#+end_src

#+begin_src js :noweb-ref setup-function
  p5js.setup = function(){
    let canvas = p5js.createCanvas(0.8 * p5js.windowWidth, 200);
    canvas.parent(ROTATE_TRANSLATE_ID);
    p5js.strokeWeight(3);
    p5js.smooth();
  }; //setup
#+end_src

#+begin_src js :noweb-ref draw-function
  p5js.draw = function(){
    p5js.stroke(BLUE);
    p5js.translate(p5js.mouseX, p5js.mouseY);
    side = p5js.pow(p5js.dist(p5js.pmouseX, p5js.pmouseY,
                              p5js.mouseX, p5js.mouseY), 1.5);
    p5js.rotate(angle);
    p5js.square(-15, -15, side);
    angle += 0.1;
  } // draw
}; // rotate_translate_sketch
#+end_src

#+begin_src js :noweb-ref create-sketch
new p5(rotate_translate_sketch, ROTATE_TRANSLATE_ID);
#+end_src

#+begin_export html
<script language="javascript" type="text/javascript" src="rotate_translate.js"></script>
<div id="rotate-translate"></div>
#+end_export
* And the Rest
* Notes
- [[https://p5js.org][p5js.org]]: The site for p5.js.
- [[https://p5js.org/examples/instance-mode-instantiation.html][Instantiation]]: The p5.js example page for keeping variables local to a sketch so sketches don't collide with each other.
- [[https://p5js.org/examples/instance-mode-instance-container.html][Instance Container]]: The p5.js example page for putting a sketch in a specific location (using ~div~ tags). It gives several variations of how to do it, I used what I thought was the easiest way.
- <<GSWP>>Reas C, Fry B. Getting started with Processing. 1st ed. Beijing ; Sebastopol, [CA]: O’Reilly; 2010. 194 p. (Make: projects). 
