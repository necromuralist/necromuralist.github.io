<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about bfg)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/bfg.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2022 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Tue, 22 Mar 2022 01:23:49 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Removing Large Files From git Using BFG and a Local Repository</title><link>https://necromuralist.github.io/posts/removing-large-files-from-git-using-bfg-and-a-local-repository/</link><dc:creator>hades</dc:creator><description>&lt;section id="background"&gt;
&lt;h2&gt;1 Background&lt;/h2&gt;
&lt;p&gt;This is about removinge large files that have been committed to a git repository. Github has a 100 MB file limit, and I'm using Century Link's ADSL (Fiber to the Node) so my upload speeds are much slower than my download speeds, so I'd like to keep large files out of the repository. The problem when working with data is that you can often end up with very large files that accidentally get committed, then need to be removed. Here's two cases I've run into:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;I accidentally committed some large files to a git repository and couldn't push my changes up to github, having exceeded their file-size limit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I committed a folder that had some large files that were under the limit, but were just taking too long to upload.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I stumbled upon the &lt;a class="reference external" href="https://rtyley.github.io/bfg-repo-cleaner/"&gt;BFG Repo-Cleaner&lt;/a&gt; while looking for a solution and kept these notes so I don't forget what I did.&lt;/p&gt;
&lt;p&gt;The instructions on the website are pretty clear, but it assumes that the large files are on a remote repository (I talk about that case &lt;a class="reference external" href="https://necromuralist.github.io/posts/pruning-large-files-from-git-with-bfg/"&gt;here&lt;/a&gt;) but in my case my changes were local so I needed to change the first step from cloning the repository to cleaning the git repository (I'll call the repository &lt;code class="docutils literal"&gt;big_files&lt;/code&gt;). In this case I decided to remove anything bigger than 50 MegaBytes.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-commands"&gt;
&lt;h2&gt;2 The Commands&lt;/h2&gt;
&lt;p&gt;For reference, these are all the commands. I'll go over them in the sections that follow. The &lt;code class="docutils literal"&gt;java &lt;span class="pre"&gt;-jar&lt;/span&gt;&lt;/code&gt; line pointing to the BFG jar file will have to match your download file name and location.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a id="rest_code_55f0b2b72a7140fd90dae046d340169a-1" name="rest_code_55f0b2b72a7140fd90dae046d340169a-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;big_files&lt;/span&gt;
&lt;a id="rest_code_55f0b2b72a7140fd90dae046d340169a-2" name="rest_code_55f0b2b72a7140fd90dae046d340169a-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt;
&lt;a id="rest_code_55f0b2b72a7140fd90dae046d340169a-3" name="rest_code_55f0b2b72a7140fd90dae046d340169a-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;
&lt;a id="rest_code_55f0b2b72a7140fd90dae046d340169a-4" name="rest_code_55f0b2b72a7140fd90dae046d340169a-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;java&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="n"&gt;bfg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.12.7&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;blobs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bigger&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;big_files&lt;/span&gt;
&lt;a id="rest_code_55f0b2b72a7140fd90dae046d340169a-5" name="rest_code_55f0b2b72a7140fd90dae046d340169a-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;big_files&lt;/span&gt;
&lt;a id="rest_code_55f0b2b72a7140fd90dae046d340169a-6" name="rest_code_55f0b2b72a7140fd90dae046d340169a-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;reflog&lt;/span&gt; &lt;span class="n"&gt;expire&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;expire&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;
&lt;a id="rest_code_55f0b2b72a7140fd90dae046d340169a-7" name="rest_code_55f0b2b72a7140fd90dae046d340169a-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;prune&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;aggressive&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;I'll break this down into three parts:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Clean the repository&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run BFG to remove the file from the git history&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Clean the repository again&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;section id="clean-the-repository"&gt;
&lt;h3&gt;2.1 Clean The repository&lt;/h3&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://git-scm.com/docs/git-gc"&gt;git gc&lt;/a&gt; (garbage collection) command will clean up unnecessary files and perform some optimizations that will let us run BFG on it.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a id="rest_code_8f94970b7b4f4af099058dc69ef06277-1" name="rest_code_8f94970b7b4f4af099058dc69ef06277-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; big_files
&lt;a id="rest_code_8f94970b7b4f4af099058dc69ef06277-2" name="rest_code_8f94970b7b4f4af099058dc69ef06277-2"&gt;&lt;/a&gt;git gc
&lt;a id="rest_code_8f94970b7b4f4af099058dc69ef06277-3" name="rest_code_8f94970b7b4f4af099058dc69ef06277-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ../
&lt;/pre&gt;&lt;/section&gt;
&lt;section id="run-bfg"&gt;
&lt;h3&gt;2.2 Run BFG&lt;/h3&gt;
&lt;pre class="code sh"&gt;&lt;a id="rest_code_39e282ce90e24cfda4e5866ae4c0412d-1" name="rest_code_39e282ce90e24cfda4e5866ae4c0412d-1"&gt;&lt;/a&gt;java -jar bfg-1.12.7.jar --strip-blobs-bigger-than 50M big_files
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;You have to run in the folder just above the git repository&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Change it to have the correct path to the jar (e.g. &lt;code class="docutils literal"&gt;java &lt;span class="pre"&gt;-jar&lt;/span&gt; &lt;span class="pre"&gt;/home/username/bin/bfg-1.12.7.jar&lt;/span&gt;&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then tell it to remove files bigger than 50 Megabytes (or whatever size limit you want) in the &lt;code class="docutils literal"&gt;big_files&lt;/code&gt; folder&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="clean-up-the-git-repository-again"&gt;
&lt;h3&gt;2.3 Clean Up the Git Repository Again&lt;/h3&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;BFG&lt;/code&gt; will tell you this part in it's output, although I'm not using bash so it worked better when I ran the commands separately, instead of all on one line using &lt;code class="docutils literal"&gt;&amp;amp;&amp;amp;&lt;/code&gt; between the commands (fish doesn't support it). These are git commands so you have to change back into the repository folder.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a id="rest_code_df41d117d8ca4f86a994ce13fbeb7db3-1" name="rest_code_df41d117d8ca4f86a994ce13fbeb7db3-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;big_files&lt;/span&gt;
&lt;a id="rest_code_df41d117d8ca4f86a994ce13fbeb7db3-2" name="rest_code_df41d117d8ca4f86a994ce13fbeb7db3-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;reflog&lt;/span&gt; &lt;span class="n"&gt;expire&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;expire&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;
&lt;a id="rest_code_df41d117d8ca4f86a994ce13fbeb7db3-3" name="rest_code_df41d117d8ca4f86a994ce13fbeb7db3-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;prune&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;aggressive&lt;/span&gt;
&lt;/pre&gt;&lt;/section&gt;
&lt;/section&gt;</description><category>bfg</category><category>git</category><guid>https://necromuralist.github.io/posts/removing-large-files-from-git-using-bfg-and-a-local-repository/</guid><pubDate>Sun, 14 Jan 2018 21:55:37 GMT</pubDate></item><item><title>Pruning Large Files From Git with BFG</title><link>https://necromuralist.github.io/posts/pruning-large-files-from-git-with-bfg/</link><dc:creator>hades</dc:creator><description>&lt;p&gt;These are my notes on removing large files from a git repository with the &lt;a class="reference external" href="https://rtyley.github.io/bfg-repo-cleaner/"&gt;BFG Repo-Cleaner&lt;/a&gt;. It assumes that you have already pushed it to a remote repository. If you've committed the changes but haven't pushed them, see &lt;a class="reference external" href="https://necromuralist.github.io/posts/removing-large-files-from-git-using-bfg-and-a-local-repository/"&gt;this post&lt;/a&gt;.&lt;/p&gt;
&lt;section id="background"&gt;
&lt;h2&gt;1 Background&lt;/h2&gt;
&lt;p&gt;I accidentally committed an 89 MB file to git and pushed it upstream to github. This is within the allowed file-size limit, but when I looked in the file it was filled with the same error message over and over again, so it wasn't useful to keep, anyway. I was just working with small log-files, so any large files indicated an error, anyway, so I decided to clean anything over 50 MB from the repository using &lt;em&gt;BFG&lt;/em&gt;. The instructions on the home page mostly work, but didn't exactly work so I'm making some notes here for the next time.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="the-process"&gt;
&lt;h2&gt;2 The Process&lt;/h2&gt;
&lt;p&gt;Assuming you've downloaded the BFG jar file, this is what you need to do.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a id="rest_code_11deaf76efe6447cacebc6369af2d1c3-1" name="rest_code_11deaf76efe6447cacebc6369af2d1c3-1"&gt;&lt;/a&gt;git clone --mirror &amp;lt;remote git address&amp;gt;
&lt;/pre&gt;&lt;p&gt;The &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--mirror&lt;/span&gt;&lt;/code&gt; flag creates a bare repository so it will look a little odd (the top level has the contents of what are normally in the &lt;code class="docutils literal"&gt;.git&lt;/code&gt; folder). When I first tried this I thought I could clone my local copy but when I ran BFG on the clone it said that it couldn't find any large files. As noted in &lt;a class="reference external" href="https://github.com/rtyley/bfg-repo-cleaner/issues/65"&gt;this bug-report&lt;/a&gt; the large files would be in the packfile if you clone it from a remote repository, but not necessarily in the local repository, so I had to clone it from github.&lt;/p&gt;
&lt;p&gt;Next run the BFG.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a id="rest_code_0e5f4571398540288f236b169be72a99-1" name="rest_code_0e5f4571398540288f236b169be72a99-1"&gt;&lt;/a&gt;java -jar BFG-1.12.15.jar --strip-blobs-bigger-than 50M &amp;lt;path to cloned mirror&amp;gt;
&lt;/pre&gt;&lt;p&gt;Now you have to change into the cloned repository and execute some commands to update it.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a id="rest_code_4fe2e6f60e5b44cb86a1a0dcbeea042e-1" name="rest_code_4fe2e6f60e5b44cb86a1a0dcbeea042e-1"&gt;&lt;/a&gt;git reflog expire --expire-now --all
&lt;a id="rest_code_4fe2e6f60e5b44cb86a1a0dcbeea042e-2" name="rest_code_4fe2e6f60e5b44cb86a1a0dcbeea042e-2"&gt;&lt;/a&gt;git gc --prune&lt;span class="o"&gt;=&lt;/span&gt;now --aggressive
&lt;/pre&gt;&lt;p&gt;Now push it back to github.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a id="rest_code_da6b670b56a046f0836850a520e75224-1" name="rest_code_da6b670b56a046f0836850a520e75224-1"&gt;&lt;/a&gt;git push
&lt;/pre&gt;&lt;p&gt;At this point the original local copy of the repository will still have the large file(s) in the history so if you just do a git pull it will think you are ahead of the remote, so you have to remove your original local repository and re-clone the remote.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a id="rest_code_0ea09caa1c4045088e41fc3db794a11e-1" name="rest_code_0ea09caa1c4045088e41fc3db794a11e-1"&gt;&lt;/a&gt;rm -r &amp;lt;original &lt;span class="nb"&gt;local&lt;/span&gt; repository&amp;gt;
&lt;a id="rest_code_0ea09caa1c4045088e41fc3db794a11e-2" name="rest_code_0ea09caa1c4045088e41fc3db794a11e-2"&gt;&lt;/a&gt;git clone &amp;lt;remote repository&amp;gt;
&lt;/pre&gt;&lt;p&gt;One thing that tripped me up a little was that I had removed the &lt;em&gt;master&lt;/em&gt; branch but the &lt;em&gt;BFG&lt;/em&gt; re-added it, so it originally looked like I had lost some changes. Once I changed back into my working branch everything was as I had expected.&lt;/p&gt;
&lt;/section&gt;</description><category>bfg</category><category>git</category><category>how-to</category><guid>https://necromuralist.github.io/posts/pruning-large-files-from-git-with-bfg/</guid><pubDate>Sun, 14 Jan 2018 20:57:59 GMT</pubDate></item></channel></rss>