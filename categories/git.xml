<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about git)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/git.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2018 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Tue, 09 Oct 2018 20:07:44 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Removing Large Files From git Using BFG and a Local Repository</title><link>https://necromuralist.github.io/posts/removing-large-files-from-git-using-bfg-and-a-local-repository/</link><dc:creator>hades</dc:creator><description>&lt;div&gt;&lt;div class="section" id="background"&gt;
&lt;h2&gt;1 Background&lt;/h2&gt;
&lt;p&gt;This is about removinge large files that have been committed to a git repository. Github has a 100 MB file limit, and I'm using Century Link's ADSL (Fiber to the Node) so my upload speeds are much slower than my download speeds, so I'd like to keep large files out of the repository. The problem when working with data is that you can often end up with very large files that accidentally get committed, then need to be removed. Here's two cases I've run into:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I accidentally committed some large files to a git repository and couldn't push my changes up to github, having exceeded their file-size limit&lt;/li&gt;
&lt;li&gt;I committed a folder that had some large files that were under the limit, but were just taking too long to upload.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I stumbled upon the &lt;a class="reference external" href="https://rtyley.github.io/bfg-repo-cleaner/"&gt;BFG Repo-Cleaner&lt;/a&gt; while looking for a solution and kept these notes so I don't forget what I did.&lt;/p&gt;
&lt;p&gt;The instructions on the website are pretty clear, but it assumes that the large files are on a remote repository (I talk about that case &lt;a class="reference external" href="https://necromuralist.github.io/posts/pruning-large-files-from-git-with-bfg/"&gt;here&lt;/a&gt;) but in my case my changes were local so I needed to change the first step from cloning the repository to cleaning the git repository (I'll call the repository &lt;tt class="docutils literal"&gt;big_files&lt;/tt&gt;). In this case I decided to remove anything bigger than 50 MegaBytes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-commands"&gt;
&lt;h2&gt;2 The Commands&lt;/h2&gt;
&lt;p&gt;For reference, these are all the commands. I'll go over them in the sections that follow. The &lt;tt class="docutils literal"&gt;java &lt;span class="pre"&gt;-jar&lt;/span&gt;&lt;/tt&gt; line pointing to the BFG jar file will have to match your download file name and location.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ed711487da954d2c86ac15d5e0a0301a-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;big_files&lt;/span&gt;
&lt;a name="rest_code_ed711487da954d2c86ac15d5e0a0301a-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt;
&lt;a name="rest_code_ed711487da954d2c86ac15d5e0a0301a-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;
&lt;a name="rest_code_ed711487da954d2c86ac15d5e0a0301a-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;java&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="n"&gt;bfg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.12&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;7.j&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;blobs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bigger&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;big_files&lt;/span&gt;
&lt;a name="rest_code_ed711487da954d2c86ac15d5e0a0301a-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;big_files&lt;/span&gt;
&lt;a name="rest_code_ed711487da954d2c86ac15d5e0a0301a-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;reflog&lt;/span&gt; &lt;span class="n"&gt;expire&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;expire&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;
&lt;a name="rest_code_ed711487da954d2c86ac15d5e0a0301a-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;prune&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;aggressive&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;I'll break this down into three parts:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Clean the repository&lt;/li&gt;
&lt;li&gt;Run BFG to remove the file from the git history&lt;/li&gt;
&lt;li&gt;Clean the repository again&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="clean-the-repository"&gt;
&lt;h3&gt;2.1 Clean The repository&lt;/h3&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://git-scm.com/docs/git-gc"&gt;git gc&lt;/a&gt; (garbage collection) command will clean up unnecessary files and perform some optimizations that will let us run BFG on it.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a name="rest_code_730c75775dc446e999e8262c3692dc7e-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; big_files
&lt;a name="rest_code_730c75775dc446e999e8262c3692dc7e-2"&gt;&lt;/a&gt;git gc
&lt;a name="rest_code_730c75775dc446e999e8262c3692dc7e-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ../
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="run-bfg"&gt;
&lt;h3&gt;2.2 Run BFG&lt;/h3&gt;
&lt;pre class="code sh"&gt;&lt;a name="rest_code_a56d5e2976e54c96b9df0054407d20cd-1"&gt;&lt;/a&gt;java -jar bfg-1.12.7.jar --strip-blobs-bigger-than 50M big_files
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;You have to run in the folder just above the git repository&lt;/li&gt;
&lt;li&gt;Change it to have the correct path to the jar (e.g. &lt;tt class="docutils literal"&gt;java &lt;span class="pre"&gt;-jar&lt;/span&gt; &lt;span class="pre"&gt;/home/username/bin/bfg-1.12.7.jar&lt;/span&gt;&lt;/tt&gt;).&lt;/li&gt;
&lt;li&gt;Then tell it to remove files bigger than 50 Megabytes (or whatever size limit you want) in the &lt;tt class="docutils literal"&gt;big_files&lt;/tt&gt; folder&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="clean-up-the-git-repository-again"&gt;
&lt;h3&gt;2.3 Clean Up the Git Repository Again&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;BFG&lt;/tt&gt; will tell you this part in it's output, although I'm not using bash so it worked better when I ran the commands separately, instead of all on one line using &lt;tt class="docutils literal"&gt;&amp;amp;&amp;amp;&lt;/tt&gt; between the commands (fish doesn't support it). These are git commands so you have to change back into the repository folder.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_aaec9780793344a79528edc9d99992dc-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;big_files&lt;/span&gt;
&lt;a name="rest_code_aaec9780793344a79528edc9d99992dc-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;reflog&lt;/span&gt; &lt;span class="n"&gt;expire&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;expire&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;
&lt;a name="rest_code_aaec9780793344a79528edc9d99992dc-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;prune&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;aggressive&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>bfg</category><category>git</category><guid>https://necromuralist.github.io/posts/removing-large-files-from-git-using-bfg-and-a-local-repository/</guid><pubDate>Sun, 14 Jan 2018 21:55:37 GMT</pubDate></item></channel></rss>