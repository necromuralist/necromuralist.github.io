<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about Arlo)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/cat_arlo.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2023 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Thu, 04 May 2023 00:33:50 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Downloading Video From the Arlo</title><link>https://necromuralist.github.io/posts/downloading-video-from-the-arlo/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/downloading-video-from-the-arlo/#org7445064"&gt;The Prowler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/downloading-video-from-the-arlo/#org36327fe"&gt;The Problem with Arlo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/downloading-video-from-the-arlo/#org1aacc38"&gt;The Python Solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/downloading-video-from-the-arlo/#org75fbe96"&gt;A Command-Line Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/downloading-video-from-the-arlo/#orgada3263"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7445064" class="outline-2"&gt;
&lt;h2 id="org7445064"&gt;The Prowler&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7445064"&gt;
&lt;p&gt;
I came home the other day to find some things from my garage outside on the driveway. The garage door was closed but the bolt wasn't in place, so I guess I forgot to secure it and someone went in while I was at work. I have two Arlo security cameras, one pointing at my front lawn and one at my back (I just took the ones I had set up to catch intruders and pointed them outside so they aren't really set up correctly) and they are supposed to send me notifications when motion is detected, but I didn't recall seeing any, but then I looked at my phone and I had missed one earlier in the day, and when I looked at it there was a video showing someone standing outside my back door, but that was all, but I have a Continuous Video Recording (CVR) subscription so I decided to poke around, that's when I found out how horrible Arlo's CVR really is.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org36327fe" class="outline-2"&gt;
&lt;h2 id="org36327fe"&gt;The Problem with Arlo&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org36327fe"&gt;
&lt;p&gt;
The first problem with the Arlo's CVR system is that it's not always reliable. I've had cameras randomly stop recording videos on the server and the only "fix" that the help desk was able to give me was to deauthorize and reauthorize them (and in some cases completely remove them from the base-station and re-add them). This seems to work, but whenever you deauthorize a camera the server dumps all your recordings, so if you think you want to save something you'll have to do that first or it won't be there when the camera gets re-authorized. But then if you try to save something you'll find that the Arlo doesn't provide a way to download the video. The work-around you'll find on the forums is to do a screen capture while it plays - a horrible system, especially since the flash interface is pretty flaky and doesn't always work on my PC. 
&lt;/p&gt;

&lt;p&gt;
Then there's a secondary problem in that it's recording twenty-four hours a day - and they don't have a fast-forward button. They do have a timeline that you can click on to jump around, not only does this mean you might be jumping past events you want, but they don't really have a 'streaming' interface in the sense that Netflix or some other streaming service does where they're downloading small chunks so you don't have to wait a long time for the play to resume, instead the Arlo seems to be downloading one minute at a time so you have these really long waits, and the precision of the timeline isn't very good so you'll probably have to search a little bit just to find what you want.
&lt;/p&gt;

&lt;p&gt;
There's also another problem, which is that the user-interface's timeline isn't accurate, so even if you know the time of an event, you can't use the time in the interface to find it. In my case the bit that was captured on my phone showing the trespasser gave me a time, and there was a little blue dot on the timeline showing that there was an event at that time, but there was nothing in the video. It turned out that the video for the camera I had out back was shifted fifty-five minutes into the future, which was even more confusing because the time for the camera I had in front wasn't shifted (that I know of) so when I looked at the video for the front around that time I &lt;i&gt;was&lt;/i&gt; able to see the prowler arriving. 
&lt;/p&gt;

&lt;p&gt;
But even once I found the places in the CVR that showed the prowler (I didn't have it pointing at my garage so I didn't see him actually doing anything other than probing (knocking and then trying to open the doors)) I still had the problem of how to get the video before Netgear decided to break again and I lost it all. This is where python came in.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1aacc38" class="outline-2"&gt;
&lt;h2 id="org1aacc38"&gt;The Python Solution&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1aacc38"&gt;
&lt;p&gt;
It turns out that even though netgear hasn't published an official API for the Arlo, some people (&lt;a href="http://www.robertogallea.com/blog/netgear-arlo-api"&gt;like this guy&lt;/a&gt;) have reverse-engineered the API and there are several python-based libraries on github that help you talk to the arlo. This &lt;a href="https://github.com/jeffreydwalter/arlo"&gt;one&lt;/a&gt;, by &lt;i&gt;jeffreydwalter&lt;/i&gt; was the one that I saw that helped with downloading the CVR videos so it's the one that I went with. It's on pypi, but the commit that added CVR support was made a month ago and I wasn't sure when the pypi code was uploaded so I decided to install it from the master branch, since I was going to use the example code to start my code anyway - by this I mean I had to pull the repository anyway, so I used the &lt;code&gt;setup.py&lt;/code&gt; file to install it (in developer mode in case it changes).
&lt;/p&gt;

&lt;p&gt;
The following code is basically what you can find in the example that comes with the repository called &lt;a href="https://github.com/jeffreydwalter/arlo/blob/master/examples/arlo-cvrdownload.py"&gt;arlo-cvrdownload.py&lt;/a&gt; re-written to have a command-line interface and match my coding style more.
&lt;/p&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;div id="outline-container-orgef0f93f" class="outline-3"&gt;
&lt;h3 id="orgef0f93f"&gt;The Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgef0f93f"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgea5be86" class="outline-3"&gt;
&lt;h3 id="orgea5be86"&gt;Getting the User Name and Password&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgea5be86"&gt;
&lt;p&gt;
In order to use the API you need to have a Netgear account and you have to pass it to the server. To prevent putting the credentials in the code, I'll use &lt;a href="https://github.com/theskumar/python-dotenv"&gt;python-dotenv&lt;/a&gt;. In order to use it I created a file named &lt;code&gt;config.arlo&lt;/code&gt; with the information so I can load it.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;

&lt;div id="outline-container-org9dc52b4" class="outline-4"&gt;
&lt;h4 id="org9dc52b4"&gt;Load the credentials&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9dc52b4"&gt;
&lt;p&gt;
&lt;code&gt;dotenv&lt;/code&gt; works by adding the values in the configuration file into the environment dictionary. Most of the convenience of it comes if you create a &lt;code&gt;.env&lt;/code&gt; file at the base of your repository, in which case it will automatically find it for you, but even though I'm not doing that it still saves me from parsing the file myself, so I'll use it. Since the other properties (&lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;) rely on the values already being in the dictionary I'm calling &lt;code&gt;load_dotenv&lt;/code&gt; in the &lt;code&gt;config_path&lt;/code&gt; setter so that it's there before they get used.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9652e78" class="outline-4"&gt;
&lt;h4 id="org9652e78"&gt;And The Rest&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9652e78"&gt;
&lt;p&gt;
This is the rest of the methods for the &lt;code&gt;Credentials&lt;/code&gt; class. Org-mode pushes it flush-left on export so it looks like it is missing whitespace, but it's there in the code.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org917def0" class="outline-3"&gt;
&lt;h3 id="org917def0"&gt;Output File Paths&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org917def0"&gt;
&lt;p&gt;
Python 3.4 added a &lt;a href="https://docs.python.org/3/library/pathlib.html"&gt;Path&lt;/a&gt; class to create an object-oriented version of what &lt;a href="https://docs.python.org/3/library/os.path.html"&gt;os.path&lt;/a&gt; does (along with some other stuff). You don't need it but I like it. My command-line interface actually doesn't support the sub-folder so it mostly just makes sure the folder is there. The &lt;code&gt;Paths&lt;/code&gt; class here is to help set up the directories for the video output files.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga05f500" class="outline-3"&gt;
&lt;h3 id="orga05f500"&gt;Downloader&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga05f500"&gt;
&lt;p&gt;
This is the class to actually do the downloading. It essentially does what the example does but I like it to be both smaller and more verbose so this matches my style more.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;

&lt;div id="outline-container-org42db211" class="outline-4"&gt;
&lt;h4 id="org42db211"&gt;The Call&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org42db211"&gt;
&lt;p&gt;
This does the actual downloading. It downloads some &lt;code&gt;m3u8&lt;/code&gt; files and then pulls the files that they refer to. &lt;a href="https://en.wikipedia.org/wiki/M3U#M3U8"&gt;m3u8&lt;/a&gt; (MP3 URL with UTF-8 encoding) is a format to list URLs or paths that point to media and is said to be popular (by Wikipedia) in Dynamic Adaptive Streaming over HTTP (although I don't think the arlo uses DASH).
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org75fbe96" class="outline-2"&gt;
&lt;h2 id="org75fbe96"&gt;A Command-Line Interface&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org75fbe96"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgada3263" class="outline-2"&gt;
&lt;h2 id="orgada3263"&gt;Conclusion&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgada3263"&gt;
&lt;p&gt;
For a consumer product this seems like a lot of work to download videos, but I'm glad someone went to the trouble to build this to make up for Netgear's horrible user interface. The Arlo seems like some decent (although probably overpriced) hardware matched to some pretty bad software and nearly non-existent customer support or documentation and a not particularly robust web-service. I don't know that I would recommend it to anyone who wants more than a web-camera.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>arlo</category><category>python</category><guid>https://necromuralist.github.io/posts/downloading-video-from-the-arlo/</guid><pubDate>Thu, 20 Sep 2018 18:28:53 GMT</pubDate></item></channel></rss>