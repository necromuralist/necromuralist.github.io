<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about notes)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/cat_notes.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2018 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Wed, 19 Dec 2018 22:37:27 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>TCP Dump Notes</title><link>https://necromuralist.github.io/posts/tcp-dump-notes/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
These are notes I made while surfing the web looking into &lt;a href="http://www.tcpdump.org/"&gt;TCP Dump&lt;/a&gt;. You will most likely need to use &lt;code&gt;sudo&lt;/code&gt; to run most of the commands, but I'm leaving it off to make it shorter.
&lt;/p&gt;

&lt;div id="outline-container-org6f31f12" class="outline-2"&gt;
&lt;h2 id="org6f31f12"&gt;About TCP Dump&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6f31f12"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;It has more filtering capabilities and can filter while capturing packets, but it doesn't have the analytical tools that something like wireshark has&lt;sup&gt;&lt;a id="fnr.1" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org771cd78" class="outline-2"&gt;
&lt;h2 id="org771cd78"&gt;Some Examples&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org771cd78"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc6ddf35" class="outline-3"&gt;
&lt;h3 id="orgc6ddf35"&gt;Listing interfaces&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc6ddf35"&gt;
&lt;p&gt;
You can ask &lt;code&gt;tcpdump&lt;/code&gt; which interfaces it is able to listen to&lt;sup&gt;&lt;a id="fnr.2" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump -D
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb4c9be0" class="outline-3"&gt;
&lt;h3 id="orgb4c9be0"&gt;Capture packets on an interface&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb4c9be0"&gt;
&lt;p&gt;
To capture packets on an interface you pass its name to the &lt;code&gt;-i&lt;/code&gt; flag&lt;sup&gt;&lt;a id="fnr.2.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt; (here the interface I'll use is &lt;code&gt;eno1&lt;/code&gt;).
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump -i eno1
&lt;/pre&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdf7e821" class="outline-4"&gt;
&lt;h4 id="orgdf7e821"&gt;Save the packet capture to a file&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgdf7e821"&gt;
&lt;p&gt;
The default behavior is for &lt;code&gt;tcpdump&lt;/code&gt; to send the output to standard output, to have it save the packets to a files use the &lt;code&gt;-w&lt;/code&gt; flag&lt;sup&gt;&lt;a id="fnr.2.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt; (you can call it anything, I'll call it &lt;code&gt;dump.pcap&lt;/code&gt;).
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump -i eno1 -w dump.pcap
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga448d7c" class="outline-4"&gt;
&lt;h4 id="orga448d7c"&gt;Increase the verbosity of the capture&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orga448d7c"&gt;
&lt;p&gt;
To increase the amount if information that's captured, pass multiple &lt;code&gt;v&lt;/code&gt; arguments&lt;sup&gt;&lt;a id="fnr.2.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt; (in this case I'll use &lt;code&gt;-vvv&lt;/code&gt;).
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump -i eno1 -vvv -w dump.pcap
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd6aba98" class="outline-3"&gt;
&lt;h3 id="orgd6aba98"&gt;Filtering&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd6aba98"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgbf88988" class="outline-4"&gt;
&lt;h4 id="orgbf88988"&gt;By IP address&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgbf88988"&gt;
&lt;p&gt;
You can get all the packets being sent or received by a host using the &lt;code&gt;host&lt;/code&gt; argument&lt;sup&gt;&lt;a id="fnr.3" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump host 192.168.1.12
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb6c2c8c" class="outline-4"&gt;
&lt;h4 id="orgb6c2c8c"&gt;By Sender IP Address&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgb6c2c8c"&gt;
&lt;p&gt;
You can filter out all the packets except those that are being sent by a host using the &lt;code&gt;src host&lt;/code&gt; argument&lt;sup&gt;&lt;a id="fnr.2.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump -i eno1 src host 192.168.1.12
&lt;/pre&gt;

&lt;p&gt;
You can leave off the &lt;code&gt;host&lt;/code&gt; argument and just use &lt;code&gt;src&lt;/code&gt;&lt;sup&gt;&lt;a id="fnr.3.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org85b15e6" class="outline-4"&gt;
&lt;h4 id="org85b15e6"&gt;By Target IP Address&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org85b15e6"&gt;
&lt;p&gt;
To filter out all the packets except those that are going to a specific target use the &lt;code&gt;dst host&lt;/code&gt; argument&lt;sup&gt;&lt;a id="fnr.2.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump -i eno1 dst host 192.168.1.1
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1319e8e" class="outline-4"&gt;
&lt;h4 id="org1319e8e"&gt;Sender and Target IP Addresses&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1319e8e"&gt;
&lt;p&gt;
You can combine parameters using the logical operators &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt;&lt;sup&gt;&lt;a id="fnr.3.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump 'src 192.168.1.1 and dst 192.168.1.12'
&lt;/pre&gt;

&lt;p&gt;
The single quotes are optional and are just used to group the arguments together.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org202546d" class="outline-4"&gt;
&lt;h4 id="org202546d"&gt;By Subnet&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org202546d"&gt;
&lt;p&gt;
You can grab all the packets on a network or subnet using the &lt;code&gt;net&lt;/code&gt; argument and &lt;a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation"&gt;CIDR&lt;/a&gt; notation&lt;sup&gt;&lt;a id="fnr.3.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt;. This example grabs all the packets on the &lt;code&gt;192.168.1.*&lt;/code&gt; subnet.
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump net 192.168.1.0/24
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org103bbe1" class="outline-4"&gt;
&lt;h4 id="org103bbe1"&gt;By port and/or protocol&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org103bbe1"&gt;
&lt;p&gt;
If you want to only catch activity on a certain &lt;a href="https://en.wikipedia.org/wiki/Port_(computer_networking)"&gt;port&lt;/a&gt; and by a certain protocol then you use the &lt;code&gt;port&lt;/code&gt; argument and the name of the protocol (e.g. &lt;code&gt;udp&lt;/code&gt;)&lt;sup&gt;&lt;a id="fnr.3.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt;. This would catch all the &lt;code&gt;tcp&lt;/code&gt; traffic over SSH.
&lt;/p&gt;
&lt;pre class="example"&gt;
tcpdump tcp port 22
&lt;/pre&gt;

&lt;p&gt;
You can use &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;udp&lt;/code&gt;, or &lt;code&gt;icmp&lt;/code&gt; for the protocols and add multiple ports using a comma&lt;sup&gt;&lt;a id="fnr.4" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.4"&gt;4&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump tcp port 22,80
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1e7b992" class="outline-4"&gt;
&lt;h4 id="org1e7b992"&gt;Turn off hostname and port translation&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1e7b992"&gt;
&lt;p&gt;
The default behavior for &lt;code&gt;tcpdump&lt;/code&gt; is to translate the hostnames and ports to something human-readable if possible. To turn this off you pass in the &lt;code&gt;-n&lt;/code&gt; argument&lt;sup&gt;&lt;a id="fnr.3.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt;. Since this stops having to look things up it will reduce the amount of overhead needed by &lt;code&gt;tcpdump&lt;/code&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
tcpdump -n -i eno1 port 22
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge2b2c24" class="outline-2"&gt;
&lt;h2 id="orge2b2c24"&gt;Links&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge2b2c24"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;(Wireshark Revealed&lt;sup&gt;&lt;a id="fnr.5" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.5"&gt;5&lt;/a&gt;&lt;/sup&gt;) &lt;a href="http://www.tcpdump.org/"&gt;The tcpdump website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(Wireshark Revealed&lt;sup&gt;&lt;a id="fnr.5.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.5"&gt;5&lt;/a&gt;&lt;/sup&gt;) &lt;a href="http://danielmiessler.com/study/tcpdump/"&gt;A friendly tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(Wireshark Revealed&lt;sup&gt;&lt;a id="fnr.5.100" class="footref" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fn.5"&gt;5&lt;/a&gt;&lt;/sup&gt;) &lt;a href="http://www.tcpdump.org/tcpdump_man.html"&gt;The official man page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org07b4237" class="outline-2"&gt;
&lt;h2 id="org07b4237"&gt;Sources&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org07b4237"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" class="footnum" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
  Diogenes, Y. &amp;amp; Ozkaya, E. (2018). Cybersecurity, Attack and Defense Strategies : infrastructure security with Red Team and Blue Team tactics. Birmingham, UK: Packt Publishing.]
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" class="footnum" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
  Johansen, G. (2017). Digital forensics and incident response : an intelligent way to respond to attacks. Birmingham, UK: Packt Publishing.
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.3" class="footnum" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fnr.3"&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
  Beltrame, J. (2017). Penetration testing bootcamp : quickly get up and running with pentesting techniques. Birmingham, UK: Packt Publishing.
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.4" class="footnum" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fnr.4"&gt;4&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
  McPhee. &amp;amp; Beltrame, J. (2016). Penetration testing with Raspberry Pi : learn the art of building a low-cost, portable hacking arsenal using Raspberry Pi 3 and Kali Linux 2. Birmingham, UK: Packt Publishing.
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.5" class="footnum" href="https://necromuralist.github.io/posts/tcp-dump-notes/#fnr.5"&gt;5&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
  Baxter, J., Orzach, Y. &amp;amp; Mishra, C. (2017). Wireshark revealed : essential skills for IT professionals : get up and running with Wireshark to analyze your network effectively. Birmingham, UK: Packt Publishing.
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>notes networking</category><guid>https://necromuralist.github.io/posts/tcp-dump-notes/</guid><pubDate>Wed, 09 May 2018 21:54:56 GMT</pubDate></item></channel></rss>