<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about org-babel)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/org-babel.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Thu, 10 Feb 2022 23:32:22 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Inserting Text Between Methods in Org-Mode</title><link>https://necromuralist.github.io/posts/org-babel-noweb-ref/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/org-babel-noweb-ref/#orge92293c"&gt;The Tangle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/org-babel-noweb-ref/#org1ef755b"&gt;The First Class&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/org-babel-noweb-ref/#org4a7169a"&gt;The Constructor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/org-babel-noweb-ref/#org09dcc7a"&gt;The Call&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/org-babel-noweb-ref/#org5252f07"&gt;The Main&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/org-babel-noweb-ref/#orgb17ef17"&gt;Trying it out&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/org-babel-noweb-ref/#org824c9eb"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;
This is an attempt to get org-mode to insert text between methods in a class definition using the noweb-ref property. I think you can also do it by just tangling everything to the same file, but I like the noweb notation better.
&lt;/p&gt;

&lt;div id="outline-container-orge92293c" class="outline-2"&gt;
&lt;h2 id="orge92293c"&gt;The Tangle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge92293c"&gt;
&lt;p&gt;
To keep it simple I'm just going to include a section for the class definition and a &lt;code&gt;main&lt;/code&gt; section to check out the results. Note that to be able to break up the class definition I had to turn off org-mode's clean-up so all the python blocks have to be indented exactly the way they will be in the final python file.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1ef755b" class="outline-2"&gt;
&lt;h2 id="org1ef755b"&gt;The First Class&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1ef755b"&gt;
&lt;p&gt;
This first class won't do much, but if I understand the documentation I should be able to insert text between the parts of it and still have it work when the python gets tangled out. The org-mode source block starts like this - &lt;code&gt;#+BEGIN_SRC python :noweb-ref first-class&lt;/code&gt;.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org4a7169a" class="outline-3"&gt;
&lt;h3 id="org4a7169a"&gt;The Constructor&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4a7169a"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FirstClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
       &lt;span class="sd"&gt;"""a class that is first&lt;/span&gt;
&lt;span class="sd"&gt;       Parameters&lt;/span&gt;
&lt;span class="sd"&gt;       ----------&lt;/span&gt;

&lt;span class="sd"&gt;       name: string&lt;/span&gt;
&lt;span class="sd"&gt;	 some kind of identifier&lt;/span&gt;
&lt;span class="sd"&gt;       """&lt;/span&gt;
       &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
	   &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
	   &lt;span class="k"&gt;return&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org09dcc7a" class="outline-3"&gt;
&lt;h3 id="org09dcc7a"&gt;The Call&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org09dcc7a"&gt;
&lt;p&gt;
The call emits the name. To concatenate this method to the previous block I'm using the same org-mode source-block header as I did with the constructor (&lt;code&gt;#+BEGIN_SRC python :noweb-ref first-class&lt;/code&gt;). You could use a different name and insert another reference in the tangle but this seems more logical to me. One problem here is that python-mode (or some other mode) will interpret the methods as stand-alone functions and move them flush left. To fix this I had to turn off the automatic indentation using &lt;code&gt;(setq org-src-preserve-indentation t)&lt;/code&gt;. This means that you have to keep track of the indentation yourself, regardless of where the code sits in the org-mode document (so as you create sub-sections it will look uglier and uglier in the original document, at least to me). Putting the method in a separate block also requires that you to insert an empty line before the method to  keep it from being stuck to the bottom of the previous one, but it doesn't include it when it gets exported to HTML, so you can't see it in this post. In fact, I noticed afterwards that the HTML export also stripped out the indentation on the left so you can't really see what I'm talking about.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
       &lt;span class="sd"&gt;"""prints the name"""&lt;/span&gt;
       &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5252f07" class="outline-2"&gt;
&lt;h2 id="org5252f07"&gt;The Main&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5252f07"&gt;
&lt;p&gt;
This part constructs the &lt;code&gt;FirstClass&lt;/code&gt; object and calls it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;thing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FirstClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Bob"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;thing&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb17ef17" class="outline-2"&gt;
&lt;h2 id="orgb17ef17"&gt;Trying it out&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb17ef17"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  python noweb_ref.py
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Bob
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org824c9eb" class="outline-2"&gt;
&lt;h2 id="org824c9eb"&gt;Summary&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org824c9eb"&gt;
&lt;p&gt;
The point of trying this out is that I want to be able to break up and document class-methods better. Unfortunately it requires you to do a little more fiddling with the white-space yourself and makes the source org-mode file a little harder to read (I think) but I'm going to try it for a little while and see if the resulting documents are worth the extra headache. Maybe I'll just have to stick with docstrings for documenting the separate methods…
&lt;/p&gt;

&lt;p&gt;
This bit at the end makes it so the indentation is always preserved, even if the &lt;code&gt;init.el&lt;/code&gt; file isn't set up that way.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="c1"&gt;# Local Variables:&lt;/span&gt;
  &lt;span class="c1"&gt;# org-src-preserve-indentation: t&lt;/span&gt;
  &lt;span class="c1"&gt;# End:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>literate programming</category><category>org-babel</category><category>org-mode</category><guid>https://necromuralist.github.io/posts/org-babel-noweb-ref/</guid><pubDate>Sun, 19 Feb 2017 19:06:06 GMT</pubDate></item><item><title>Org-Babel PDF Export</title><link>https://necromuralist.github.io/posts/org-babel-pdf-export/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/org-babel-pdf-export/#org457f31b"&gt;First Try&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/org-babel-pdf-export/#org518c4aa"&gt;Second try&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;
These are my notes on exporting a PDF from an &lt;i&gt;org-babel&lt;/i&gt; file.
&lt;/p&gt;

&lt;div id="outline-container-org457f31b" class="outline-2"&gt;
&lt;h2 id="org457f31b"&gt;First Try&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org457f31b"&gt;
&lt;p&gt;
The key sequence to export a PDF from an &lt;i&gt;org&lt;/i&gt; file is &lt;code&gt;C-c C-e l p&lt;/code&gt; (&lt;i&gt;c&lt;/i&gt; as in… &lt;i&gt;c&lt;/i&gt;, &lt;i&gt;e&lt;/i&gt; as in &lt;i&gt;export&lt;/i&gt;, &lt;i&gt;l&lt;/i&gt; as in &lt;i&gt;LaTex&lt;/i&gt;, and &lt;i&gt;p&lt;/i&gt; as in &lt;i&gt;PDF&lt;/i&gt;). My first try produced this error:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;! LaTeX Error: File &lt;span class="sb"&gt;`&lt;/span&gt;ulem.sty&lt;span class="sb"&gt;`&lt;/span&gt; not found.
&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;
The actual output had &lt;code&gt;`ulem.sty`&lt;/code&gt; ending with an apostrophe (which I can't show here because org either renders the apostrophe as an accent or if I put it in an inline verbatim block it disables the verbatim markup - seems like a bug) but either &lt;i&gt;nikola&lt;/i&gt; or &lt;i&gt;org&lt;/i&gt; or something else marked the single apostrophe as an error with a red box around it in the output so I changed it to a backtick (&lt;code&gt;`&lt;/code&gt;) to get rid of the box.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Past experience told me that the error indicated I was likely missing a (debian) package.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-cache search ulem
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
texlive-generic-recommended - TeX Live: Generic recommended packages
libextutils-modulemaker-perl - Perl extension to build module from scratch
&lt;/pre&gt;


&lt;p&gt;
Since I'm doing something with &lt;i&gt;LaTex&lt;/i&gt;, not &lt;i&gt;perl&lt;/i&gt; I decided that installing the &lt;i&gt;texlive-generic-recommended&lt;/i&gt; package was probably what I should do.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install texlive-generic-recommended
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org518c4aa" class="outline-2"&gt;
&lt;h2 id="org518c4aa"&gt;Second try&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org518c4aa"&gt;
&lt;p&gt;
I hit &lt;code&gt;C-c C-e l p&lt;/code&gt; again and this time it did output a PDF, but there was no syntax-highlighting of the code. Followng &lt;a href="https://joat-programmer.blogspot.com/2013/07/org-mode-version-8-and-pdf-export-with.html"&gt;this blog post&lt;/a&gt; I added this to my &lt;code&gt;init.el&lt;/code&gt; file:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; export to latex/pdf&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'ox-latex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; syntax-highlighting for pdf's&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;'org-latex-packages-alist&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="s"&gt;"minted"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-latex-listings&lt;/span&gt; &lt;span class="ss"&gt;'minted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-latex-pdf-process&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Once I re-loaded the &lt;code&gt;init.el&lt;/code&gt; file, the PDF's came out with the syntax highlighting working.
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
The original post used &lt;code&gt;xelatex&lt;/code&gt; instead of &lt;code&gt;pdflatex&lt;/code&gt; but I don't use &lt;code&gt;xelatex&lt;/code&gt;. Also &lt;code&gt;minted&lt;/code&gt; can be found in the &lt;code&gt;texlive-latex-extras&lt;/code&gt; package if it isn't already installed. The post also mentions needing &lt;code&gt;pygments&lt;/code&gt; but I didn't need it, possibly because it's a dependency for other python libraries that I've already installed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>how-to</category><category>org-babel</category><guid>https://necromuralist.github.io/posts/org-babel-pdf-export/</guid><pubDate>Sat, 07 Jan 2017 20:29:47 GMT</pubDate></item></channel></rss>