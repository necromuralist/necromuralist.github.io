<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about python)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/python.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2023 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Thu, 04 May 2023 00:33:52 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Converting A Date To Day of the Year In Python</title><link>https://necromuralist.github.io/posts/converting-a-date-to-day-of-the-year-in-python/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/converting-a-date-to-day-of-the-year-in-python/#org0b5fd19"&gt;Date To Day of Year&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/converting-a-date-to-day-of-the-year-in-python/#org88f79a0"&gt;Day Of Year To Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/converting-a-date-to-day-of-the-year-in-python/#orgbd3cb30"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This is a quick note on how to take a date and convert it to the day of the year (and back again) using python.
&lt;/p&gt;

&lt;div id="outline-container-org0b5fd19" class="outline-2"&gt;
&lt;h2 id="org0b5fd19"&gt;Date To Day of Year&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0b5fd19"&gt;
&lt;p&gt;
We're going to use python's built-in &lt;a href="https://docs.python.org/3/library/datetime.html#datetime-objects"&gt;datetime&lt;/a&gt; object to create the date then convert it to a timetuple using its &lt;a href="https://docs.python.org/3/library/datetime.html#datetime-objects"&gt;timetuple&lt;/a&gt; method. The timetuple has an attribute &lt;code&gt;tm_yday&lt;/code&gt; which is the number of days in the year that the date represents.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example"&gt;
38
&lt;/pre&gt;


&lt;p&gt;
So, February 7, 2023 is the 38th day of the year.
&lt;/p&gt;
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org88f79a0" class="outline-2"&gt;
&lt;h2 id="org88f79a0"&gt;Day Of Year To Date&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org88f79a0"&gt;
&lt;p&gt;
Now to go in the other direction we start with the first day of the year (represented as a datetime object) and add the number of days into the year we want. You can't create a datetime object with day zero so we need to start it on day one and then subtract one day from the number of days that we want.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example"&gt;
2023-02-07
&lt;/pre&gt;


&lt;p&gt;
Easy-peasey.
&lt;/p&gt;
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbd3cb30" class="outline-2"&gt;
&lt;h2 id="orgbd3cb30"&gt;Source&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbd3cb30"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/623312"&gt;Answer on StackOverflow&lt;/a&gt; that shows how to get the day of the year from the date.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/13032755"&gt;Answer to the same question&lt;/a&gt; that shows how to go from the day of the year back to the date.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>calendar</category><category>python</category><guid>https://necromuralist.github.io/posts/converting-a-date-to-day-of-the-year-in-python/</guid><pubDate>Wed, 08 Feb 2023 00:56:59 GMT</pubDate></item><item><title>CodeWars: Pick Peaks</title><link>https://necromuralist.github.io/posts/code-wars-pick-peaks/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/code-wars-pick-peaks/#org7337ed9"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/code-wars-pick-peaks/#orgc68ab14"&gt;Code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/code-wars-pick-peaks/#org6595632"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/code-wars-pick-peaks/#org1e31a19"&gt;The Submission&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7337ed9" class="outline-2"&gt;
&lt;h2 id="org7337ed9"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7337ed9"&gt;
&lt;p&gt;
The problem given is to write a function that returns the location and values of local maxima within a list (array). The inputs will be (possibly empty) lists with integers. The first and last elements cannot be called peaks since we don't know what comes before the first element or after the last element.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc68ab14" class="outline-2"&gt;
&lt;h2 id="orgc68ab14"&gt;Code&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc68ab14"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6595632" class="outline-3"&gt;
&lt;h3 id="org6595632"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org6595632"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1e31a19" class="outline-3"&gt;
&lt;h3 id="org1e31a19"&gt;The Submission&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1e31a19"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>codewars</category><category>kata</category><category>python</category><guid>https://necromuralist.github.io/posts/code-wars-pick-peaks/</guid><pubDate>Sat, 19 Feb 2022 01:10:32 GMT</pubDate></item><item><title>CodeWars: Simple Pig Latin</title><link>https://necromuralist.github.io/posts/codewars-simple-pig-latin/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-simple-pig-latin/#org5351efa"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-simple-pig-latin/#orgf0019e4"&gt;Code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-simple-pig-latin/#org50c85d7"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-simple-pig-latin/#org55a64b9"&gt;Submission&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-simple-pig-latin/#org4fcc218"&gt;Sources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5351efa" class="outline-2"&gt;
&lt;h2 id="org5351efa"&gt;Description&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5351efa"&gt;
&lt;p&gt;
Move the first letter of each word to the end of it, then add "ay" to the end of the word. Leave punctuation marks untouched.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf0019e4" class="outline-2"&gt;
&lt;h2 id="orgf0019e4"&gt;Code&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf0019e4"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org50c85d7" class="outline-3"&gt;
&lt;h3 id="org50c85d7"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org50c85d7"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org55a64b9" class="outline-3"&gt;
&lt;h3 id="org55a64b9"&gt;Submission&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org55a64b9"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4fcc218" class="outline-2"&gt;
&lt;h2 id="org4fcc218"&gt;Sources&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4fcc218"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://www.codewars.com/kata/520b9d2ad5c005041100000f/train/python"&gt;CodeWars: Simple Pig Latin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>codewars</category><category>kata</category><category>python</category><guid>https://necromuralist.github.io/posts/codewars-simple-pig-latin/</guid><pubDate>Wed, 16 Feb 2022 02:12:05 GMT</pubDate></item><item><title>CodeWars: RGB To Hexadecimal</title><link>https://necromuralist.github.io/posts/codewars-rgb-to-hexadecimal/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rgb-to-hexadecimal/#org04dab41"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rgb-to-hexadecimal/#orgdee773d"&gt;The Code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rgb-to-hexadecimal/#org4c9b6d5"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rgb-to-hexadecimal/#org7f1a67f"&gt;Submission&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rgb-to-hexadecimal/#org944b730"&gt;Alternatives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org04dab41" class="outline-2"&gt;
&lt;h2 id="org04dab41"&gt;Description&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org04dab41"&gt;
&lt;p&gt;
Given three arguments &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; which are integers from 0 to 255 representing RGB values, convert them to a six digit (zero-padded) hexadecimal string. Invalid (out of range) values need to be rounded to nearest value.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgdee773d" class="outline-2"&gt;
&lt;h2 id="orgdee773d"&gt;The Code&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgdee773d"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4c9b6d5" class="outline-3"&gt;
&lt;h3 id="org4c9b6d5"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4c9b6d5"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7f1a67f" class="outline-3"&gt;
&lt;h3 id="org7f1a67f"&gt;Submission&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7f1a67f"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org944b730" class="outline-3"&gt;
&lt;h3 id="org944b730"&gt;Alternatives&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org944b730"&gt;
&lt;p&gt;
A surprising number of people used the string formatting - &lt;code&gt;{:02X}&lt;/code&gt; to convert the numbers to hexadecimal. I think that's sort of the problem with these earlier puzzles - there's a big question of how much of python's built in functionality you should use. I guess since I use string formatting a lot that might make sense as a shortcut in this case.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
Not quite so readable, but short.
&lt;/p&gt;
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>codewars</category><category>kata</category><category>python</category><guid>https://necromuralist.github.io/posts/codewars-rgb-to-hexadecimal/</guid><pubDate>Tue, 15 Feb 2022 04:07:51 GMT</pubDate></item><item><title>CodeWars: Rot13</title><link>https://necromuralist.github.io/posts/codewars-rot13/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rot13/#orgbaf3c48"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rot13/#org66434ca"&gt;The Code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rot13/#orgdd2607d"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rot13/#orgdfd76f6"&gt;The Submitted Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rot13/#org286e056"&gt;A Test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rot13/#orgb1efc2e"&gt;Alternatives&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rot13/#org873b41b"&gt;Using the Slicing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-rot13/#orgffedec0"&gt;Using translate and maketrans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbaf3c48" class="outline-2"&gt;
&lt;h2 id="orgbaf3c48"&gt;Description&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbaf3c48"&gt;
&lt;p&gt;
Given a string, replace each letter with the one that comes 13 letters after it in the alphabet. Ignore non-English aphabetical characters.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org66434ca" class="outline-2"&gt;
&lt;h2 id="org66434ca"&gt;The Code&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org66434ca"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgdd2607d" class="outline-3"&gt;
&lt;h3 id="orgdd2607d"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdd2607d"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/string.html"&gt;Python Strings&lt;/a&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/string.html#string.ascii_lowercase"&gt;ascii_lowercase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/string.html#string.ascii_lowercase"&gt;ascii_uppercase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdfd76f6" class="outline-3"&gt;
&lt;h3 id="orgdfd76f6"&gt;The Submitted Function&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdfd76f6"&gt;
&lt;p&gt;
This is the version I submitted to CodeWars. It uses the dict &lt;a href="https://docs.python.org/3/library/stdtypes.html#dict.update"&gt;update&lt;/a&gt; method to build a dict (although the solutions below seem neater) and the &lt;a href="https://docs.python.org/3/library/stdtypes.html#dict.get"&gt;get&lt;/a&gt; method to handle the cases where the letter in the message isn't in the dictionary.
&lt;/p&gt;


Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org286e056" class="outline-3"&gt;
&lt;h3 id="org286e056"&gt;A Test&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org286e056"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb1efc2e" class="outline-2"&gt;
&lt;h2 id="orgb1efc2e"&gt;Alternatives&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb1efc2e"&gt;
&lt;p&gt;
Quite a few of the other solutions (on the first page, anyway) used the built in &lt;a href="https://docs.python.org/3/library/stdtypes.html#str.maketrans"&gt;str.maketrans&lt;/a&gt; and &lt;a href="https://docs.python.org/3/library/stdtypes.html#str.translate"&gt;str.translate&lt;/a&gt; methods (they complement each other). I didn't see anything in the documentation about how defaults are handled so I'd have to look into it more. The &lt;a href="https://www.codewars.com/kata/reviews/545683f329ccbfe984000087/groups/545747a40a80d2f02800014a"&gt;top answer&lt;/a&gt; also used slicing instead of modulo (&lt;code&gt;lower[13:] + lower[:13])&lt;/code&gt; which might be better. The comments mention that the top answer actually won't work anymore since the &lt;code&gt;maketrans&lt;/code&gt; and &lt;code&gt;translate&lt;/code&gt; functions got moved out of &lt;code&gt;string&lt;/code&gt; (which is where it's importing it from).
&lt;/p&gt;

&lt;p&gt;
The top solutions seem to have a mix of current python and deprecated python (python 2?) so you'd have to be careful in using any of them.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org873b41b" class="outline-3"&gt;
&lt;h3 id="org873b41b"&gt;Using the Slicing&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org873b41b"&gt;
&lt;p&gt;
If you were use slicing instead of the modulo I think it might look like this (from here on out I'm going to declare the code-books outside the function the way I would normally do it, I kind of didn't really think about it when submitting the solution above so I'll leave it as is).
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
This is more compact, although I'm not sure that the slicing is as immediately obvious as the use of the modulo is.
&lt;/p&gt;
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgffedec0" class="outline-3"&gt;
&lt;h3 id="orgffedec0"&gt;Using translate and maketrans&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgffedec0"&gt;
&lt;p&gt;
Here's a version using the built-in &lt;code&gt;maketrans&lt;/code&gt; and &lt;code&gt;translate&lt;/code&gt; functions.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example"&gt;
V unir orra gb cnenqvfr 3 gvzrf, ohg V unir arire orra gb zr. Bu, gur uhznavgl!
I have been to paradise 3 times, but I have never been to me. Oh, the humanity!
&lt;/pre&gt;


&lt;p&gt;
It kind of seems too much to use translate for this exercise, but it does feel cleaner than the dictionary, so I'll have to keep it in mind for the future.
&lt;/p&gt;
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>codewars</category><category>kata</category><category>python</category><guid>https://necromuralist.github.io/posts/codewars-rot13/</guid><pubDate>Sat, 12 Feb 2022 21:03:26 GMT</pubDate></item><item><title>CodeWars: Calculating With Functions</title><link>https://necromuralist.github.io/posts/codewars-calculating-with-functions/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-calculating-with-functions/#org2874ff3"&gt;The Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-calculating-with-functions/#orgd615975"&gt;The Solution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-calculating-with-functions/#orgdab4862"&gt;The Tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-calculating-with-functions/#org5c55e7d"&gt;Alternatives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-calculating-with-functions/#org7cf837a"&gt;A Hybrid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org2874ff3" class="outline-2"&gt;
&lt;h2 id="org2874ff3"&gt;The Problem&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2874ff3"&gt;
&lt;p&gt;
Write functions that calculate integer arithmetic. For example.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
Should return thirty-five. Every number has a function and there are four operation-functions:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;plus&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;times&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;divided_by&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
All operations should return integers, not floats.
&lt;/p&gt;
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd615975" class="outline-2"&gt;
&lt;h2 id="orgd615975"&gt;The Solution&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd615975"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;div id="outline-container-orgdab4862" class="outline-3"&gt;
&lt;h3 id="orgdab4862"&gt;The Tests&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdab4862"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5c55e7d" class="outline-2"&gt;
&lt;h2 id="org5c55e7d"&gt;Alternatives&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5c55e7d"&gt;
&lt;p&gt;
There are several variations on the theme. One that I thought was similar in spirit to what I did but better was &lt;a href="https://www.codewars.com/kata/reviews/5b0ce29de86c548f16000e76/groups/5c92714817647a0001bac149"&gt;this one&lt;/a&gt;. Instead of separate operation and integer they use a default function that only returns what gets passed to it. So the definitions look like this.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7cf837a" class="outline-2"&gt;
&lt;h2 id="org7cf837a"&gt;A Hybrid&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7cf837a"&gt;
&lt;p&gt;
To add a little of what the other solution is doingâ¦
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;</description><category>codewars</category><category>kata</category><category>python</category><guid>https://necromuralist.github.io/posts/codewars-calculating-with-functions/</guid><pubDate>Fri, 11 Feb 2022 01:52:52 GMT</pubDate></item><item><title>CodeWars: Vowel Count</title><link>https://necromuralist.github.io/posts/codewars-vowel-count/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-vowel-count/#org8c5a8e6"&gt;The Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-vowel-count/#orgc66f785"&gt;The Solution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-vowel-count/#org8d695af"&gt;The Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-vowel-count/#org66b03be"&gt;The Function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-vowel-count/#org0c5834b"&gt;Alternatives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/codewars-vowel-count/#org0e5b1ed"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org8c5a8e6" class="outline-2"&gt;
&lt;h2 id="org8c5a8e6"&gt;The Problem&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8c5a8e6"&gt;
&lt;p&gt;
Given a string, count the number of vowels in it. The vowels are "aeiou" and the letters will be lower-cased.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc66f785" class="outline-2"&gt;
&lt;h2 id="orgc66f785"&gt;The Solution&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc66f785"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8d695af" class="outline-3"&gt;
&lt;h3 id="org8d695af"&gt;The Tests&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org8d695af"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org66b03be" class="outline-3"&gt;
&lt;h3 id="org66b03be"&gt;The Function&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org66b03be"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0c5834b" class="outline-2"&gt;
&lt;h2 id="org0c5834b"&gt;Alternatives&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0c5834b"&gt;
&lt;p&gt;
&lt;a href="https://www.codewars.com/kata/reviews/54ff37ee355cfd937000105c/groups/54ff8310c50295aa890004d3"&gt;One solution&lt;/a&gt; used regular expressions and the &lt;code&gt;findall&lt;/code&gt; method. This seems better in a generalizable sense, but I think that the &lt;code&gt;findall&lt;/code&gt; will build a list rather than a generator so might not be as efficient space-wise, and is probably slower. Others used the python string method - &lt;code&gt;count&lt;/code&gt;. I think this problem is so easy that there's really not a lot of stuff you can do that doesn't overcomplicate things.
&lt;/p&gt;

&lt;p&gt;
Anyway, day one.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0e5b1ed" class="outline-2"&gt;
&lt;h2 id="org0e5b1ed"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0e5b1ed"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://www.codewars.com/kata/54ff3102c1bad923760001f3"&gt;CodeWars Vowel Count&lt;/a&gt;: One of the beginner's kata.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>codewars</category><category>kata</category><category>python</category><guid>https://necromuralist.github.io/posts/codewars-vowel-count/</guid><pubDate>Wed, 09 Feb 2022 21:42:40 GMT</pubDate></item><item><title>PuDB Remote</title><link>https://necromuralist.github.io/posts/pudb-remote/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pudb-remote/#org02307bd"&gt;In the Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pudb-remote/#org9bb7f92"&gt;Short Version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pudb-remote/#orgfaaabf1"&gt;Okay, So Now Why Would You Do This?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pudb-remote/#org23a4757"&gt;Dead Ends&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pudb-remote/#org43111af"&gt;Another Screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pudb-remote/#orgfd32a5c"&gt;&lt;code&gt;term_size&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pudb-remote/#org9dcf1bf"&gt;Telnet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/pudb-remote/#org6241b51"&gt;But It's Not Fixed?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org02307bd" class="outline-2"&gt;
&lt;h2 id="org02307bd"&gt;In the Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org02307bd"&gt;
&lt;p&gt;
This is a post on using &lt;a href="https://documen.tician.de/pudb/index.html"&gt;PuDB&lt;/a&gt; via telnet.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9bb7f92" class="outline-2"&gt;
&lt;h2 id="org9bb7f92"&gt;Short Version&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9bb7f92"&gt;
&lt;p&gt;
In case I forgot what to do and just want to read this to remember.
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;In the screen where you are going to run telnet, run &lt;code&gt;tput cols&lt;/code&gt; and &lt;code&gt;tput lines&lt;/code&gt; to find out the number of columns and lines that the screen is using.&lt;/li&gt;
&lt;li&gt;In the code where you want the break, instead of the usual &lt;code&gt;import pudb; pudb.set_trace()&lt;/code&gt; use:&lt;/li&gt;
&lt;/ol&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
When the code hits the breakpoint it will start up a telnet service and you can log into it from the other screen:
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfaaabf1" class="outline-2"&gt;
&lt;h2 id="orgfaaabf1"&gt;Okay, So Now Why Would You Do This?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfaaabf1"&gt;
&lt;p&gt;
I was trying to build one of my sites that uses &lt;a href="https://nikola.readthedocs.io/en/latest/"&gt;nikola&lt;/a&gt; and this strange error came out saying that one of the shortcodes was getting the "site" argument multiple times. I had no idea what was going on and nikola doesn't pre-define the arguments to the shortcode-plugins (it parses the text and then passes the arguments along using the &lt;code&gt;*args&lt;/code&gt; &lt;code&gt;**kwargs&lt;/code&gt; convention) which makes it flexible, but figuring out a problem with the arguments is pretty tough, so I decided to turn to my old standby &lt;code&gt;PuDB&lt;/code&gt;, which I've been using for so many years now, and is my favorite of the python debuggers I've tried.
&lt;/p&gt;

&lt;p&gt;
I did my usual thing and found the line in the &lt;code&gt;nikola&lt;/code&gt; code that was raising the error and inserted a breakpoint further up in the code.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
I figured the problem was with my shortcode, named &lt;code&gt;lancelot&lt;/code&gt;, and the conditional allowed me to skip all the other shortcodes being used. But then, when I ran the build (&lt;code&gt;nikola build -v2&lt;/code&gt;)â¦ disaster.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://necromuralist.github.io/posts/pudb-remote/pudb-broken.png" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
For some reason it wouldn't use the entire screen, making it impossible (or at least really hard) to read some of the variables that I wanted to check - and even worse, when I tried to open up the ipython terminal in it I got an error message.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://necromuralist.github.io/posts/pudb-remote/pudb-ui-exception.png" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
The error-message is one of those error-after-the-error messages that you sometimes run into. It was trying to notify me of an error by popping up some kind of dialog but then the dialog wouldn't open so it told me about the dialog error and didn't get around to telling me what the original error was. In any case, something was broken, so I had to resort to desperate measures - I went to read the documentation.
&lt;/p&gt;

&lt;p&gt;
Surprisingly, &lt;a href="https://documen.tician.de/pudb/index.html"&gt;there actually is some&lt;/a&gt; (there wasn't really much when I first started using it).
&lt;/p&gt;
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org23a4757" class="outline-2"&gt;
&lt;h2 id="org23a4757"&gt;Dead Ends&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org23a4757"&gt;
&lt;p&gt;
The first couple of things I tried seemed promising, but they didn't work.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org43111af" class="outline-3"&gt;
&lt;h3 id="org43111af"&gt;Another Screen&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org43111af"&gt;
&lt;p&gt;
There wasn't anything about re-sizing the window, but it did mention that you can have the output come out in a different terminal from the one where you run the code, so I gave it a go. I made a different screen and got its file-path using the &lt;code&gt;tty&lt;/code&gt; command (&lt;code&gt;/dev/pts/6&lt;/code&gt; in this case). Then I set an environment variable to hold the file-path in the screen where I was running the code (&lt;code&gt;set -x PUDB_TTY /dev/pts/6&lt;/code&gt;). This caused &lt;code&gt;PuDB&lt;/code&gt; to pipe the output to the next screen - and it &lt;i&gt;did&lt;/i&gt; work to send the first PuDB output to the other screen, and it &lt;i&gt;did&lt;/i&gt; use the whole window, but then it quit instead of letting me use the debugger. Not &lt;i&gt;quite&lt;/i&gt; what I wanted, so I unset the environment variable and moved on.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfd32a5c" class="outline-3"&gt;
&lt;h3 id="orgfd32a5c"&gt;&lt;code&gt;term_size&lt;/code&gt;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfd32a5c"&gt;
&lt;p&gt;
The documentation also showed how to use &lt;code&gt;PuDB&lt;/code&gt; as a remote debugger, and in the example they passed in the argument &lt;code&gt;term_size&lt;/code&gt; to &lt;code&gt;set_trace&lt;/code&gt; so I thought, since the functions have the same name, that the &lt;code&gt;set_trace&lt;/code&gt; I was using would take the same arguments. So I tried it.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
Using the values that I had gotten from &lt;a href="https://linux.die.net/man/1/tput"&gt;tput&lt;/a&gt;  using &lt;code&gt;tput cols&lt;/code&gt; and &lt;code&gt;tput lines&lt;/code&gt;. But that just raised an &lt;code&gt;ArgumentError&lt;/code&gt;. The functions have the same name, but not the same arguments.
&lt;/p&gt;
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9dcf1bf" class="outline-2"&gt;
&lt;h2 id="org9dcf1bf"&gt;Telnet&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9dcf1bf"&gt;
&lt;p&gt;
So then I decided to try their remote version. It doesn't really make sense to me that it would work better than the regular version, but I didn't see any other choice. So instead of the usual code to insert a breakpoint I used:
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
When I ran the build it stopped and told me to telnet into the localhost address at port 6899.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://necromuralist.github.io/posts/pudb-remote/please-telnet.png" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
So I changed into the other screen and ran telnet.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
And what do you know.
&lt;/p&gt;

&lt;p&gt;
&lt;img src="https://necromuralist.github.io/posts/pudb-remote/pudb-fixed.png" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
This turns out to not be a complete fix. Hitting &lt;code&gt;!&lt;/code&gt; to get to the &lt;code&gt;ipython&lt;/code&gt; terminal froze &lt;code&gt;PuDB&lt;/code&gt;, but this was enough for me to inspect the variables and realize that I just needed to move one of the parameters in the definition of my shortcode method and it worked.
&lt;/p&gt;
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6241b51" class="outline-2"&gt;
&lt;h2 id="org6241b51"&gt;But It's Not Fixed?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6241b51"&gt;
&lt;p&gt;
Well, if this were a more intense debug I really would want the &lt;code&gt;ipython~/~ptipython&lt;/code&gt; terminal, but since this is the first time I've tried to run &lt;code&gt;PuDB&lt;/code&gt; under &lt;code&gt;KUbuntu's&lt;/code&gt; &lt;code&gt;Konsole&lt;/code&gt; instead of the &lt;code&gt;GNOME&lt;/code&gt; terminal I'm hoping that just switching back to the other terminal will be enough - I'll have to test that once I'm more motivated.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>debugging</category><category>pudb</category><category>python</category><guid>https://necromuralist.github.io/posts/pudb-remote/</guid><pubDate>Thu, 18 Nov 2021 02:29:13 GMT</pubDate></item><item><title>Brute Force Longest Non-Decreasing Sub-Sequence</title><link>https://necromuralist.github.io/posts/brute-force-longest-non-decreasing-sub-sequence/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/brute-force-longest-non-decreasing-sub-sequence/#org6c65160"&gt;The Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/brute-force-longest-non-decreasing-sub-sequence/#org415c72e"&gt;Brute Force&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/brute-force-longest-non-decreasing-sub-sequence/#org54dd81d"&gt;Example One&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/brute-force-longest-non-decreasing-sub-sequence/#org34e8bc3"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6c65160" class="outline-2"&gt;
&lt;h2 id="org6c65160"&gt;The Problem&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6c65160"&gt;
&lt;p&gt;
The problem at hand is that we're given a sequence and we want to find the longest combination we can find in it that is non-decreasing (each element after the first is greater than or equal to the previous element).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org415c72e" class="outline-2"&gt;
&lt;h2 id="org415c72e"&gt;Brute Force&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org415c72e"&gt;
&lt;p&gt;
This will be a brute-force solution using nested for-loops. This will use the &lt;a href="https://necromuralist.github.io/posts/python-itertools-combinations/"&gt;itertools.combinations&lt;/a&gt; function to generate the candidate solutions.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
Here's what it's doing.
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;The outer loop counts down from the length of the sequence to zero.&lt;/li&gt;
&lt;li&gt;The inner loop generates combinations of the current length in the outer loop&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;sub_sequence&lt;/code&gt; is in sorted (non-decreasing) order then it is as long or longer than any other non-decreasing sub-sequence so choose it as the longest sub-sequence.&lt;/li&gt;
&lt;/ol&gt;
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;

&lt;div id="outline-container-org54dd81d" class="outline-3"&gt;
&lt;h3 id="org54dd81d"&gt;Example One&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org54dd81d"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example"&gt;
(1, 2, 4)
18
&lt;/pre&gt;
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org34e8bc3" class="outline-2"&gt;
&lt;h2 id="org34e8bc3"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org34e8bc3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;From &lt;a href="https://necromuralist.github.io/posts/python-algorithms/"&gt;Python Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>python</category><guid>https://necromuralist.github.io/posts/brute-force-longest-non-decreasing-sub-sequence/</guid><pubDate>Tue, 10 Nov 2020 01:32:26 GMT</pubDate></item><item><title>Python Itertools Combinations</title><link>https://necromuralist.github.io/posts/python-itertools-combinations/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/python-itertools-combinations/#orgf97b30a"&gt;What?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/python-itertools-combinations/#org6bc4095"&gt;Okay, but what?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/python-itertools-combinations/#org3b53caa"&gt;A Count Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/python-itertools-combinations/#org1b35bd3"&gt;Example One&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/python-itertools-combinations/#orgdb2dc6b"&gt;Example Two&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf97b30a" class="outline-2"&gt;
&lt;h2 id="orgf97b30a"&gt;What?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf97b30a"&gt;
&lt;p&gt;
This is a brief note on the  python &lt;a href="https://docs.python.org/3/library/itertools.html#itertools.combinations"&gt;itertools.combinations&lt;/a&gt; function.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;p&gt;
To make sure it's behaving the way I think it will I'll also use some other built-ins.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6bc4095" class="outline-2"&gt;
&lt;h2 id="org6bc4095"&gt;Okay, but what?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6bc4095"&gt;
&lt;p&gt;
The &lt;code&gt;combinations&lt;/code&gt; function takes two arguments:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;iterable: the source that you want to make combinations from&lt;/li&gt;
&lt;li&gt;r: the length of the sequences you want to make&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
It returns all the r-length subsequences in the iterable (&lt;a href="https://www.wikiwand.com/en/Combination"&gt;combinations&lt;/a&gt;).
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3b53caa" class="outline-3"&gt;
&lt;h3 id="org3b53caa"&gt;A Count Function&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org3b53caa"&gt;
&lt;p&gt;
The number of combinations of length &lt;i&gt;k&lt;/i&gt; for a sequence of length &lt;i&gt;n&lt;/i&gt; is the &lt;a href="https://www.wikiwand.com/en/Binomial_coefficient"&gt;Binomial Coefficient&lt;/a&gt;.
&lt;/p&gt;

\begin{align}
\binom{n}{k} &amp;amp;= \frac{n(n-1) \cdots (n - k + 1)}{k(k-1) \cdots 1}\\
&amp;amp;= \frac{n!}{k!(n-k)!}
\end{align}

&lt;p&gt;
I originally implemented a function for this but it turns out it got added to python as of 3.8 (&lt;a href="https://docs.python.org/3/library/math.html#number-theoretic-and-representation-functions"&gt;number-theoretic functions&lt;/a&gt;). Here's my translation for reference. The calculation is actually really fast so you don't gain a lot from these toy problems using the standard library, but since it's there, why not?
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1b35bd3" class="outline-3"&gt;
&lt;h3 id="org1b35bd3"&gt;Example One&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1b35bd3"&gt;
&lt;p&gt;
This is given as an example in the documentation.
&lt;/p&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example"&gt;
- ('A', 'B')
- ('A', 'C')
- ('A', 'D')
- ('B', 'C')
- ('B', 'D')
- ('C', 'D')
&lt;/pre&gt;


&lt;p&gt;
Note that it treated the string as a sequence and returns a tuple, not a sub-string. Also note that it doesn't swap orders, so "D" is never a first entry, for instance.
&lt;/p&gt;
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdb2dc6b" class="outline-3"&gt;
&lt;h3 id="orgdb2dc6b"&gt;Example Two&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdb2dc6b"&gt;
&lt;p&gt;
This one is also from the documentation.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example"&gt;
(0, 1, 2)
(0, 1, 3)
(0, 2, 3)
(1, 2, 3)
&lt;/pre&gt;
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>python</category><category>slipnote</category><category>standard library</category><guid>https://necromuralist.github.io/posts/python-itertools-combinations/</guid><pubDate>Tue, 10 Nov 2020 00:11:26 GMT</pubDate></item></channel></rss>