<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about HowTo)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/cat_howto.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Mon, 04 Jun 2018 23:08:54 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Setting Up the RTL 8812AU Realtek USB Adapter on a Raspberry Pi 3</title><link>https://necromuralist.github.io/posts/setting-up-the-rtl-8812au-realtek-usb-adapter-on-a-raspberry-pi-3/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org38f9830" class="outline-2"&gt;
&lt;h2 id="org38f9830"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org38f9830"&gt;
&lt;p&gt;
I'm trying to set-up a wireless packet monitor (it's something I've long thought might be an interesting source of data, and now I need it for work too). My thought was that I'd set up a raspberry pi to experiment with - I don't think it is powerful enough to work, but it should work just to mess with code, and a distributed system might get some interesting results, but anyway - but when I tried to put my raspberry pi's wireless interface into monitor mode I got an error.
&lt;/p&gt;

&lt;pre class="example"&gt;
iwconfig wlan0 mode monitor
Error for wireless request "Set Mode" (8B06) :
    SET failed on device wlan0 ; Operation not supported.
&lt;/pre&gt;

&lt;p&gt;
Looking around on the web I found &lt;a href="https://www.reddit.com/r/raspberry_pi/comments/4ah4oi/psa_the_raspberry_pi_3s_embedded_wifi_card_does/"&gt;this reddit post&lt;/a&gt; as well as some Stack Overflow posts that said that monitor mode isn't supported on the Raspberry Pi. There is a project called &lt;a href="https://github.com/seemoo-lab/nexmon"&gt;nexmon&lt;/a&gt; that apparently lets up add a firmware patch to enable it, which I'll probably try later, but before I tried that I remembered that I have a Realtek 8812AU USB WiFi adapter that I bought a while ago for an old desktop I had that I wasn't using so I decided to try it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org159173e" class="outline-2"&gt;
&lt;h2 id="org159173e"&gt;What I tried&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org159173e"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0cb36dc" class="outline-3"&gt;
&lt;h3 id="org0cb36dc"&gt;Plug-and-Pray&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0cb36dc"&gt;
&lt;p&gt;
The first thing I did was to see if it would just work. I plugged the Realtek into the USB port and although &lt;code&gt;lsusb&lt;/code&gt; showed it, &lt;code&gt;iwconfig&lt;/code&gt; didn't show it as an interface. Back to the internet. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2d20924" class="outline-3"&gt;
&lt;h3 id="org2d20924"&gt;Github&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org2d20924"&gt;
&lt;p&gt;
Next I found &lt;a href="https://github.com/diederikdehaas/rtl8812AU"&gt;a repository on github&lt;/a&gt; that has the driver for the Realtek set up for linux machines. I downloaded it and followed the instructions to build it - the main thing is to set:
&lt;/p&gt;

&lt;pre class="example"&gt;
CONFIG_PLATFORM_I386_PC = n
CONFIG_PLATFORM_ARM_RPI = y
&lt;/pre&gt;

&lt;p&gt;
in the &lt;code&gt;Makefile&lt;/code&gt; - but when I tried to build it I got this error.
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo dkms install -m $DRV_NAME -v $DRV_VERSION

'make' KVER=4.4.38-v7+....(bad exit status: 2)
ERROR (dkms apport): binary package for rtl8812AU: 4.3.20 not found
Error! Bad return status for module build on kernel: 4.4.38-v7+ (armv7l)
Consult /var/lib/dkms/rtl8812AU/4.3.20/build/make.log for more information.
&lt;/pre&gt;

&lt;p&gt;
There was also a message in the &lt;code&gt;make.log&lt;/code&gt; file but I didn't remember to copy it. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4805b39" class="outline-2"&gt;
&lt;h2 id="org4805b39"&gt;What fixed it&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4805b39"&gt;
&lt;p&gt;
The solution was in &lt;a href="https://stackoverflow.com/questions/39775844/how-to-make-dkms-pass-the-right-arch-to-make"&gt;this StackOverflow post&lt;/a&gt; - the &lt;code&gt;make&lt;/code&gt; program is being pointed to a folder named &lt;code&gt;arm7l&lt;/code&gt; (thats 'arm seven ell') but it should actually be pointed to one named &lt;code&gt;arm&lt;/code&gt;. The simple solution is to create an alias with the correct name.
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo ln -s /usr/src/linux-headers-4.4.38-v7+/arch/arm/ /usr/src/linux-headers-4.4.38-v7+/arch/armv7l
&lt;/pre&gt;

&lt;p&gt;
This turns out to fix the build problem and after a reboot the network interface showed up.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb3a2275" class="outline-2"&gt;
&lt;h2 id="orgb3a2275"&gt;Conclusion&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb3a2275"&gt;
&lt;p&gt;
The Raspberry Pi 3 doesn't support monitor mode for its wireless interface out of the box, and while there is a firmware patch to enable it, I chose to use a Realtek RTL 8812AU USB WiFi adapter instead. You need a little bit of extra work to get it going, but it does seem to work. One thing I noticed is that &lt;code&gt;iwconfig&lt;/code&gt; will put it in monitor mode but &lt;code&gt;airmon-ng&lt;/code&gt; doesn't (I haven't figured out why yet). It doesn't report an error, it just doesn't seem to work. Also, &lt;code&gt;iw&lt;/code&gt; always reports the interface as managed, even when it isn'tâ€¦ maybe I'll try the firmware patch after all.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>rapsberrypi wireless howto</category><guid>https://necromuralist.github.io/posts/setting-up-the-rtl-8812au-realtek-usb-adapter-on-a-raspberry-pi-3/</guid><pubDate>Sun, 03 Jun 2018 22:57:12 GMT</pubDate></item><item><title>Monitor Mode With airmon-ng</title><link>https://necromuralist.github.io/posts/monitor-mode-with-airmon-ng/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org1625d92" class="outline-2"&gt;
&lt;h2 id="org1625d92"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1625d92"&gt;
&lt;p&gt;
I'm looking into setting up a wireless (WiFi and bluetooth) monitoring station to collect data that correlates with how my network is performing and what the state of the network is and I thought that, as a first step, I'd get some &lt;a href="https://en.wikipedia.org/wiki/Packet_analyzer"&gt;packet capturing&lt;/a&gt; logs going. I'm primarily a python programmer who's kept my toe in the Linux command-line world but it's been a little while since I really dove into the wireless networking world. I had some vague notion about doing it with &lt;a href="https://en.wikipedia.org/wiki/Wireless_tools_for_Linux"&gt;iwconfig&lt;/a&gt; or &lt;a href="https://wireless.wiki.kernel.org/en/users/documentation/iw"&gt;iw&lt;/a&gt;, but then I found &lt;a href="https://www.aircrack-ng.org/doku.php?id=airmon-ng"&gt;airmon-ng&lt;/a&gt; and realized that it was what I was really looking for.
Why is it better? Well, to be honest, I'm not informed enough to say that it's better, but when I tried to use &lt;code&gt;iw&lt;/code&gt; it failed without really telling me why, while &lt;code&gt;airmon-ng&lt;/code&gt; not only didn't fail, but it told me that there were other processes already using my wireless interface which is likely why &lt;code&gt;iw&lt;/code&gt; failed and it told me how to fix it. On the one hand, since it's hiding so much from you &lt;code&gt;airmon-ng&lt;/code&gt; lets you be a little ignorant and still do stuff, on the other - &lt;b&gt;what's wrong with that?&lt;/b&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8c1d2dd" class="outline-2"&gt;
&lt;h2 id="org8c1d2dd"&gt;Setting Up&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8c1d2dd"&gt;
&lt;p&gt;
I'm using Ubuntu &lt;a href="http://releases.ubuntu.com/18.04/"&gt;18.04 (Bionic Beaver)&lt;/a&gt; - which seems to have both fixed and broken a surprising amount of stuff (nice that you let me log in with Dvorak now, but maybe you should let me know the keyboard layout has changed ahead of time) - so these instructions are based on that. First, &lt;code&gt;airmon-ng&lt;/code&gt; is part of the &lt;code&gt;aircrack-ng&lt;/code&gt; package so you need to install it to get what we want.
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo apt install aircrack-ng
&lt;/pre&gt;

&lt;p&gt;
Once you do this you'll see that &lt;code&gt;airmon-ng&lt;/code&gt; is installed.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;which airmon-ng
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Interestingly, if you check it out, you'll see that all it is is a bash script.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;file `which airmon-ng`
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The file is kind of long.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wc -l `which airmon-ng`
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So I won't list it here - you can check it out if you're interested. It's actually very informative if you want to learn how to do this kind of stuff, but for this case, we just need to know it works.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6f7847a" class="outline-2"&gt;
&lt;h2 id="org6f7847a"&gt;Monitor Mode&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6f7847a"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgcfb42aa" class="outline-3"&gt;
&lt;h3 id="orgcfb42aa"&gt;Starting Up Monitor Mode&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgcfb42aa"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org53aa45f" class="outline-4"&gt;
&lt;h4 id="org53aa45f"&gt;Finding your interface&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org53aa45f"&gt;
&lt;p&gt;
In the good old days you could be pretty sure that your wireless interface was &lt;code&gt;wlan0&lt;/code&gt; (assuming you only had one) but then ubuntu/freedesktop went and &lt;a href="https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/"&gt;changed things&lt;/a&gt; so now you should probably check what your interface name is using &lt;code&gt;iw&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iw dev
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
So it looks like we have a wireless interface named &lt;code&gt;wlp2s0&lt;/code&gt; that we want to change from &lt;b&gt;managed&lt;/b&gt; to &lt;b&gt;monitor&lt;/b&gt; mode.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org13edef4" class="outline-3"&gt;
&lt;h3 id="org13edef4"&gt;Okay, now monitor it&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org13edef4"&gt;
&lt;p&gt;
The syntax to start monitor mode is &lt;code&gt;airmon-ng start &amp;lt;interface&amp;gt;&lt;/code&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo airmon-ng start wlp2s0
&lt;/pre&gt;

&lt;pre class="example"&gt;
Found 5 processes that could cause trouble.
If airodump-ng, aireplay-ng or airtun-ng stops working after
a short period of time, you may want to run 'airmon-ng check kill'

  PID Name
 1505 wpa_supplicant
 1524 NetworkManager
 1541 avahi-daemon
 1748 avahi-daemon
 2298 dhclient

PHY     Interface       Driver          Chipset

phy0    wlp2s0          iwlwifi         Intel Corporation Wireless 7260 (rev 73)

                (mac80211 monitor mode vif enabled for [phy0]wlp2s0 on [phy0]wlp2s0mon)
                (mac80211 station mode vif disabled for [phy0]wlp2s0)
#+END_SRC

The first thing you should notice is that there are five potentially interfering processes. This is probably what interferes with the =iw= method, but we'll leave it alone and see if it works. Why don't we check on the interface.

#+BEGIN_SRC bash :results raw
iw dev
#+END_SRC

#+RESULTS:
phy#0
	Interface wlp2s0mon
		ifindex 5
		wdev 0x3
		addr 7c:5c:f8:f7:f5:c6
		type monitor
		channel 10 (2457 MHz), width: 20 MHz (no HT), center1: 2457 MHz
		txpower 0.00 dBm

So you can see that running =airmon-ng start= killed our original =wlp2s0= interface and replaced it with =wlp2s0mo= which is in monitor mode on channel 10. Unforturnately I wanted channel 6 but forgot to specify it. Let's try that again.

The first thing we have to do is to turn off monitor mode.

#+BEGIN_EXAMPLE
sudo airmon-ng stop wlp2s0mon
&lt;/pre&gt;

&lt;p&gt;
Note that we are stopping the new monitor-mode interface, not our original wireless interface. Now we can start the monitor-mode interface set to channel 6. The syntax is &lt;code&gt;airmon-ng start &amp;lt;interface&amp;gt; &amp;lt;channel&amp;gt;&lt;/code&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo airmon-ng start wlp2s0 6
#+END_SRC

There's some output from the command, but we want to know what =iw= thinks is going on.

#+BEGIN_SRC bash :results raw
iw dev
#+END_SRC

#+RESULTS:
phy#0
	Interface wlp2s0mon
		ifindex 7
		wdev 0x6
		addr 7c:5c:f8:f7:f5:c6
		type monitor
		channel 6 (2437 MHz), width: 20 MHz (no HT), center1: 2437 MHz
		txpower 0.00 dBm

So now we have an interface (=wlp2s0mon=) on channel 6 in monitor mode. We can make sure that it's working using [[https://tcpdump.org][tcpdump]].

#+BEGIN_EXAMPLE
sudo tcpdump -i wlp2s0mon -n
&lt;/pre&gt;

&lt;p&gt;
Note that we need to use the new interface name. Also, if it wasn't obvious up to now, putting the interface into monitor mode will break any networking capabilities for that interface on your computer (so if it was your internet connection, don't expect to access the web when it's in monitor mode).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge55fc92" class="outline-2"&gt;
&lt;h2 id="orge55fc92"&gt;Cleaning Up&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge55fc92"&gt;
&lt;p&gt;
We already got a preview of turning off monitor mode earlier. The syntax is &lt;code&gt;airmon-ng stop &amp;lt;interface&amp;gt;&lt;/code&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo airmon-ng stop wlp2s0mon
&lt;/pre&gt;

&lt;p&gt;
This will bring back the original wireless interface, but it won't (likely) re-establish your connection to your wireless access point. To get back onto the network you will probably need to open network manager and go through the setup process again.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb9b2680" class="outline-2"&gt;
&lt;h2 id="orgb9b2680"&gt;Summary&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb9b2680"&gt;
&lt;p&gt;
These were my notes on setting up monitor mode using &lt;code&gt;airmon-ng&lt;/code&gt;. The main point I wanted to get across is how easy it is to do using &lt;code&gt;airmon-ng&lt;/code&gt; as opposed to the other methods. I didn't actually show how much harder it is to use iwconfig, but if you have tried you might know what it entails. In any case, hopefully these notes will help me in the future as I keep watching the packets.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>wireless packets</category><guid>https://necromuralist.github.io/posts/monitor-mode-with-airmon-ng/</guid><pubDate>Sun, 13 May 2018 01:00:48 GMT</pubDate></item><item><title>Pruning Large Files From Git with BFG</title><link>https://necromuralist.github.io/posts/pruning-large-files-from-git-with-bfg/</link><dc:creator>hades</dc:creator><description>&lt;div&gt;&lt;p&gt;These are my notes on removing large files from a git repository with the &lt;a class="reference external" href="https://rtyley.github.io/bfg-repo-cleaner/"&gt;BFG Repo-Cleaner&lt;/a&gt;. It assumes that you have already pushed it to a remote repository. If you've committed the changes but haven't pushed them, see &lt;a class="reference external" href="https://necromuralist.github.io/posts/removing-large-files-from-git-using-bfg-and-a-local-repository/"&gt;this post&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="background"&gt;
&lt;h2&gt;1 Background&lt;/h2&gt;
&lt;p&gt;I accidentally committed an 89 MB file to git and pushed it upstream to github. This is within the allowed file-size limit, but when I looked in the file it was filled with the same error message over and over again, so it wasn't useful to keep, anyway. I was just working with small log-files, so any large files indicated an error, anyway, so I decided to clean anything over 50 MB from the repository using &lt;em&gt;BFG&lt;/em&gt;. The instructions on the home page mostly work, but didn't exactly work so I'm making some notes here for the next time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-process"&gt;
&lt;h2&gt;2 The Process&lt;/h2&gt;
&lt;p&gt;Assuming you've downloaded the BFG jar file, this is what you need to do.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a name="rest_code_b76c9dbc8d0443f2b530a7b2a981981f-1"&gt;&lt;/a&gt;git clone --mirror &amp;lt;remote git address&amp;gt;
&lt;/pre&gt;&lt;p&gt;The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--mirror&lt;/span&gt;&lt;/tt&gt; flag creates a bare repository so it will look a little odd (the top level has the contents of what are normally in the &lt;tt class="docutils literal"&gt;.git&lt;/tt&gt; folder). When I first tried this I thought I could clone my local copy but when I ran BFG on the clone it said that it couldn't find any large files. As noted in &lt;a class="reference external" href="https://github.com/rtyley/bfg-repo-cleaner/issues/65"&gt;this bug-report&lt;/a&gt; the large files would be in the packfile if you clone it from a remote repository, but not necessarily in the local repository, so I had to clone it from github.&lt;/p&gt;
&lt;p&gt;Next run the BFG.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a name="rest_code_3aa04387a9254cf4af94533324d112cc-1"&gt;&lt;/a&gt;java -jar BFG-1.12.15.jar --strip-blobs-bigger-than 50M &amp;lt;path to cloned mirror&amp;gt;
&lt;/pre&gt;&lt;p&gt;Now you have to change into the cloned repository and execute some commands to update it.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a name="rest_code_47621834c4984ef8a15feb6231c65150-1"&gt;&lt;/a&gt;git reflog expire --expire-now --all
&lt;a name="rest_code_47621834c4984ef8a15feb6231c65150-2"&gt;&lt;/a&gt;git gc --prune&lt;span class="o"&gt;=&lt;/span&gt;now --aggressive
&lt;/pre&gt;&lt;p&gt;Now push it back to github.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a name="rest_code_6418c2f997b2461d84d109bea6e07af6-1"&gt;&lt;/a&gt;git push
&lt;/pre&gt;&lt;p&gt;At this point the original local copy of the repository will still have the large file(s) in the history so if you just do a git pull it will think you are ahead of the remote, so you have to remove your original local repository and re-clone the remote.&lt;/p&gt;
&lt;pre class="code sh"&gt;&lt;a name="rest_code_cb6cb3fd0837422ab1c02a4a69914684-1"&gt;&lt;/a&gt;rm -r &amp;lt;original &lt;span class="nb"&gt;local&lt;/span&gt; repository&amp;gt;
&lt;a name="rest_code_cb6cb3fd0837422ab1c02a4a69914684-2"&gt;&lt;/a&gt;git clone &amp;lt;remote repository&amp;gt;
&lt;/pre&gt;&lt;p&gt;One thing that tripped me up a little was that I had removed the &lt;em&gt;master&lt;/em&gt; branch but the &lt;em&gt;BFG&lt;/em&gt; re-added it, so it originally looked like I had lost some changes. Once I changed back into my working branch everything was as I had expected.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>git bfg howto</category><guid>https://necromuralist.github.io/posts/pruning-large-files-from-git-with-bfg/</guid><pubDate>Sun, 14 Jan 2018 20:57:59 GMT</pubDate></item><item><title>Restructured Text Anonymous Links</title><link>https://necromuralist.github.io/posts/restructured-text-anonymous-links/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div&gt;&lt;div class="section" id="background"&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;I'm creating an &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Annotated_bibliography"&gt;annotated bibliography&lt;/a&gt; using nikola, and added links to the PDFs online so I could download them again if needed. I called them all &lt;cite&gt;PDF Link&lt;/cite&gt; but when I built the web-page I found that there were some restructured text errors in it that looked like this.&lt;/p&gt;
&lt;img alt="backlink_rst_error.png" src="https://necromuralist.github.io/posts/restructured-text-anonymous-links/backlink_rst_error.png"&gt;
&lt;p&gt;This &lt;a class="reference external" href="https://stackoverflow.com/questions/5464627/how-to-have-same-text-in-two-links-with-restructured-text"&gt;stack overflow answer&lt;/a&gt; pointed me to anonymous links (which I had never heard of) to fix the problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="named-and-anonymous-links"&gt;
&lt;h2&gt;Named and Anonymous Links&lt;/h2&gt;
&lt;p&gt;The form for hyperlinks that I learned used one underscore:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
`some link&amp;lt;http://some-target.com&amp;gt;`_
&lt;/pre&gt;
&lt;p&gt;This creates both a hyperlink in the document and a target that other hyperlinks can use. In this case, you can create a link back to this hyperlink somewhere else in the document using this syntax:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
`some link`_
&lt;/pre&gt;
&lt;p&gt;Unfortunately this means that the text used for the link has to be unique. In order to make multiple hyperlinks with the same text in them, use two underscores:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
`some link &amp;lt;http://some-target.com&amp;gt;`__
&lt;/pre&gt;
&lt;p&gt;This fixed it for me. Of course now the internal targets are gone as well, but they wouldn't have worked anyway.&lt;/p&gt;
&lt;p&gt;See the &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#hyperlink-references"&gt;Restructured Text Hyperlink Documentatation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>restructuredtext</category><guid>https://necromuralist.github.io/posts/restructured-text-anonymous-links/</guid><pubDate>Tue, 09 Jan 2018 02:06:52 GMT</pubDate></item><item><title>Shell Output With Org-Babel Ipython</title><link>https://necromuralist.github.io/posts/shell-output-with-org-babel-ipython/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div&gt;&lt;p&gt;One of the nice things about ipython is the ability to run shell commands with &lt;tt class="docutils literal"&gt;!&lt;/tt&gt;. When you use it in an &lt;a class="reference external" href="https://github.com/gregsexton/ob-ipython"&gt;ob-ipython&lt;/a&gt; block, though, it will dump the output into a popup rather than in the same emacs org-file. One alternative is to use a shell block instead. I wrote earlier that this requires you to put an echo command in the block to prevent the text going to a pop-up.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#+BEGIN_SRC sh&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-2"&gt;&lt;/a&gt;head Future_Connections.csv
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#+END_SRC&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#+RESULTS:&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt;            &lt;span class="p"&gt;|&lt;/span&gt; Future Connection &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;, &lt;span class="m"&gt;840&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;               &lt;span class="m"&gt;0&lt;/span&gt;.0 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;, &lt;span class="m"&gt;197&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;               &lt;span class="m"&gt;0&lt;/span&gt;.0 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;620&lt;/span&gt;, &lt;span class="m"&gt;979&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;               &lt;span class="m"&gt;0&lt;/span&gt;.0 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;519&lt;/span&gt;, &lt;span class="m"&gt;872&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;               &lt;span class="m"&gt;0&lt;/span&gt;.0 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;382&lt;/span&gt;, &lt;span class="m"&gt;423&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;               &lt;span class="m"&gt;0&lt;/span&gt;.0 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;97&lt;/span&gt;, &lt;span class="m"&gt;226&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;               &lt;span class="m"&gt;1&lt;/span&gt;.0 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;349&lt;/span&gt;, &lt;span class="m"&gt;905&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;               &lt;span class="m"&gt;0&lt;/span&gt;.0 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;429&lt;/span&gt;, &lt;span class="m"&gt;860&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;               &lt;span class="m"&gt;0&lt;/span&gt;.0 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;a name="rest_code_7ffe129c1c074da68a183e15ea04d8ce-16"&gt;&lt;/a&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;309&lt;/span&gt;, &lt;span class="m"&gt;989&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;               &lt;span class="m"&gt;0&lt;/span&gt;.0 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;It turns out that there's a similar solution to the ob-ipython popup, only since it's in python you have to use a print this time.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#+BEGIN_SRC ipython :session futures :results output&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-2"&gt;&lt;/a&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="n"&gt;Future_Connections&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#+END_SRC&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#+RESULTS:&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#+begin_example&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Future&lt;/span&gt; &lt;span class="n"&gt;Connection&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-9"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"(6, 840)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-10"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"(4, 197)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-11"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"(620, 979)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-12"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"(519, 872)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-13"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"(382, 423)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-14"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"(97, 226)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-15"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"(349, 905)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-16"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"(429, 860)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-17"&gt;&lt;/a&gt;&lt;span class="s2"&gt;"(309, 989)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_911d347c64554541b3f3e4aeb4d05eb6-19"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#+end_example&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;I actually prefer the shell version, and since this is org-babel it makes more sense to use it, but I forgot about it just now and it took me a little while to figure out how to get the ob-ipython block to work so &lt;strong&gt;*note to future self:&lt;/strong&gt; &lt;em&gt;This is how to make it work, but use a shell block instead.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</description><category>emacs</category><category>orgmode</category><category>Python</category><guid>https://necromuralist.github.io/posts/shell-output-with-org-babel-ipython/</guid><pubDate>Wed, 11 Oct 2017 19:49:19 GMT</pubDate></item><item><title>Org To Jupyter Notebook</title><link>https://necromuralist.github.io/posts/org-to-jupyter-notebook/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
I've grown to really like &lt;a href="http://orgmode.org"&gt;org-mode&lt;/a&gt;, particularly with &lt;a href="https://github.com/gregsexton/ob-ipython"&gt;ob-ipython&lt;/a&gt;, but there are times when a real Jupyter notebook is better - if you want to render it on github or use the &lt;code&gt;%matplotlib notebook&lt;/code&gt; feature, for instance. I found a blog post the &lt;a href="http://kitchingroup.cheme.cmu.edu/blog/2017/01/21/Exporting-org-mode-to-Jupyter-notebooks/"&gt;Kitchin Research Group site&lt;/a&gt; announcing the creation of an exporter and this is some documentation about how to set it up.
&lt;/p&gt;

&lt;div id="outline-container-org6e72114" class="outline-2"&gt;
&lt;h2 id="org6e72114"&gt;Download&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6e72114"&gt;
&lt;p&gt;
When I originally set this up it was only available from a link on the blog-post, but it has since been added to a much larger github repository called &lt;a href="https://github.com/jkitchin/scimax"&gt;scimax&lt;/a&gt;. I'm assuming this is where the latest version will be kept. Unfortunately there's no license so I don't think you can fork the repository, even more importantly, I can't get it to work, so skip it for now and grab the old one.
&lt;/p&gt;

&lt;pre class="example"&gt;
cd ~/.emacs.d
mkdir lisp
wget http://kitchingroup.cheme.cmu.edu/media/ox-ipynb.el
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdcbd7b8" class="outline-2"&gt;
&lt;h2 id="orgdcbd7b8"&gt;Install&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgdcbd7b8"&gt;
&lt;p&gt;
Make sure that the lisp folder is in the emacs path by putting this line in &lt;code&gt;init.el&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;'load-path&lt;/span&gt; &lt;span class="s"&gt;"~/.emacs.d/lisp"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Also make sure that it's loaded by putting this in &lt;code&gt;init.el&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'ox-ipynb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9a5a261" class="outline-2"&gt;
&lt;h2 id="org9a5a261"&gt;Use&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9a5a261"&gt;
&lt;p&gt;
In your org-mode file use the &lt;code&gt;export-ipython&lt;/code&gt; function to export it to an &lt;code&gt;ipynb&lt;/code&gt; file.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;M-x&lt;/span&gt; &lt;span class="nv"&gt;export-ipynb-buffer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Note that this will only work if you have &lt;a href="https://github.com/gregsexton/ob-ipython"&gt;ob-ipython&lt;/a&gt; installed and at least one ipython code block in the org-file.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#+BEGIN_SRC ipython :session
print("a")
#+END_SRC
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>orgmode jupyter emacs</category><guid>https://necromuralist.github.io/posts/org-to-jupyter-notebook/</guid><pubDate>Fri, 14 Apr 2017 03:00:28 GMT</pubDate></item><item><title>Ubuntu 16.04 and the Brother HL-2140 Printer</title><link>https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org9c0c0e7" class="outline-2"&gt;
&lt;h2 id="org9c0c0e7"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9c0c0e7"&gt;
&lt;p&gt;
I (relatively) recently bought a &lt;a href="https://zareason.com/Limbo-560.html"&gt;ZaReason Limbo Desktop PC&lt;/a&gt; which comes with Ubuntu 16.04. I'm debating whether to update it to 16.10, given that updating broke the USB WiFi adapter I had on my older computer (the USB is recognized but not the WiFi adapter), but, in any case, I wanted to print something using my new computer today and ran into the same problem that I had when I updated my old computer to Ubuntu 14.10 - the default printer driver printed out a bunch of blank pages rather than the page I wanted to print. The last time I solved it by choosing a different model (the &lt;i&gt;HL-2142&lt;/i&gt;) but this time out I found a &lt;a href="http://ubuntuforums.org/showthread.php?t=2231405"&gt;stack overflow post&lt;/a&gt; that suggested using the &lt;b&gt;Brother HL-2140 Foomatic/hl1250 [en]&lt;/b&gt; driver instead. I tried it and it worked for me, so here goes.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb2d92ba" class="outline-2"&gt;
&lt;h2 id="orgb2d92ba"&gt;How To Choose the Correct Printer Driver&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb2d92ba"&gt;
&lt;p&gt;
First, open &lt;i&gt;Dash&lt;/i&gt; (the windows-key launches it on my keyboard), type in &lt;i&gt;Printers&lt;/i&gt; and click on the icon.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/dash.png" alt="dash.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
This brings up the &lt;i&gt;printers&lt;/i&gt; dialog. 
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/printers.png" alt="printers.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Double-click on the &lt;i&gt;HL-2140-series&lt;/i&gt; icon to bring up the &lt;i&gt;Printer Properties&lt;/i&gt; dialog.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/printer_properties.png" alt="printer_properties.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Click on the &lt;i&gt;Make and Model&lt;/i&gt; "Change" button (the fourth row). Let the program find the drivers and it will bring up the &lt;i&gt;Choose Driver&lt;/i&gt; dialog.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/choose_driver.png" alt="choose_driver.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Use the &lt;i&gt;Brother (recommended)&lt;/i&gt; option (it should already be selected) and click on the "Forward" button. This brings up the &lt;i&gt;Change Driver&lt;/i&gt; dialog with the &lt;i&gt;postscript&lt;/i&gt; driver chosen (which is the one that does not work for me).
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/change_driver.png" alt="change_driver.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Select the &lt;i&gt;hl1250&lt;/i&gt; driver (by clicking on it) and click on the "Forward" button.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/select_driver.png" alt="select_driver.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
This will bring up the &lt;i&gt;Existing Settings&lt;/i&gt; dialog. I've tried different options and haven't noticed a difference so I just leave it at whatever the default option is and click "Apply".
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/existing_settings.png" alt="existing_settings.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
At this point your driver should be updated so click on the "OK" button.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/click_okay.png" alt="click_okay.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
If your experience is the same as mine, you will be able to print your documents at this point.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org016f231" class="outline-2"&gt;
&lt;h2 id="org016f231"&gt;Conclusion&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org016f231"&gt;
&lt;p&gt;
The basic method to get the &lt;i&gt;Brother HL-2140&lt;/i&gt; to print in Ubuntu 16.04 is to select the &lt;i&gt;hl1250&lt;/i&gt; driver instead of the default. Since I only do this when I need to set up a new computer, I alway have to do some googling to remember what to do, so hopefully this will help me save some searching if I ever have to do this again.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ubuntu printer</category><guid>https://necromuralist.github.io/posts/ubuntu-1604-and-the-brother-hl-2140-printer/</guid><pubDate>Sat, 25 Feb 2017 23:55:37 GMT</pubDate></item></channel></rss>