<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about classification)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/classification.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2023 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Thu, 04 May 2023 00:33:50 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Wikipedia on the F1 Score</title><link>https://necromuralist.github.io/posts/wikipedia-on-f1-score/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org9ac7703" class="outline-2"&gt;
&lt;h2 id="org9ac7703"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9ac7703"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;F1 score. In: Wikipedia [Internet]. 2020 [cited 2020 Sep 10]. Available from: &lt;a href="https://en.wikipedia.org/w/index.php?title=F1_score&amp;amp;oldid=976442604"&gt;https://en.wikipedia.org/w/index.php?title=F1_score&amp;amp;oldid=976442604&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org011dd4f" class="outline-2"&gt;
&lt;h2 id="org011dd4f"&gt;Comments&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org011dd4f"&gt;
&lt;p&gt;
Covers the F1 Score, \(F_\beta\), and other related scores (including precison and recall) as well as giving applications and criticisms (with alternative metrics suggested).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>bibliography</category><category>classification</category><category>metrics</category><guid>https://necromuralist.github.io/posts/wikipedia-on-f1-score/</guid><pubDate>Thu, 10 Sep 2020 23:41:55 GMT</pubDate></item><item><title>Linear Regression Binary Classification</title><link>https://necromuralist.github.io/posts/linear-regression-binary-classification/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents" role="doc-toc"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents" role="doc-toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/linear-regression-binary-classification/#org98c8a3d"&gt;Beginning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/linear-regression-binary-classification/#org43efca4"&gt;Set Up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/linear-regression-binary-classification/#org45880a6"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/linear-regression-binary-classification/#orgf908f03"&gt;Looking At the Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/linear-regression-binary-classification/#org378c604"&gt;Probabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/linear-regression-binary-classification/#org05fcd20"&gt;Converting To Probabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/linear-regression-binary-classification/#org4a77962"&gt;Fit a Regression&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/linear-regression-binary-classification/#orgcd24b3e"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/linear-regression-binary-classification/#orga97f392"&gt;Sources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org98c8a3d" class="outline-2"&gt;
&lt;h2 id="org98c8a3d"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org98c8a3d"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org43efca4" class="outline-3"&gt;
&lt;h3 id="org43efca4"&gt;Set Up&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org43efca4"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org41f10dd" class="outline-4"&gt;
&lt;h4 id="org41f10dd"&gt;Imports&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org41f10dd"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf9ef613" class="outline-4"&gt;
&lt;h4 id="orgf9ef613"&gt;The Data&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf9ef613"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org92e562e" class="outline-4"&gt;
&lt;h4 id="org92e562e"&gt;The Plotting&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org92e562e"&gt;
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org45880a6" class="outline-2"&gt;
&lt;h2 id="org45880a6"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org45880a6"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf908f03" class="outline-3"&gt;
&lt;h3 id="orgf908f03"&gt;Looking At the Data&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf908f03"&gt;
&lt;p&gt;
The &lt;a href="https://www.picostat.com/dataset/r-dataset-package-islr-default"&gt;ISLR Default&lt;/a&gt; data set is a simulated set that provides information to help you build models to predict whether a loan will default or not. Let's look at the data.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example" id="org10231e9"&gt;
&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
RangeIndex: 10000 entries, 0 to 9999
Data columns (total 4 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   default  10000 non-null  int64  
 1   student  10000 non-null  int64  
 2   balance  10000 non-null  float64
 3   income   10000 non-null  float64
dtypes: float64(2), int64(2)
memory usage: 312.6 KB
&lt;/pre&gt;

&lt;p&gt;
So you can see that it has 10,000 rows, all non-null, two float and two integer columns. What might not be obvious in looking at the description is that default and student are actually categorical columns. Furthermore, according to the description they are encoded as "No" and "Yes" which doesn't seem like integers. Let's take a look at the &lt;code&gt;default&lt;/code&gt; column (the target).
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-right"&gt;Defaulted&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Count&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Percent (%)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;9,667&lt;/td&gt;
&lt;td class="org-right"&gt;96.67&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;td class="org-left"&gt;333&lt;/td&gt;
&lt;td class="org-right"&gt;3.33&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
So it's a pretty imbalanced set, you could just predict the target is 1 and you would be right around 97% of the time. I'm going to assume that 1 means "No" (didn't default) and 2 means "Yes" (defaulted). For this exercise we're only going to look at the &lt;code&gt;default&lt;/code&gt; and &lt;code&gt;balance&lt;/code&gt; columns so I'll pull those out - &lt;code&gt;balance&lt;/code&gt; is the amount of money still owed on their credit cards after making a monthly payment. I'm also going to change the &lt;code&gt;default&lt;/code&gt; values to be 0 and 1 instead of 1 and 2.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example"&gt;
|   Defaulted |   Count |   Percent (%) |
|-------------+---------+---------------|
|           0 |   9,667 |         96.67 |
|           1 |     333 |          3.33 |
&lt;/pre&gt;


&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-right"&gt;Defaulted&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Count&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Percent (%)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-left"&gt;9,667&lt;/td&gt;
&lt;td class="org-right"&gt;96.67&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;333&lt;/td&gt;
&lt;td class="org-right"&gt;3.33&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org378c604" class="outline-3"&gt;
&lt;h3 id="org378c604"&gt;Probabilities&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org378c604"&gt;
&lt;p&gt;
What this is about is figuring out how you can use linear regression to make binary categorical predictions. The way we're going to do this is create probabilities that a balance will default and then fit a line to it. One problem with this is that the balance is a set of real numbers, so we don't end up with anything meaningful if we use them as is.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example"&gt;
0.0    499
Name: balance, dtype: int64
&lt;/pre&gt;


&lt;p&gt;
The only value that appears more than once is 0. I'm going to try and get something more meaningful by rounding. But how should we round?
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

: &lt;object type="text/html" data="https://necromuralist.github.io/posts/linear-regression-binary-classification/balance_distribution.html" style="width:100%" height="800"&gt;
:   &lt;p&gt;Figure Missing&lt;/p&gt;
: &lt;/object&gt;

&lt;p&gt;
So, I kind of cheated and worked with the whole dataset, but anyway, looking at it you can see that there are two populations (possibly those that default and those that don't) and it peters out around 2,500, so doing it by 1,000 increments might not make sense. I'll try 100's and see if that's good enough.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Credit Balance&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Count&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Percent (%)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;700&lt;/td&gt;
&lt;td class="org-right"&gt;783&lt;/td&gt;
&lt;td class="org-right"&gt;7.83&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;900&lt;/td&gt;
&lt;td class="org-right"&gt;779&lt;/td&gt;
&lt;td class="org-right"&gt;7.79&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;800&lt;/td&gt;
&lt;td class="org-right"&gt;770&lt;/td&gt;
&lt;td class="org-right"&gt;7.70&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;758&lt;/td&gt;
&lt;td class="org-right"&gt;7.58&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;600&lt;/td&gt;
&lt;td class="org-right"&gt;755&lt;/td&gt;
&lt;td class="org-right"&gt;7.55&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,000&lt;/td&gt;
&lt;td class="org-right"&gt;722&lt;/td&gt;
&lt;td class="org-right"&gt;7.22&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;500&lt;/td&gt;
&lt;td class="org-right"&gt;668&lt;/td&gt;
&lt;td class="org-right"&gt;6.68&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,100&lt;/td&gt;
&lt;td class="org-right"&gt;616&lt;/td&gt;
&lt;td class="org-right"&gt;6.16&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;400&lt;/td&gt;
&lt;td class="org-right"&gt;586&lt;/td&gt;
&lt;td class="org-right"&gt;5.86&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,200&lt;/td&gt;
&lt;td class="org-right"&gt;555&lt;/td&gt;
&lt;td class="org-right"&gt;5.55&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;300&lt;/td&gt;
&lt;td class="org-right"&gt;530&lt;/td&gt;
&lt;td class="org-right"&gt;5.30&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,300&lt;/td&gt;
&lt;td class="org-right"&gt;471&lt;/td&gt;
&lt;td class="org-right"&gt;4.71&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;200&lt;/td&gt;
&lt;td class="org-right"&gt;423&lt;/td&gt;
&lt;td class="org-right"&gt;4.23&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,400&lt;/td&gt;
&lt;td class="org-right"&gt;357&lt;/td&gt;
&lt;td class="org-right"&gt;3.57&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;100&lt;/td&gt;
&lt;td class="org-right"&gt;316&lt;/td&gt;
&lt;td class="org-right"&gt;3.16&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,500&lt;/td&gt;
&lt;td class="org-right"&gt;277&lt;/td&gt;
&lt;td class="org-right"&gt;2.77&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,600&lt;/td&gt;
&lt;td class="org-right"&gt;189&lt;/td&gt;
&lt;td class="org-right"&gt;1.89&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,700&lt;/td&gt;
&lt;td class="org-right"&gt;157&lt;/td&gt;
&lt;td class="org-right"&gt;1.57&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,800&lt;/td&gt;
&lt;td class="org-right"&gt;118&lt;/td&gt;
&lt;td class="org-right"&gt;1.18&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;1,900&lt;/td&gt;
&lt;td class="org-right"&gt;64&lt;/td&gt;
&lt;td class="org-right"&gt;0.64&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2,000&lt;/td&gt;
&lt;td class="org-right"&gt;47&lt;/td&gt;
&lt;td class="org-right"&gt;0.47&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2,100&lt;/td&gt;
&lt;td class="org-right"&gt;28&lt;/td&gt;
&lt;td class="org-right"&gt;0.28&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2,200&lt;/td&gt;
&lt;td class="org-right"&gt;14&lt;/td&gt;
&lt;td class="org-right"&gt;0.14&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2,300&lt;/td&gt;
&lt;td class="org-right"&gt;10&lt;/td&gt;
&lt;td class="org-right"&gt;0.10&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2,400&lt;/td&gt;
&lt;td class="org-right"&gt;4&lt;/td&gt;
&lt;td class="org-right"&gt;0.04&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2,500&lt;/td&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;td class="org-right"&gt;0.02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2,600&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-right"&gt;0.01&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;
Well, it's harder to tell but that might be reasonable.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;object type="text/html" data="https://necromuralist.github.io/posts/linear-regression-binary-classification/balance_bar.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
That x-axis is a little funky, but the blue is the count of those that didn't default and the red are those that did. So the defaults seem to peak at 1,800 with a spread around it.
&lt;/p&gt;
&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org05fcd20" class="outline-3"&gt;
&lt;h3 id="org05fcd20"&gt;Converting To Probabilities&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org05fcd20"&gt;
&lt;p&gt;
So to get the probabilities what we want is the count of accounts that defaulted for each balance divided by the total number of accounts with a given balance.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;object type="text/html" data="https://necromuralist.github.io/posts/linear-regression-binary-classification/probability_vs_balance.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;
&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org4a77962" class="outline-3"&gt;
&lt;h3 id="org4a77962"&gt;Fit a Regression&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4a77962"&gt;
&lt;p&gt;
So, one of the problems we have here is that by converting the values to probabilities we lost a lot of data (well, not lost, just aggregated them away).
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;pre class="example"&gt;
24
&lt;/pre&gt;


&lt;p&gt;
But this isn't a real model, it's just a look at what happens if you fit a line to the probabilities, so I'll just ignore that little fact.
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'


Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'

&lt;object type="text/html" data="https://necromuralist.github.io/posts/linear-regression-binary-classification/probability_vs_balance_with_model.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
Looking at the plot - the horizontal line is the point at which the model switches from predicting the loan won't default to predicting that it will. Once again, I'm plotting on the training data so the performance shouldn't be take at face value, but what it does show is that it would be possible to create a model using linear regression that predicts whether someone would default on their loan. One problem, though, would be interpreting the model - the y-intercept comes at -0.2 - what does it mean when the probability is negative? What happens when it's greater than one?
&lt;/p&gt;
&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgcd24b3e" class="outline-2"&gt;
&lt;h2 id="orgcd24b3e"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgcd24b3e"&gt;
&lt;p&gt;
I'm not really sure what to make of this. I did it as an exercise because the &lt;a href="https://necromuralist.github.io/posts/bibliography/an-introduction-to-statistical-learning/"&gt;ISLR&lt;/a&gt; book had it and I thought it might make an interesting thing to replicate - although my plot doesn't look at all like theirs, and they don't document what they did so I'm not really sure that I'm doing anything remotely close to what they did. One thing to note is that given the binary nature of our data, even though we fit a linear model, if we assume that any balance that gives a probability greater than 0.5 is going to defaualt means that we could re-state the model as:
&lt;/p&gt;

Traceback (most recent call last):
  File "/home/hades/.local/bin/pygmentize", line 5, in &lt;module&gt;
    from pygments.cmdline import main
ModuleNotFoundError: No module named 'pygments'
&lt;p&gt;
Anyway, this isn't something you would normally do, using linear regression to classify data, that is, so it's time to move on.
&lt;/p&gt;
&lt;/module&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga97f392" class="outline-2"&gt;
&lt;h2 id="orga97f392"&gt;Sources&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga97f392"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/bibliography/an-introduction-to-statistical-learning/"&gt;An Introduction To Statistical Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/bibliography/isl-default-dataset/"&gt;ISL Default Dataset&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>categorical data</category><category>classification</category><category>data</category><category>dummy variables</category><category>linear regression</category><category>slipnote</category><guid>https://necromuralist.github.io/posts/linear-regression-binary-classification/</guid><pubDate>Tue, 11 Aug 2020 02:07:53 GMT</pubDate></item></channel></rss>