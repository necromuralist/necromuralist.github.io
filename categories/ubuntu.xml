<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about ubuntu)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/ubuntu.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2019 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Tue, 02 Apr 2019 05:13:37 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Encrypt Dropbox Folders on Ubuntu With CryFS</title><link>https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org1f802a5"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org4cc2bcd"&gt;Encrypt the Folders&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org5e86372"&gt;Install It&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#orgef24376"&gt;Create the Target and Source Folders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#org3210469"&gt;Unmount It&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/#orgfa7eb63"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1f802a5" class="outline-2"&gt;
&lt;h2 id="org1f802a5"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1f802a5"&gt;
&lt;p&gt;
This is one way to encrypt the contents for cloud-synchronized folders using &lt;a href="https://www.cryfs.org/"&gt;CryFS&lt;/a&gt;. I'm going to illustrate it using the &lt;code&gt;Dropbox&lt;/code&gt; folder that the &lt;a href="https://www.dropbox.com/"&gt;dropbox client&lt;/a&gt; creates.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4cc2bcd" class="outline-2"&gt;
&lt;h2 id="org4cc2bcd"&gt;Encrypt the Folders&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4cc2bcd"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5e86372" class="outline-3"&gt;
&lt;h3 id="org5e86372"&gt;Install It&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5e86372"&gt;
&lt;p&gt;
Ubuntu currently (November 10, 2018) has &lt;code&gt;CryFS&lt;/code&gt; as part of its packages so you can install it with apt.
&lt;/p&gt;

/home/athena/.virtualenvs/necromuralist.github.io/bin/python3: No module named virtualfish
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install cryfs
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgef24376" class="outline-3"&gt;
&lt;h3 id="orgef24376"&gt;Create the Target and Source Folders&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgef24376"&gt;
&lt;p&gt;
The &lt;code&gt;cryfs&lt;/code&gt; command will create the two folders and set them up for you. The syntax is &lt;code&gt;cryfs &amp;lt;target&amp;gt; &amp;lt;source&amp;gt;&lt;/code&gt;. The &lt;code&gt;target&lt;/code&gt; will contain the encrypted folders so it will go in the Dropbox folder, while the &lt;code&gt;source&lt;/code&gt; will hold the unencrypted files.
&lt;/p&gt;
/home/athena/.virtualenvs/necromuralist.github.io/bin/python3: No module named virtualfish
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cryfs Dropbox/encrypted dropbox_source
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This is the same command you would use on another computer to set-up the existing encrypted folder on your new computer. The &lt;code&gt;source&lt;/code&gt; folder can be named differently, but the &lt;code&gt;target&lt;/code&gt; folder and the password need to be the same one you used when you created it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3210469" class="outline-3"&gt;
&lt;h3 id="org3210469"&gt;Unmount It&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org3210469"&gt;
&lt;p&gt;
If you need to unmount it you can use &lt;a href="http://manpages.ubuntu.com/manpages/cosmic/man1/fusermount.1.html"&gt;fusermount&lt;/a&gt;.
&lt;/p&gt;

/home/athena/.virtualenvs/necromuralist.github.io/bin/python3: No module named virtualfish
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fusermount -u dropbox_source
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Since you are doing all this within your home directory you don't need root privileges (except to install &lt;code&gt;cryfs&lt;/code&gt; with apt).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfa7eb63" class="outline-2"&gt;
&lt;h2 id="orgfa7eb63"&gt;References&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfa7eb63"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;I got this from &lt;a href="https://www.linuxbabe.com/ubuntu/encrypt-dropbox-ubuntu-16-04-17-10-desktop-server"&gt;Linux Babe&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;But the &lt;a href="https://www.cryfs.org/tutorial"&gt;CryFS Tutorial&lt;/a&gt; is pretty straight-forward, just skips the part about install cryfs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>dropbox</category><category>encryption</category><category>linux</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/encrypt-dropbox-folders-on-ubuntu/</guid><pubDate>Mon, 10 Dec 2018 20:41:05 GMT</pubDate></item><item><title>Using Nvidia Drivers in Ubuntu 18.10</title><link>https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/#orgd7d46ed"&gt;What is this about?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/#org1f08143"&gt;What didn't work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/#org1e3f637"&gt;So what did work?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd7d46ed" class="outline-2"&gt;
&lt;h2 id="orgd7d46ed"&gt;What is this about?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd7d46ed"&gt;
&lt;p&gt;
I had previously found that after upgrading from Ubuntu 18.04 to 18.10 my computer would hang whenever I re-booted. I originally "solved" it by purging the nvidia drivers, but I had actually set out to try and get cuda running this weekend (figuring out the nvidia problem took a day and a half so maybe next weekend) so I wanted a way to get the drivers working. Here's how I did it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1f08143" class="outline-2"&gt;
&lt;h2 id="org1f08143"&gt;What didn't work?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1f08143"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org25c4da8" class="outline-3"&gt;
&lt;h3 id="org25c4da8"&gt;Disabling the initial login&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org25c4da8"&gt;
&lt;p&gt;
Since I have disk-encrpytion set up there's an initial login screen to enter the decryption passphrase. This never seemed to hang, but if you google 'disable login screen' or something similar this is what you get. Disabling it basically confirmed that it wasn't the problem. For the record, you do this by editing &lt;code&gt;/etc/default/grub&lt;/code&gt; and changing the line:
&lt;/p&gt;

&lt;pre class="example"&gt;
GRUB_CMDLINE_LINUX_DEFAULT = "quiet splash"
&lt;/pre&gt;

&lt;p&gt;
To:
&lt;/p&gt;

&lt;pre class="example"&gt;
GRUB_CMDLINE_LINUX_DEFAULT = ""
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf302430" class="outline-3"&gt;
&lt;h3 id="orgf302430"&gt;Revert the kernel and driver version&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf302430"&gt;
&lt;p&gt;
Since I had the nvidia drivers working before I upgraded to Ubuntu 18.10 I decided to try using the same driver version that I had used and running the previous kernel using the Grub Menu. No go the bogeyman.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1e3f637" class="outline-2"&gt;
&lt;h2 id="org1e3f637"&gt;So what did work?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1e3f637"&gt;
&lt;p&gt;
I don't know why other people do it, but &lt;a href="https://askubuntu.com/questions/800239/how-to-disable-lightdmdisplay-manager-on-ubuntu-16-0-4-lts"&gt;this Stack Overflow post&lt;/a&gt; tells you how to disable the GUI. It's basically a one-liner.
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo systemctl set-default multi-user.target
&lt;/pre&gt;

&lt;p&gt;
This will cause the machine to boot up without the GUI running so you can bypass the user-login screen (which seems to be what is causing the problem for me) and login at the command-prompt. The post suggested using &lt;code&gt;systemctl&lt;/code&gt; to start the GUI, but that didn't work for me (Ubuntu might not be using &lt;code&gt;lightdm&lt;/code&gt; anymore, which is what the post refers to). Instead I entered &lt;code&gt;startx&lt;/code&gt; and here I am.
&lt;/p&gt;

/home/athena/.virtualenvs/necromuralist.github.io/bin/python3: No module named virtualfish
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lshw -c video
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
*-display
     description: VGA compatible controller
     product: GM206 [GeForce GTX 950]
     vendor: NVIDIA Corporation
     physical id: 0
     bus info: pci@0000:01:00.0
     version: a1
     width: 64 bits
     clock: 33MHz
     capabilities: vga_controller bus_master cap_list rom
     configuration: driver=nvidia latency=0
     resources: irq:41 memory:fd000000-fdffffff memory:d0000000-dfffffff memory:ce000000-cfffffff ioport:dc00(size=128) memory:c0000-dffff
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>drivers</category><category>setup</category><category>ubuntu</category><guid>https://necromuralist.github.io/posts/ubuntu/using-nvidia-drivers-in-ubuntu-1810/</guid><pubDate>Sun, 28 Oct 2018 19:20:38 GMT</pubDate></item><item><title>Recovering From the Ubuntu 18.10 Upgrade</title><link>https://necromuralist.github.io/posts/ubuntu/recovering-from-the-ubuntu-1810-upgrade/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/recovering-from-the-ubuntu-1810-upgrade/#orgb41a0cc"&gt;What is this about?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/recovering-from-the-ubuntu-1810-upgrade/#org3be92c6"&gt;What didn't work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/recovering-from-the-ubuntu-1810-upgrade/#org0341dfb"&gt;What did work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/recovering-from-the-ubuntu-1810-upgrade/#org36b109b"&gt;Anything Else?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/ubuntu/recovering-from-the-ubuntu-1810-upgrade/#org147f38d"&gt;Update&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/b&gt; I had it hang again on rebooting so there's an update at the end.
&lt;/p&gt;
&lt;div id="outline-container-orgb41a0cc" class="outline-2"&gt;
&lt;h2 id="orgb41a0cc"&gt;What is this about?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb41a0cc"&gt;
&lt;p&gt;
I updated from Ubuntu 18.04 to &lt;a href="https://blog.ubuntu.com/2018/10/19/welcome-ubuntu-desktop-18-10"&gt;Ubuntu 18.10&lt;/a&gt; (Cosmic Cuttlefish) last night and upon rebooting found that I couldn't (finish rebooting, that is). In order to write this I had to recover from the problem so I don't have a screen-grab of the error, but it was basically the same one given in &lt;a href="https://askubuntu.com/questions/837143/failed-to-connect-to-lvmetad"&gt;this Stack Overflow post&lt;/a&gt;:
&lt;/p&gt;

&lt;pre class="example"&gt;
WARNING: Failed to connect to lvmetad. Falling back to device scanning.
Volume group "ubuntu-vg" not found
Cannot process volume group ubuntu-vg
WARNING: Failed to connect to lvmetad. Falling back to device scanning.
Reading all physical volumes.  This may take a while...
Found volume group "ubuntu-vg" using metadata type lvm2
WARNING: Failed to connect to lvmetad. Falling back to device scanning.
2 logical volume(s) in volume group "ubuntu-vg" now active /dev/mapper/ubuntu--vg-root: clean, 1180656/30154752 files, 16007858/120604672 blocks
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3be92c6" class="outline-2"&gt;
&lt;h2 id="org3be92c6"&gt;What didn't work?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3be92c6"&gt;
&lt;p&gt;
If you read the Stack Overflow post I linked to above, the solution was to downgrade the kernel version using the grub loader so, following that advice, I brought up the Grub menu by holding down the shift key while the machine booted up, then tried to move the cursor down to &lt;i&gt;Advanced&lt;/i&gt; in the menu using the arrow keys but for some reason it wouldn't move. I thought maybe it was my &lt;a href="https://ultimatehackingkeyboard.com/"&gt;Ultimate Hacking Keyboard&lt;/a&gt; so I went and grabbed my &lt;a href="http://vortexgear.tw/vortex2_2.asp?kind=47&amp;amp;kind2=225&amp;amp;kind3=&amp;amp;kind4=1043"&gt;Vortex&lt;/a&gt; keyboard instead and it still wouldn't work, and at this point some people might think that it probably was not the keyboard, but nope, I went and grabbed my &lt;a href="http://redragonusa.com/products/keyboard/K552/47"&gt;Redragon&lt;/a&gt; keyboard and all of a sudden it worked. Why did my $30 keyboard work better than my $300 keyboard? And no, I don't think I paid that much when I bought the Ultimate Hacking Keyboard (but it took something like two years to ship so I probably spent more than that in lost time). Well, anyway, it turned out that I plugged the last keyboard in the left USB slot while my other keyboards were in the right USB slot and for some reason the right slot was disabled when I went into the Grub Menu. No mention of that on Stack Overflow, unfortunately.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0341dfb" class="outline-2"&gt;
&lt;h2 id="org0341dfb"&gt;What did work?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0341dfb"&gt;
&lt;p&gt;
While I was googling around I found &lt;a href="https://askubuntu.com/questions/969917/failed-to-connect-to-lvmetad-stuck-on-boot"&gt;this post&lt;/a&gt; on Stack Overflow where it was mentioned that the solution did mess with the kernel but it also mentions that he purged his nvidia drivers, which struck a chord with me because I've had problems with the nvidia drivers on my computer at work whenever I upgrade so I thought that maybe this might be something to check out first, before messing with the kernel. The post suggested using &lt;code&gt;ctrl-alt-f3&lt;/code&gt; to get into a terminal which didn't work for me for some reason so I used the Grub Menu instead. Here's the steps for my future self.
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Hold the shift key down while the machine boots up&lt;/li&gt;
&lt;li&gt;In the Grub Menu use the arrow keys and return to choose the &lt;i&gt;Advanced&lt;/i&gt; option&lt;/li&gt;
&lt;li&gt;Choose the &lt;code&gt;(recovery mode)&lt;/code&gt; version of the current kernel (4.18.0)&lt;/li&gt;
&lt;li&gt;In the Recovery Menu choose the &lt;code&gt;root Drop to root shell prompt&lt;/code&gt; option (you have to hit enter again at the next prompt)&lt;/li&gt;
&lt;li&gt;The file-system for Recovery Mode is in read-only mode so mount the drive with =mount âoptions remount,rw /" (you can do this from the Recovery Menu as well, but it's an extra step either way)&lt;/li&gt;
&lt;li&gt;Purge the drivers with &lt;code&gt;apt purge nvidia-*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;exit&lt;/code&gt; then back out of Recovery Mode and finish the startup&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
I got the stuff about removing the nvidia driver from &lt;a href="https://askubuntu.com/questions/899309/ubuntu-16-04-how-to-disable-nvidia-driver-from-grub"&gt;this Stack Overflow post&lt;/a&gt;. It took a longer time than I thought it would to start up, but I'm writing this from my machine so it seems to work.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org36b109b" class="outline-2"&gt;
&lt;h2 id="org36b109b"&gt;Anything Else?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org36b109b"&gt;
/home/athena/.virtualenvs/necromuralist.github.io/bin/python3: No module named virtualfish
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu-drivers devices
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
== /sys/devices/pci0000:00/0000:00:02.0/0000:01:00.0 ==
modalias : pci:v000010DEd00001402sv00001043sd00008581bc03sc00i00
vendor   : NVIDIA Corporation
model    : GM206 [GeForce GTX 950]
driver   : nvidia-driver-390 - distro non-free recommended
driver   : xserver-xorg-video-nouveau - distro free builtin


&lt;/pre&gt;

&lt;p&gt;
This card actually tended to freeze when I used the open source video drivers that come with Ubuntu so not having the Nvidia drivers seemed like a bad idea. I'm hoping that re-installing them will fix whatever bad setup values were there so I did:
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo ubuntu-drivers autoinstall
&lt;/pre&gt;

&lt;p&gt;
Cross your fingers.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org147f38d" class="outline-2"&gt;
&lt;h2 id="org147f38d"&gt;Update&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org147f38d"&gt;
&lt;p&gt;
First, I didn't mention it above (because I hadn't noticed) but the bluetooth interface wouldn't start. The GUI actually let me click on the on-switch but nothing changed and when I looked in Journalctl I could see that it was raising errors. Even &lt;i&gt;hciconfig&lt;/i&gt; couldn't bring it up. Maddeningly, there are posts out there that showed the same errors that I saw (like &lt;a href="https://www.queryxchange.com/q/3_772706/bluetooth-problem-after-upgrade-from-ubuntu-14-to-16-04/"&gt;this one&lt;/a&gt;) but not only did none of the fixes they suggested work, but once I rebooted the problem went away, so I could have tried that before troubleshooting, and avoided all the hassle (maybe). 
&lt;/p&gt;

&lt;p&gt;
Of course, every solution creates a problem, and while rebooting fixed my bluetooth interface it also revealed that I had the same problems as before (only my Redragon keyboard really works on the Grub menu and the boot hangs after the initial login to decrypt the disk). I removed the nvidia drivers again and this time I didn't reinstall them before rebooting and now it works, but now I don't know if my GUI is going to start hanging again like it used to. Oh, well, one problem at a time.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>nvidia</category><category>repair</category><category>ubuntu</category><category>upgrade</category><guid>https://necromuralist.github.io/posts/ubuntu/recovering-from-the-ubuntu-1810-upgrade/</guid><pubDate>Sat, 27 Oct 2018 17:40:09 GMT</pubDate></item><item><title>The Experience of Updating Ubuntu 17.04 To 17.10</title><link>https://necromuralist.github.io/posts/the-experience-of-updating-ubuntu-1704-to-1710/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
I recently switched to Ubuntu 17.10 (from 17.04) and found it to be surprisingly difficult. This is meant to document what I noticed so that if I decide to upgrade another machine I'll have something to jog my memory about what it was like.
&lt;/p&gt;

&lt;div id="outline-container-org7f2d513" class="outline-2"&gt;
&lt;h2 id="org7f2d513"&gt;Complete Re-Install Required&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7f2d513"&gt;
&lt;p&gt;
I upgraded four machines (I don't have all their details at hand - maybe I'll update this later). In each case they were running Ubuntu 17.04 so I used &lt;code&gt;do-release-upgrade&lt;/code&gt; initially. I didn't upgrade them all on the same day, but did upgrade all of them within the past week.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;HP Z600&lt;/li&gt;
&lt;li&gt;eMachine&lt;/li&gt;
&lt;li&gt;Zareason&lt;/li&gt;
&lt;li&gt;Toshiba portege (laptop)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The first sign that something bad was happening was that the lock-screen appeared to break after the update so I couldn't log back in. The field where you would normally enter the password was gone so there was no way to authenticate myself. In retrospect, maybe since I did this four times I should have tried a headless install with GNU screen to at least see what was going on, but hindsight's always fifty-fifty, isn't it? My tendency to repeat my mistakes is why I'm writing this down, after all. 
&lt;/p&gt;

&lt;p&gt;
On trying to reboot I found that none of the machines would fully start. All of them got stuck on a black screen with a single white underscore in the top left corner. Unlike the other machines, the Toshiba let me enter the disk-decryption password, but then it ended up at the same black screen as the rest. Once it reached this state there was no way to get to the consoles either (e.g. using ctrl-alt-F1). So, in every case I had to boot from a thumb drive and do a fresh install.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org887eb55" class="outline-2"&gt;
&lt;h2 id="org887eb55"&gt;Backwards Steps&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org887eb55"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org17dbb16" class="outline-3"&gt;
&lt;h3 id="org17dbb16"&gt;Alternate Keyboard Layouts&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org17dbb16"&gt;
&lt;p&gt;
It used to be that the installer would ask you to set up a disk-encryption password before asking you for your keyboard layout, making it harder for people like me that use alternate layouts (&lt;a href="https://www.kaufmann.no/roland/dvorak/"&gt;Programmer Dvorak&lt;/a&gt; in my case). They eventually fixed that, but now it's back again, forcing you to enter the password to decrypt your drive using &lt;code&gt;qwerty&lt;/code&gt;. The initial login to decrypt the drive after you boot the computer also has no way to switch the keyboard layout, so once again you have to use &lt;code&gt;qwerty&lt;/code&gt;. On top of that, the visual keyboard is missing keys (well, it's missing the underscore, any way) which I used to use when I found myself struggling too much with &lt;code&gt;qwerty&lt;/code&gt;, so instead I have to use the physical keyboard, hunting and pecking and trying to forget where I think the keys should be. Then, once you get past that first screen, it switches back to dvorak (although the visual keyboard doesn't, for some reason) so you have to know that the user login is using a different keyboard layout from the disk decryption prompt - even though there's no way to actually check what the layout is without just trying the variations until you find the one that works.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org77b7e77" class="outline-3"&gt;
&lt;h3 id="org77b7e77"&gt;Video Drivers&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org77b7e77"&gt;
&lt;p&gt;
On top of the keyboard problem, the default Nouveau video drivers seem to have re-introduced an old bug that causes the GUI to freeze up periodically (on my ZaReason and HP computers, at least. I haven't seen it on the other two, but I don't use them as much, anyway). Switching to the Nvidia driver fixes the freezing problem, but it then makes the initial disk-decryption login non-functional - it seems to freeze everything so you can't do anything but restart the computer and use the Grub menu to drop into recovery mode and enter the password at the command line before resuming the startup. As a 'fix' I followed the advice from &lt;a href="https://askubuntu.com/questions/16371/how-do-i-disable-x-at-boot-time-so-that-the-system-boots-in-text-mode"&gt;this Stack Overflow answer&lt;/a&gt; and disabled the initial splash screen altogether by editing the &lt;code&gt;/etc/default/grub&lt;/code&gt; file to have this line:
&lt;/p&gt;

&lt;pre class="example"&gt;
GRUB_CMDLINE_LINUX_DEFAULT="text"
&lt;/pre&gt;

&lt;p&gt;
Then update grub (it doesn't load this file on booting up, you have to explicitly update it).
&lt;/p&gt;

&lt;pre class="example"&gt;
sudo update-grub
&lt;/pre&gt;

&lt;p&gt;
This makes the initial boot-screen text-only, like an old-school terminal. Not fancy, but at least I don't have to remember to drop into recovery-mode every time I start the computer.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org2c69513" class="outline-2"&gt;
&lt;h2 id="org2c69513"&gt;Apt-Fast Bug&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2c69513"&gt;
&lt;p&gt;
This is a &lt;a href="https://github.com/ilikenwf/apt-fast/issues/132"&gt;bug&lt;/a&gt; in apt-fast, not an ubuntu bug, but since apt-fast is one of the first things I usually install, I figure I should document the fix. Open up &lt;code&gt;/var/lib/dpkg/info/apt-fast.config&lt;/code&gt; (as root), jump to line 212 and change this line:
&lt;/p&gt;

&lt;pre class="example"&gt;
if ($downloadcmd =~ /\${_MAXNUM}/){
&lt;/pre&gt;

&lt;p&gt;
to this:
&lt;/p&gt;

&lt;pre class="example"&gt;
if ($downloadcmd =~ /\$\{_MAXNUM}/){
&lt;/pre&gt;

&lt;p&gt;
In case you can't see it I added a backslash (&lt;code&gt;\&lt;/code&gt;) between the &lt;code&gt;$&lt;/code&gt; and &lt;code&gt;{_MAXNUM&lt;/code&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb04d851" class="outline-2"&gt;
&lt;h2 id="orgb04d851"&gt;A Little Less Whining&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb04d851"&gt;
&lt;p&gt;
Although the disk-decryption login is a major negative, I must note that I kind of like the new aesthetic, I was just really, &lt;i&gt;really&lt;/i&gt;, surprised at how defective this process seemed to be, given how far along Ubuntu has come. There's still some unexpected behaviors (switching workspaces seems to drag applications with them, even though I didn't explicitly ask to, for instance, and byobu seems to ignore my alternate escape key sometimes), but I like it overall. Maybe tomorrow I'll feel different.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ubuntu</category><guid>https://necromuralist.github.io/posts/the-experience-of-updating-ubuntu-1704-to-1710/</guid><pubDate>Sat, 28 Oct 2017 20:35:05 GMT</pubDate></item></channel></rss>