<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about docker jupyter how-to)</title><link>https://necromuralist.github.io/</link><description></description><atom:link rel="self" type="application/rss+xml" href="https://necromuralist.github.io/categories/docker-jupyter-how-to.xml"></atom:link><language>en</language><lastBuildDate>Mon, 06 Mar 2017 22:12:34 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Building a Jupyter Docker Container</title><link>https://necromuralist.github.io/posts/building-a-jupyter-docker-container/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div&gt;&lt;p&gt;This is how I built a docker container to run a jupyter server. The reason why I did it was that I wanted to isolate any non-python dependencies I needed to install, but so far I haven't done any, so this could actually be done more easily using &lt;cite&gt;virtualenv&lt;/cite&gt;, but this is a starting point.&lt;/p&gt;
&lt;div class="section" id="the-dockerfile"&gt;
&lt;h2&gt;The Dockerfile&lt;/h2&gt;
&lt;p&gt;This is the configuration for building the docker image.&lt;/p&gt;
&lt;pre class="code dockerfile"&gt;&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ubuntu:latest&lt;/span&gt;
&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /code&lt;/span&gt;
&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get -y upgrade
&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get install -y build-essential python-dev
&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get install -y python python-distribute python-pip
&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; pip install pip --upgrade
&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; requirements.txt /code&lt;/span&gt;
&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; pip install -r requirements.txt
&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; mkdir /notebooks
&lt;a name="rest_code_27eea0c24f3846088ee37d562e6efdfd-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; jupyter notebook --no-browser --ip 0.0.0.0 --port 8888 /notebooks&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The &lt;tt class="docutils literal"&gt;FROM&lt;/tt&gt; line shows that I'm building my container using an ubuntu image (the latest image). The &lt;tt class="docutils literal"&gt;WORKDIR&lt;/tt&gt; sets the current working directory so commands that are run will look there for files. The next set of &lt;tt class="docutils literal"&gt;RUN&lt;/tt&gt; lines just say to update &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt;&lt;/tt&gt; and install some basic python packages. The &lt;tt class="docutils literal"&gt;ADD&lt;/tt&gt; line takes the &lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; file in the directory where I'm going to run this and put it in &lt;tt class="docutils literal"&gt;/CODE&lt;/tt&gt; which I pointed to with the &lt;tt class="docutils literal"&gt;WORKDIR&lt;/tt&gt; line. The next &lt;tt class="docutils literal"&gt;RUN&lt;/tt&gt; commands install my python dependencies and make a folder called &lt;tt class="docutils literal"&gt;/notebooks&lt;/tt&gt; to put the jupyter notebooks in. The last line (&lt;tt class="docutils literal"&gt;CMD&lt;/tt&gt;) is what will be executed when the container is run.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="building-the-image"&gt;
&lt;h2&gt;Building the Image&lt;/h2&gt;
&lt;p&gt;If the docker-file is stored in a file named &lt;tt class="docutils literal"&gt;jupyter.dockerfile&lt;/tt&gt; next to the &lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; file, both of which are in the directory where I run the build command. To build it (and name the image &lt;tt class="docutils literal"&gt;jupyter&lt;/tt&gt;) I'd run the command:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_05b969f1006b452e93039f7fc6fc2a0c-1"&gt;&lt;/a&gt;docker -f jupyter.dockerfile -t jupyter:latest .
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="running-the-server"&gt;
&lt;h2&gt;Running the Server&lt;/h2&gt;
&lt;p&gt;To run the server in the same directory where the notebooks should be stored and using the default port of 8888:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_74e86cc260344900afea0d7f91ffb7e5-1"&gt;&lt;/a&gt;docker --name jupyter -p 8888:8888 -v &lt;span class="nv"&gt;$PWD&lt;/span&gt;:/notebooks -d jupyter
&lt;/pre&gt;&lt;p&gt;Now the server should be reachable at &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://localhost:8888&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>docker jupyter how-to</category><guid>https://necromuralist.github.io/posts/building-a-jupyter-docker-container/</guid><pubDate>Mon, 20 Jun 2016 03:48:21 GMT</pubDate></item></channel></rss>