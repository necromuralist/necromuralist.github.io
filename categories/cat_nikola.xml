<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about Nikola)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/cat_nikola.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2020 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Wed, 30 Dec 2020 06:53:25 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Updating a Nikola Shortcode Plugin</title><link>https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#org48b8639"&gt;Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#org2c216e1"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#orgbaab9dc"&gt;The Plugin File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#org78f184d"&gt;The Plugin Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#org2c9a3b6"&gt;Stealing From the &lt;code&gt;doc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#org49c44c8"&gt;The Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#org640a5fc"&gt;Checking It Out&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#org0f624ad"&gt;Does it work like the original doc?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#org1feae0b"&gt;Does it accept a title?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#orgf9b53da"&gt;What if the slug doesn't exist?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#orgf4ec312"&gt;One More Thing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/#org4d05d5b"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id="org307671d" class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/lancelot_link.jpg" alt="lancelot_link.jpg"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Source: &lt;a href="https://www.flickr.com/photos/myprontopup/264413649/in/photostream/"&gt;Brian&lt;/a&gt; (&lt;a href="https://creativecommons.org/licenses/by-nc/2.0/"&gt;CC License&lt;/a&gt;)/Unmodified
&lt;/p&gt;
&lt;div id="outline-container-org48b8639" class="outline-2"&gt;
&lt;h2 id="org48b8639"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org48b8639"&gt;
&lt;p&gt;
These are some notes to help me remember what I did to alter a &lt;a href="https://www.getnikola.com/"&gt;Nikola&lt;/a&gt; &lt;a href="https://www.getnikola.com/handbook.html#shortcodes"&gt;shortcode&lt;/a&gt; plugin. A while back I looked into using their &lt;a href="https://www.getnikola.com/handbook.html#doc"&gt;&lt;code&gt;doc&lt;/code&gt;&lt;/a&gt; &lt;a href="https://www.getnikola.com/handbook.html#restructuredtext-extensions"&gt;reStructured Text extension&lt;/a&gt; ("role"?) which automatically creates links to other posts by looking up the &lt;a href="https://www.wikiwand.com/en/Clean_URL#/Slug"&gt;slug&lt;/a&gt; or title that you pass to it, but since I switched to using org-mode instead of restructured text I couldn't use it. Then I found out the other day that they built a &lt;a href="https://www.getnikola.com/handbook.html#shortcodes"&gt;shortcode&lt;/a&gt; that allows you to use it in other formats and when I tried it it worked - mostly.
&lt;/p&gt;

&lt;p&gt;
A tag that looks like this:
&lt;/p&gt;

&lt;p&gt;

{{% doc %}}2-nikola-inter-site-links{{% /doc %}}

&lt;/p&gt;

&lt;p&gt;
Gets turned into this: &lt;a href="https://necromuralist.github.io/posts/2-nikola-inter-site-links/"&gt;Nikola Inter-Site Links&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
The problem is that, while the &lt;code&gt;doc&lt;/code&gt; shortcode supports giving the link an alternate title, it expects restructured-text formatting. e.g. &lt;code&gt;`alternate title&amp;lt;some-slug&amp;gt;`&lt;/code&gt;. Why is this a problem? Well, I didn't look into where it's happening, but when the text within the {{% doc %}} tags gets sent to the shortcode code (meaning the python plugin code) for processing it converts the angle brackets (&lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;) to &lt;a href="https://www.w3schools.com/html/html_entities.asp"&gt;HTML character entities&lt;/a&gt; (e.g. the &lt;code&gt;&amp;lt;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;lt&lt;/code&gt;) but the regular expression in the code that extracts the alternate title is looking for the braces (presumably the role is processed differently from the shortcode) anyway, I was trying to figure out some workarounds but then I looked at the code and it looked fairly easy to customize so I decided I would so that I could learn how to do it (and have a way to use alternative titles in org-mode). So, here it goes.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2c216e1" class="outline-2"&gt;
&lt;h2 id="org2c216e1"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2c216e1"&gt;
&lt;p&gt;
I'm going to call my shortcode &lt;code&gt;lancelot&lt;/code&gt;. I was going to call it link, but that seems like it might clash with something else, either now or in the future, so I decided to name it after &lt;a href="https://www.wikiwand.com/en/Lancelot_Link,_Secret_Chimp"&gt;Lancelot Link, Secret Chimp&lt;/a&gt; instead. Hopefully that won't end up conflicting with anything.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbaab9dc" class="outline-3"&gt;
&lt;h3 id="orgbaab9dc"&gt;The Plugin File&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbaab9dc"&gt;
&lt;p&gt;
The first thing I did was poke around in the nikola folders for something I could copy. I decided to use the existing &lt;code&gt;gist&lt;/code&gt; shortcode to start with. Why not use &lt;code&gt;doc&lt;/code&gt;? because it's in a different folder and inherits from the &lt;code&gt;RestExtension&lt;/code&gt; which didn't seem like what I wanted, although maybe that's what makes the angle brackets work, but anyway, the &lt;code&gt;gist&lt;/code&gt; seemed like a good place to start. They appear to be using &lt;a href="https://yapsy.readthedocs.io/en/latest/"&gt;yapsy&lt;/a&gt; for the plugin system, which requires two files for your plugin, a python file where you define the plugin and a plugin-info file (which looks like an ini file). So to start I copied &lt;code&gt;nikola/plugins/shortcode/gist.plugin&lt;/code&gt; and renamed it &lt;code&gt;lancelot.plugin&lt;/code&gt; then edited it to look like this.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Core]
name = lancelot
module = lancelot

[Nikola]
PluginCategory = Shortcode

[Documentation]
author = The Cloistered Monkey
version = 0.1
website = https://necromuralist.github.io/
description = Variant of the doc shortcode that allows alternate titles for non-restructured text formats.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Seems easy enough. Now to the plugin code.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org78f184d" class="outline-3"&gt;
&lt;h3 id="org78f184d"&gt;The Plugin Code&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org78f184d"&gt;
&lt;p&gt;
According to the documentation on &lt;a href="https://getnikola.com/extending.html#shortcodes"&gt;creating a shortcode&lt;/a&gt;, the requirements are that you create a plugin that inherits from the &lt;code&gt;ShortcodePlugin&lt;/code&gt; (you'll find it in the &lt;code&gt;nikola/plugin_categories.py&lt;/code&gt; file if you want to check it out) and define the &lt;code&gt;handler&lt;/code&gt; method that handles the shortcode and returns a tuple of &lt;code&gt;(output, dependencies)&lt;/code&gt;. The &lt;code&gt;output&lt;/code&gt; is the text that will replace the shortcode in the document and the &lt;code&gt;dependencies&lt;/code&gt; is a list of files that nikola will use to check if something is out of date (I don't use it here).
&lt;/p&gt;

&lt;p&gt;
There are three required named arguments for the &lt;code&gt;handler&lt;/code&gt; method:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;site&lt;/code&gt;: an object that you can use to check the state of the site&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: The text between the shortcode tags (if it uses both opening and closing tags)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lang&lt;/code&gt;: the current language&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
In addition, any attributes added within the shortcode tag will be passed into the &lt;code&gt;handler&lt;/code&gt; method by position or keyword. Anyway, since I copied the &lt;code&gt;doc&lt;/code&gt; code I didn't actually read this until just now, but maybe it's good to know. Onward.
&lt;/p&gt;

&lt;p&gt;
The next thing to do was to create &lt;code&gt;lancelot.py&lt;/code&gt; in the same folder as the &lt;code&gt;lancelot.plugin&lt;/code&gt; file. The basic definition of class (and the start of the file) looks more-or-less the same for all the plugins.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="c1"&gt;# This file is public domain according to its author, the Cloistered Monkey&lt;/span&gt;

&lt;span class="sd"&gt;"""Shortcode for non-restructured text inter-site links."""&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nikola.plugin_categories&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ShortcodePlugin&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Plugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ShortcodePlugin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Plugin for non-rst inter-site links."""&lt;/span&gt;

    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"lancelot"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
So, other than some doc-strings all you have to do is set the name and then the handler, which we'll do next.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org2c9a3b6" class="outline-3"&gt;
&lt;h3 id="org2c9a3b6"&gt;Stealing From the &lt;code&gt;doc&lt;/code&gt;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org2c9a3b6"&gt;
&lt;p&gt;
The file that I stole most of the code from is located in &lt;code&gt;nikola/plugins/compile/rest/doc.py&lt;/code&gt;. The &lt;code&gt;Plugin&lt;/code&gt; class in that file is handling both the restructured text role and the shortcode so we don't need all of it. According to the documentation I linked to above, the &lt;code&gt;set_site&lt;/code&gt; method is used to tell nikola to use something other than the &lt;code&gt;handler&lt;/code&gt; method, and in this case the author used it to register the functions for the two things it's handling.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;set_site&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Set Nikola site."""&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;
    &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register_canonical_role&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'doc'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doc_role&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register_shortcode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'doc'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doc_shortcode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;doc_role&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Plugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_site&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
If you look at the line &lt;code&gt;self.site.register_shortcode('doc', doc_shortcode)&lt;/code&gt; you can figure out that we need to steal from a function named - wait for itâ¦ &lt;code&gt;doc_shortcode&lt;/code&gt;. Here's what's in that function:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;doc_shortcode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Implement the doc shortcode."""&lt;/span&gt;
    &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'data'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;twin_slugs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;permalink&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_doc_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LOGGER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;twin_slugs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;LOGGER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
		&lt;span class="s1"&gt;'More than one post with the same slug. Using "&lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s1"&gt;" for doc shortcode'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;permalink&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;a href="&lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s1"&gt;"&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{1}&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;permalink&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;LOGGER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
	    &lt;span class="s1"&gt;'"&lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s1"&gt;" slug doesn&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;t exist.'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;span class="error text-error" style="color: red;"&amp;gt;Invalid link: &lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;/span&amp;gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
It looks pretty straight-forward except it's using two things not defined within it - &lt;code&gt;LOGGER&lt;/code&gt; and &lt;code&gt;_doc_link&lt;/code&gt;. The &lt;code&gt;LOGGER&lt;/code&gt; is just an import so we can just change the start of our file to grab it. The &lt;code&gt;doc_link&lt;/code&gt; is a function in the same file as &lt;code&gt;doc_shortcode&lt;/code&gt;. My first thought for the &lt;code&gt;_doc_link&lt;/code&gt; was that since it's a standalone function I could just import it and call it. That turned out to have a small problem though - right in the middle of &lt;code&gt;_doc_link&lt;/code&gt; is this for loop:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc_role&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'slug'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;twin_slugs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
	    &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
What you'll notice is that the &lt;code&gt;doc_role&lt;/code&gt; function has an attribute &lt;code&gt;site&lt;/code&gt;. Well, it doesn't really, until it's set in that &lt;code&gt;set_site&lt;/code&gt; method above. So, okay, maybe I could figure out some way to set itâ¦ or maybe not, I don't know but even if I could it seems like it'd get kind of convoluted, and who knows what changes the original author might make in the future, it just seemed like it'd make more sense to re-implement it myself.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org49c44c8" class="outline-3"&gt;
&lt;h3 id="org49c44c8"&gt;The Plugin&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org49c44c8"&gt;
&lt;p&gt;
So, first a different start to our file, this time with the &lt;code&gt;LOGGER&lt;/code&gt; and &lt;code&gt;slugify&lt;/code&gt; imported (the &lt;code&gt;slugify&lt;/code&gt; was in &lt;code&gt;_doc_link&lt;/code&gt; which I'm re-defining later).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="c1"&gt;# This file is public domain according to its author, the Cloisted Monkey&lt;/span&gt;

&lt;span class="sd"&gt;"""Shortcode for non-restructured text inter-site links.&lt;/span&gt;
&lt;span class="sd"&gt;Re-write of the ``doc`` plugin to allow alternative titles outside of RST"""&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nikola.plugin_categories&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ShortcodePlugin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;nikola.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LOGGER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slugify&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Plugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ShortcodePlugin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Plugin for non-rst inter-site links."""&lt;/span&gt;

    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"lancelot"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org4fb1505" class="outline-4"&gt;
&lt;h4 id="org4fb1505"&gt;&lt;code&gt;lancelot_link&lt;/code&gt;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org4fb1505"&gt;
&lt;p&gt;
To replace the &lt;code&gt;_doc_link&lt;/code&gt; I made a new function called &lt;code&gt;lancelot_link&lt;/code&gt; which I'll be looking at in parts. First up is the function declaration.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lancelot_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""process the slug, check if it exists or is duplicated&lt;/span&gt;

&lt;span class="sd"&gt;    if `title` is None this will grab the post-title&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;     site: the Nikola object&lt;/span&gt;
&lt;span class="sd"&gt;     slug: the text between the shortcode tags&lt;/span&gt;
&lt;span class="sd"&gt;     title: the title passed in by the user (if any)&lt;/span&gt;

&lt;span class="sd"&gt;    Returns:&lt;/span&gt;
&lt;span class="sd"&gt;     tuple (success, has duplicate slugs, title, permalink, slug)&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The interface wants the objects that nikola passes into the &lt;code&gt;handler&lt;/code&gt; method - the &lt;code&gt;site&lt;/code&gt; object , the &lt;code&gt;data&lt;/code&gt; (renamed &lt;code&gt;slug&lt;/code&gt;) and the &lt;code&gt;title&lt;/code&gt;. 
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/b&gt; I'm not indenting the rest of the code in the post but imagine it's indented four spaces.
&lt;/p&gt;
&lt;/div&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org9833c2f"&gt;&lt;/a&gt;Slugification&lt;br&gt;
&lt;div class="outline-text-5" id="text-org9833c2f"&gt;
&lt;p&gt;
The first thing the function does is split out any fragments that might have been attached and "slugifies" the slug (makes sure it's ASCII and has only alphanumeric characters).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;'#'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fragment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;fragment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;slugify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="orgc58c781"&gt;&lt;/a&gt;Find the Post&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgc58c781"&gt;
&lt;p&gt;
Next it checks to see if the slug refers to an actual page on the site and if there are duplicate slugs. If the page doesn't exist, then it short-circuits the function so the &lt;code&gt;handler&lt;/code&gt; can return some error text instead of a link. If it does exist it saves the &lt;code&gt;post&lt;/code&gt; object for the next step (using the first post in the timeline if there were duplicates).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;twin_slugs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'slug'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
	&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;twin_slugs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
	    &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org06c176b"&gt;&lt;/a&gt;The Title&lt;br&gt;
&lt;div class="outline-text-5" id="text-org06c176b"&gt;
&lt;p&gt;
If the user didn't pass in an alternative title this grabs the title that was given to the post we're linking to.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/b&gt; The &lt;code&gt;doc&lt;/code&gt; shortcode raises then catches a &lt;code&gt;ValueError&lt;/code&gt; exception if there's no matching post. I had thought that this was for logging, but that doesn't appear to be the case so I took it out. But since I don't know what it was doing in the first place I might be breaking something. Not that I can tell, though.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org28551bc"&gt;&lt;/a&gt;The Permalink&lt;br&gt;
&lt;div class="outline-text-5" id="text-org28551bc"&gt;
&lt;p&gt;
Now we grab the permalink.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;permalink&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;permalink&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;fragment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;permalink&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;'#'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fragment&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org53e4392"&gt;&lt;/a&gt;The Return&lt;br&gt;
&lt;div class="outline-text-5" id="text-org53e4392"&gt;
&lt;p&gt;
And finally we do the return dance to answer some questions for the &lt;code&gt;handler&lt;/code&gt;:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;i&gt;Did we find the post?&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Were there duplicate posts with the same slug?&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;What's the text to display for the link?&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;What's the address for the anchor tag?&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;What's the correct slug?&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;twin_slugs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;permalink&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The &lt;code&gt;slug&lt;/code&gt; is only for the logging messages.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1460f80" class="outline-4"&gt;
&lt;h4 id="org1460f80"&gt;The handler&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1460f80"&gt;
&lt;p&gt;
Now I'll define the &lt;code&gt;handler&lt;/code&gt; that's called by nikola. This is a method of the Plugin class that I started above, but I'm showing it after the &lt;code&gt;lancelot_link&lt;/code&gt; function since it mostly just calls &lt;code&gt;lancelot_link&lt;/code&gt; and creates the output from what it returned. I originally had it all in the same method (and maybe I'll put it back at some point). But I thought it was a little easier to read this way, especially as I referred back to the original &lt;code&gt;doc&lt;/code&gt; plugin to see what's going on.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Create an inter-site link&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;     title: optional argument to specify a different title from the post&lt;/span&gt;

&lt;span class="sd"&gt;    Returns:&lt;/span&gt;
&lt;span class="sd"&gt;     output HTML to replace the shortcode&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;twin_slugs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;permalink&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lancelot_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
	&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;twin_slugs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;LOGGER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
		&lt;span class="s1"&gt;'More than one post with the same slug. '&lt;/span&gt;
		&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'Using "&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;permalink&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;" for lancelot shortcode'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;a href="&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;permalink&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;"&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;/a&amp;gt;'&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="n"&gt;LOGGER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
	    &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;" slug doesn&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;t exist.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;span class="error text-error" style="color: red;"&amp;gt;'&lt;/span&gt;
		  &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'Invalid link: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;/span&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
One thing to note here is that the original &lt;code&gt;doc&lt;/code&gt; plugin only returns the output, not an empty list, even though the documentation says you should. It works either way, but I noticed the &lt;code&gt;gist&lt;/code&gt; plugin returned an empty list with the output so I followed, like a lemming to the sea.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org640a5fc" class="outline-3"&gt;
&lt;h3 id="org640a5fc"&gt;Checking It Out&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org640a5fc"&gt;
&lt;p&gt;
Now let's give it a dry run.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0f624ad" class="outline-3"&gt;
&lt;h3 id="org0f624ad"&gt;Does it work like the original doc?&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0f624ad"&gt;
&lt;p&gt;
   If we put this in the post:

{{% lancelot %}}2-nikola-inter-site-links{{% /lancelot %}}

&lt;/p&gt;

&lt;p&gt;
We get this:
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/posts/2-nikola-inter-site-links/"&gt;Nikola Inter-Site Links&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1feae0b" class="outline-3"&gt;
&lt;h3 id="org1feae0b"&gt;Does it accept a title?&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1feae0b"&gt;
&lt;p&gt;
Now, what this was all about.
&lt;/p&gt;

&lt;p&gt;

{{% lancelot title="An old post about linking to another post." %}}2-nikola-inter-site-links{{% /lancelot %}}

&lt;/p&gt;

&lt;p&gt;
Gives us:
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/posts/2-nikola-inter-site-links/"&gt;An old post about linking to another post.&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
And if you forget the name of the parameter, you can just pass in the alternate title instead.
&lt;/p&gt;

&lt;p&gt;

{{% lancelot "Without the 'title=' part" %}}2-nikola-inter-site-links{{% /lancelot %}}

&lt;/p&gt;

&lt;p&gt;
Gives this:
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/posts/2-nikola-inter-site-links/"&gt;Without the 'title=' part&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf9b53da" class="outline-3"&gt;
&lt;h3 id="orgf9b53da"&gt;What if the slug doesn't exist?&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf9b53da"&gt;
&lt;p&gt;

{{% lancelot title="Oops." %}}this-error-is-on-purpose-ignore-it{{% /lancelot %}}

&lt;/p&gt;

&lt;p&gt;
Gives us:
&lt;/p&gt;

&lt;p&gt;
&lt;span class="error text-error" style="color: red;"&gt;Invalid link: this-error-is-on-purpose-ignore-it&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;
Note that adding this error to this post means it shows up in the logging every time I re-build. I hope I don't forget and try and hunt it down later.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf4ec312" class="outline-3"&gt;
&lt;h3 id="orgf4ec312"&gt;One More Thing&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf4ec312"&gt;
&lt;p&gt;
When I originally was trying to figure this out I put the &lt;code&gt;lancelot&lt;/code&gt; files in the &lt;code&gt;shortcodes&lt;/code&gt; folder next to the &lt;code&gt;gist&lt;/code&gt; files (in the virtualenv, so I knew it was a bad idea, even as I did it) but while I was re-writing them for this post I wanted a place to stash the files so I put them in the &lt;code&gt;plugins&lt;/code&gt; folder that sits in the site repository next to the &lt;code&gt;conf.py&lt;/code&gt; file - which already existed because that's where nikola put the &lt;a href="https://plugins.getnikola.com/v7/orgmode/"&gt;org-mode plugin&lt;/a&gt; - and when I first re-built the site with the code only partially written, it raised an &lt;code&gt;Exception&lt;/code&gt; because it turns out that the place to put plugins, including shortcode plugins, for nikola/yapsy to find them is in the &lt;code&gt;plugins&lt;/code&gt; folder. Imagine that.
&lt;/p&gt;

&lt;p&gt;
Also, to use an interactive debugger (like my favorite one, &lt;a href="https://pypi.org/project/pudb/"&gt;pudb&lt;/a&gt;) you need to change the verbosity when you build the site to 2.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola build -v 2
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Otherwise it captures the stdout and you won't see the debugger (it will just look like it hung-up). The other thing is if you see an error something like this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[2020-07-28 20:53:44] ERROR: Nikola: Shortcode error: Syntax error in shortcode 'lancelot' at line 426, column 27: expecting whitespace!
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
It more than likely mean that the error is actually in the tag - no space after the first &lt;code&gt;%&lt;/code&gt; or before the second one or one time I chopped off the end of a tag when copying and pasting and it gave the same error - it seems to be a generic error that means "check the tag". 
&lt;/p&gt;

&lt;p&gt;
I guess that's actually three more things.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4d05d5b" class="outline-2"&gt;
&lt;h2 id="org4d05d5b"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4d05d5b"&gt;
&lt;p&gt;
So, that's my first foray into making a nikola plugin. I've been using nikola for a while now, but I never really looked at the code before. It's nice to see that the plugin system is so easy to use.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>nikola</category><guid>https://necromuralist.github.io/posts/2c-updating-a-nikola-shortcode-plugin/</guid><pubDate>Tue, 28 Jul 2020 23:33:43 GMT</pubDate></item><item><title>How To Change The Nikola Bootswatch Theme</title><link>https://necromuralist.github.io/posts/how-to-change-the-nikola-bootswatch-theme/</link><dc:creator>hades</dc:creator><description>&lt;div&gt;&lt;p&gt;I had my theme for this site set to use &lt;a class="reference external" href="http://nickmccurdy.com/bootswatch/spacelab/"&gt;Spacelab&lt;/a&gt;, which I liked, but the gradients were starting to annoy me so I decided to switch to &lt;a class="reference external" href="http://nickmccurdy.com/bootswatch/journal/"&gt;Journal&lt;/a&gt;, which matches my aesthetic tastes a little better. This took more work than I thought it would (mostly because I don't mess with the &lt;em&gt;nikola&lt;/em&gt; configuration very often). So these are my notes for the next time.&lt;/p&gt;
&lt;div class="section" id="overview"&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Install the &lt;a class="reference external" href="https://themes.getnikola.com/#bootstrap3"&gt;bootswatch 3&lt;/a&gt; nikola theme (if you haven't already) (&lt;code class="docutils literal"&gt;nikola install_theme bootstrap3&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install the &lt;a class="reference external" href="https://bootswatch.com/journal/"&gt;journal bootswatch theme&lt;/a&gt;  (&lt;code class="docutils literal"&gt;nikola bootswatch_theme &lt;span class="pre"&gt;-s&lt;/span&gt; journal&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get the base template (&lt;code class="docutils literal"&gt;nikola theme &lt;span class="pre"&gt;-c&lt;/span&gt; base.tmpl&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In &lt;code class="docutils literal"&gt;base.tmpl&lt;/code&gt;, change &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;navbar-inverse&lt;/span&gt;&lt;/code&gt; to &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;navbar-default&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Change the anchor color in &lt;code class="docutils literal"&gt;bootstrap.css&lt;/code&gt; to something less creamsicle (and do whatever other CSS adjustments you need to do).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you need to, minify the CSS (&lt;code class="docutils literal"&gt;cleancss &lt;span class="pre"&gt;-o&lt;/span&gt; bootstrap.min.css bootstrap.css&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build the posts (&lt;code class="docutils literal"&gt;nikola build&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Admire the fruits of your (well, other people's) labor.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="installing-the-theme"&gt;
&lt;h2&gt;Installing the theme&lt;/h2&gt;
&lt;div class="section" id="the-bootswatch-3-theme"&gt;
&lt;h3&gt;The Bootswatch 3 Theme&lt;/h3&gt;
&lt;p&gt;I already had the bootswatch 3 theme installed, since I was using &lt;em&gt;Spacelab&lt;/em&gt;, but if you don't have it installed this is how to set the base theme:&lt;/p&gt;
&lt;pre class="literal-block"&gt;nikola install_theme bootstrap3&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="the-journal-theme"&gt;
&lt;h3&gt;The Journal Theme&lt;/h3&gt;
&lt;p&gt;Since I want to change the theme to &lt;em&gt;Journal&lt;/em&gt; this is the next step (you can also specify a parent theme, but the default is &lt;code class="docutils literal"&gt;bootstrap3&lt;/code&gt;, which is what I wanted anyway):&lt;/p&gt;
&lt;pre class="literal-block"&gt;nikola bootswatch_theme -s journal&lt;/pre&gt;
&lt;p&gt;This will set up the default bootstrap theme, but you need to re-build the HTML to have it show up on the development-server's web-page (something that I didn't realize initially, causing me to think something was broken).&lt;/p&gt;
&lt;pre class="literal-block"&gt;nikola build&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="updating-the-template"&gt;
&lt;h2&gt;Updating the Template&lt;/h2&gt;
&lt;p&gt;On re-loading the page I found that it mostly worked, but for some reason it looked more orange than I expected. It turns out that the &lt;em&gt;nikola&lt;/em&gt; developer decided that &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;navbar-inverse&lt;/span&gt;&lt;/code&gt; should be the default style for the navbar (instead of &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;navbar-default&lt;/span&gt;&lt;/code&gt;) and the section headers are hyperlinks, which in the &lt;em&gt;Journal&lt;/em&gt; theme are orange (by orange I really mean something closer to a creamsicle). Following the instructions in this &lt;a class="reference external" href="https://github.com/getnikola/nikola/issues/2552"&gt;bug report&lt;/a&gt; (which says that it isn't a bug, it's a feature) I copied the base template from the &lt;em&gt;nikola&lt;/em&gt; installation (in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;site-packages&lt;/span&gt;&lt;/code&gt;) into the site using a built-in &lt;em&gt;nikola&lt;/em&gt; command.&lt;/p&gt;
&lt;pre class="literal-block"&gt;nikola theme -c base.tmpl&lt;/pre&gt;
&lt;p&gt;This command creates a file (&lt;code class="docutils literal"&gt;themes/custom/templates/base.tmpl&lt;/code&gt;) which you can edit to override the built-in base template. I opened it up and changed the &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;navbar-inverse&lt;/span&gt;&lt;/code&gt; CSS class to &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;navbar-default&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="code html"&gt;&lt;a name="rest_code_b94a2e22ca1141a5a16647e843e734e5-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar navbar-default navbar-static-top"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The I re-built the &lt;em&gt;nikola&lt;/em&gt; posts, and reloaded the page and there it was, the white navbar I wanted.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="updating-the-css"&gt;
&lt;h2&gt;Updating the CSS&lt;/h2&gt;
&lt;div class="section" id="fixing-the-headline-color"&gt;
&lt;h3&gt;Fixing the Headline Color&lt;/h3&gt;
&lt;p&gt;"Fixing" the headlines was more straight-forward. When you install the &lt;em&gt;journal&lt;/em&gt; theme it creates a file at &lt;code class="docutils literal"&gt;themes/custom/assets/css/bootstrap.css&lt;/code&gt; (along with a mini-fied version) which you can edit. I decided to leave the anchor-hover value the same but changed the plain anchor color to &lt;code class="docutils literal"&gt;#990033&lt;/code&gt; so that it's more of a blood red than a creamsicle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="changing-the-font"&gt;
&lt;h3&gt;Changing the Font&lt;/h3&gt;
&lt;p&gt;Since I was editing the CSS anyway I made some other changes. First, I changed the text-font to &lt;em&gt;Goudy Bookletter&lt;/em&gt;. It's a little old-fashioned looking, but I've always liked Goudy's fonts. To do this I first added a link to the font:&lt;/p&gt;
&lt;pre class="code css"&gt;&lt;a name="rest_code_7c5b8d421c1741f7a5a45862d97ca5ea-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"https://fonts.googleapis.com/css?family=Goudy+Bookletter+1911:400,700"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Then I updated the &lt;em&gt;font-family&lt;/em&gt;.&lt;/p&gt;
&lt;pre class="code css"&gt;&lt;a name="rest_code_7159e1272e0a45ddb57357ba750a98dc-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_7159e1272e0a45ddb57357ba750a98dc-2"&gt;&lt;/a&gt;  &lt;span class="k"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Goudy Bookletter 1911"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"EB Garamond"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;Georgia&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Times New Roman"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_7159e1272e0a45ddb57357ba750a98dc-3"&gt;&lt;/a&gt;  &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="kt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_7159e1272e0a45ddb57357ba750a98dc-4"&gt;&lt;/a&gt;  &lt;span class="k"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.42857143&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_7159e1272e0a45ddb57357ba750a98dc-5"&gt;&lt;/a&gt;  &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#777777&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_7159e1272e0a45ddb57357ba750a98dc-6"&gt;&lt;/a&gt;  &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_7159e1272e0a45ddb57357ba750a98dc-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="fixing-the-headline"&gt;
&lt;h3&gt;Fixing the headline&lt;/h3&gt;
&lt;p&gt;For some reason the title of the site has a CSS rule (&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;.navbar-brand&lt;/span&gt; &lt;span class="pre"&gt;#blog-title&lt;/span&gt;&lt;/code&gt;) that sets the top padding to 15 px even though the other elements have a padding of 19.5 px so I overrode it to make it align with the other elementes.&lt;/p&gt;
&lt;pre class="code css"&gt;&lt;a name="rest_code_b6af3d530015493a9e70ceaa859e5e75-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;navbar-header&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;navbar-brand&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;blog-title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6af3d530015493a9e70ceaa859e5e75-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;19.5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6af3d530015493a9e70ceaa859e5e75-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="minifying"&gt;
&lt;h3&gt;Minifying&lt;/h3&gt;
&lt;p&gt;When I wrote this originally, editing the &lt;code class="docutils literal"&gt;bootstrap.css&lt;/code&gt; file worked, but on one of &lt;a class="reference external" href="https://necromuralist.github.io/data_science/"&gt;my other sites&lt;/a&gt; the CSS file that is being created uses the &lt;code class="docutils literal"&gt;bootstrap.mini.css&lt;/code&gt; file instead. While this seems like it would be preferable, anyway, the change came about unexpectedly - I still don't know why Nikola is doing it on that site and not this one (I guess maybe I'll have to read the manual one of these days). So for that case, after editing the &lt;code class="docutils literal"&gt;bootstrap.css&lt;/code&gt; file you have to minify it (or just make a copy called &lt;code class="docutils literal"&gt;bootstrap.min.css&lt;/code&gt;). To minify it I use &lt;a class="reference external" href="https://github.com/jakubpawlowicz/clean-css-cli"&gt;Clean CSS CLI&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_2cc7087638164fdaaa6f83dd11a66c86-1"&gt;&lt;/a&gt;npm install clean-css-cli -g
&lt;a name="rest_code_2cc7087638164fdaaa6f83dd11a66c86-2"&gt;&lt;/a&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; themes/custom_theme/assets/css/
&lt;a name="rest_code_2cc7087638164fdaaa6f83dd11a66c86-3"&gt;&lt;/a&gt;cleancss -o bootstrap.min.css bootstrap.css
&lt;/pre&gt;&lt;p&gt;Where the &lt;code class="docutils literal"&gt;themes&lt;/code&gt; folder is in the root of my nikola repository, next to the &lt;code class="docutils literal"&gt;conf.py&lt;/code&gt; file.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="deploy"&gt;
&lt;h2&gt;Deploy&lt;/h2&gt;
&lt;p&gt;This isn't really to do with theme-changing, but for completeness, I'll mention it anyway.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f255af91771c413c812daf44e5d45c9b-1"&gt;&lt;/a&gt;nikola github_deploy
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Changing the bootswatch theme isn't as hard as it seemed, in retrospect. You just have to know the basic commands (&lt;code class="docutils literal"&gt;nikola install_theme bootstrap3&lt;/code&gt;, &lt;code class="docutils literal"&gt;nikola bootswatch_theme &lt;span class="pre"&gt;-s&lt;/span&gt; journal&lt;/code&gt;), know that the inverse navbar is the default (and how to change it - &lt;code class="docutils literal"&gt;nikola theme &lt;span class="pre"&gt;-c&lt;/span&gt; base.tmpl&lt;/code&gt;), know how to update the CSS to whatever you want (by editing &lt;code class="docutils literal"&gt;bootstrap.css&lt;/code&gt; and minifying it if necessary), and understand that you have to build the site to see the changes on the development server (&lt;code class="docutils literal"&gt;nikola build&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>how-to</category><category>nikola</category><guid>https://necromuralist.github.io/posts/how-to-change-the-nikola-bootswatch-theme/</guid><pubDate>Sun, 13 Aug 2017 22:58:00 GMT</pubDate></item><item><title>Testing KaTex</title><link>https://necromuralist.github.io/posts/testing-katex/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div&gt;&lt;p&gt;This is a test to see if &lt;a class="reference external" href="https://khan.github.io/KaTeX/"&gt;KaTex&lt;/a&gt; is working.&lt;/p&gt;
&lt;div class="math"&gt;
\begin{align*}
f(x) = \pi r^2\\
\end{align*}
&lt;/div&gt;
&lt;p&gt;The answer is no, but mathjax does seem to work.&lt;/p&gt;
&lt;div class="section" id="getting-it-working"&gt;
&lt;h2&gt;Getting it Working&lt;/h2&gt;
&lt;p&gt;Edit the &lt;code class="docutils literal"&gt;conf.py&lt;/code&gt; file.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Uncomment the second &lt;code class="docutils literal"&gt;MATHJAX_CONFIG&lt;/code&gt; default (the one with actual content instead of an empty string).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set &lt;code class="docutils literal"&gt;EXTRA_HEAD_DATA&lt;/code&gt; to the mathjax CDN.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_435d87e1665c4f3d87ac0fbbb54a695c-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;EXTRA_HEAD_DATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'''&lt;/span&gt;
&lt;a name="rest_code_435d87e1665c4f3d87ac0fbbb54a695c-2"&gt;&lt;/a&gt;&lt;span class="s1"&gt;&amp;lt;script type="text/javascript" async&lt;/span&gt;
&lt;a name="rest_code_435d87e1665c4f3d87ac0fbbb54a695c-3"&gt;&lt;/a&gt;&lt;span class="s1"&gt;  src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML"&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_435d87e1665c4f3d87ac0fbbb54a695c-4"&gt;&lt;/a&gt;&lt;span class="s1"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_435d87e1665c4f3d87ac0fbbb54a695c-5"&gt;&lt;/a&gt;&lt;span class="s1"&gt;'''&lt;/span&gt;
&lt;/pre&gt;&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://getnikola.com/handbook.html#math"&gt;documentation&lt;/a&gt; says that you need to add the &lt;code class="docutils literal"&gt;mathjax&lt;/code&gt; tag to the post, but the &lt;code class="docutils literal"&gt;conf.py&lt;/code&gt; has &lt;code class="docutils literal"&gt;HIDDEN_TAGS = ['mathjax']&lt;/code&gt; which I think makes it work anyway. The documentation also makes no mention of the need for the CDN (or installing the javascript) but nikola doesn't seem to come with &lt;cite&gt;mathjax&lt;/cite&gt; otherwise.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>katex</category><category>nikola</category><category>testing</category><guid>https://necromuralist.github.io/posts/testing-katex/</guid><pubDate>Wed, 02 Mar 2016 22:43:41 GMT</pubDate></item><item><title>Converting Nikola from a Blog to a Site</title><link>https://necromuralist.github.io/posts/converting-nikola-from-a-blog-to-a-site/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div&gt;&lt;p&gt;These are my notes on converting this site to be a web-site first (with a blog on the side). There is an official page on &lt;a class="reference external" href="https://getnikola.com/creating-a-site-not-a-blog-with-nikola.html"&gt;creating a site instead of a blog&lt;/a&gt;, but I had a little bit of a hard time figuring out what was going on so these are the main points in case I need to do it again.&lt;/p&gt;
&lt;p&gt;In a nutshell:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Get rid of the sub-folder argument in the &lt;code class="docutils literal"&gt;PAGES&lt;/code&gt; variable in &lt;code class="docutils literal"&gt;conf.py&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set &lt;code class="docutils literal"&gt;INDEX_PATH&lt;/code&gt; to point to the &lt;cite&gt;posts&lt;/cite&gt; sub-folder&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create an index page for the site.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="conf-py"&gt;
&lt;h2&gt;conf.py&lt;/h2&gt;
&lt;p&gt;The main things to do are to edit the &lt;cite&gt;conf.py&lt;/cite&gt; file so that the pages you create get copied over as the root of the &lt;cite&gt;output&lt;/cite&gt; folder (instead of in a sub-folder called &lt;cite&gt;stories&lt;/cite&gt;) and moving the blog-index down into a sub-folder.&lt;/p&gt;
&lt;div class="section" id="making-pages-the-site"&gt;
&lt;h3&gt;Making 'pages' the Site&lt;/h3&gt;
&lt;p&gt;To make the pages you create the root of the site you need to change the &lt;code class="docutils literal"&gt;PAGES&lt;/code&gt; variable to not have a sub-folder as the target (this is the second-entry in the tuple). So if it originally was:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_27cee342e2e3457c831ea438f87ccb0b-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;PAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_27cee342e2e3457c831ea438f87ccb0b-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"pages/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"pages"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"story.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_27cee342e2e3457c831ea438f87ccb0b-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;You would change the second value in the tuple to an empty string:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_09c9ad1b13ce45438bc6da981105bfbc-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;PAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_09c9ad1b13ce45438bc6da981105bfbc-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"pages/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"story.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_09c9ad1b13ce45438bc6da981105bfbc-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Now when you build the site (&lt;code class="docutils literal"&gt;nikola build&lt;/code&gt;) the &lt;code class="docutils literal"&gt;output&lt;/code&gt; folder will have your 'stories' at the top-level. This means that when you refer to pages (e.g. in the navigation configuration) you don't add 'pages/' as a prefix anymore.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="moving-the-blog-index"&gt;
&lt;h3&gt;Moving the Blog-index&lt;/h3&gt;
&lt;p&gt;Since Nikola assumes that the blog is your main-page you need to tell it to create the index in a sub-folder by setting the &lt;code class="docutils literal"&gt;INDEX_PATH&lt;/code&gt; to the name of the sub-folder. If, for example, the blog-posts are being put into &lt;code class="docutils literal"&gt;posts&lt;/code&gt;, the setting would be:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7caefed4c64546ef8ef307a7adecb922-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;INDEX_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"posts"&lt;/span&gt;
&lt;/pre&gt;&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;This was commented out by default so uncomment it and make the change.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-the-home-page"&gt;
&lt;h2&gt;Creating the Home Page&lt;/h2&gt;
&lt;p&gt;At this point if you build the site and navigate to it you'll find that your home-page is now a directory of your &lt;code class="docutils literal"&gt;output&lt;/code&gt; folder. You can navigate to a page by going through the folders, but this is probably not the intended way to get around. The easiest way (that I found) to create the home-page is to create a new-page (&lt;code class="docutils literal"&gt;nikola new_page&lt;/code&gt;) and when prompted for a title, call it &lt;code class="docutils literal"&gt;index&lt;/code&gt;. This will create &lt;code class="docutils literal"&gt;pages/index.rst&lt;/code&gt; which you can edit to become your home page (make sure to change the title if you don't want the page headline to be 'index').&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Some other things might need to be re-done in the &lt;code class="docutils literal"&gt;conf.py&lt;/code&gt; as well, since the folder structure has changed. These are only the basic steps to switch. The &lt;code class="docutils literal"&gt;NAVIGATION_LINKS&lt;/code&gt; in particular may need updating.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>how-to</category><category>nikola</category><guid>https://necromuralist.github.io/posts/converting-nikola-from-a-blog-to-a-site/</guid><pubDate>Wed, 02 Mar 2016 20:53:31 GMT</pubDate></item><item><title>A MathJax Test</title><link>https://necromuralist.github.io/posts/201208a-mathjax-test/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
Math between &lt;code&gt;\( \)&lt;/code&gt; is shown inline: \(\sum_{k=1}^n k = \frac{n(n+1)}{2}\).
&lt;/p&gt;

&lt;p&gt;
Math between &lt;code&gt;\[ \]&lt;/code&gt; is shown by itself:
&lt;/p&gt;

&lt;p&gt;
\[
\sum_{k=1}^n k =
\frac{n(n+1)}{2}
\]
&lt;/p&gt;

&lt;p&gt;
Math between &lt;code&gt;\begin{align} \end{align}&lt;/code&gt; is aligned:
&lt;/p&gt;

\begin{align}
a &amp;amp;= b + c + d\\
&amp;amp;= d + c + b\\
\end{align}</description><category>latex</category><category>math</category><guid>https://necromuralist.github.io/posts/201208a-mathjax-test/</guid><pubDate>Thu, 09 Aug 2012 06:38:00 GMT</pubDate></item></channel></rss>