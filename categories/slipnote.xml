<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Cloistered Monkey (Posts about slipnote)</title><link>https://necromuralist.github.io/</link><description></description><atom:link href="https://necromuralist.github.io/categories/slipnote.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2020 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Sat, 01 Aug 2020 23:47:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Step One: Get the Behavior</title><link>https://necromuralist.github.io/posts/step-one-get-the-behavior/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org7eba804" class="outline-2"&gt;
&lt;h2 id="org7eba804"&gt;Note&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7eba804"&gt;
&lt;p&gt;
The first step of Clicker Training is "Get your rabbit to do what you want it to do", which seems a little ambiguous when you see it on the list, but it breaks down into four basic categories.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb89c143" class="outline-3"&gt;
&lt;h3 id="orgb89c143"&gt;Capture Something She Does on Her Own&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb89c143"&gt;
&lt;p&gt;
If you see your rabbit do something that she naturally does, like sit up or come to you at certain times, then click and reward it so you can build it up as something she'll do on cue.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org42c476d" class="outline-3"&gt;
&lt;h3 id="org42c476d"&gt;Lure With Food&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org42c476d"&gt;
&lt;p&gt;
If your rabbit will take food from your hand you can teach her to go places by having her follow your hand with food in it, although the next category - &lt;i&gt;Follow a Target&lt;/i&gt; - is a preferable way to do this.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org21741b6" class="outline-3"&gt;
&lt;h3 id="org21741b6"&gt;Follow a Target&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org21741b6"&gt;
&lt;p&gt;
Create a target (like a ping-pong ball on the end of a stick) and teach your rabbit to follow it.
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Start by putting it near her and clicking when she touches it with her nose or mouth&lt;/li&gt;
&lt;li&gt;Extend it slowly by moving it away from her and rewarding her when she follows it&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgff19626" class="outline-3"&gt;
&lt;h3 id="orgff19626"&gt;Shaping&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgff19626"&gt;
&lt;p&gt;
The target training follows the &lt;i&gt;shaping&lt;/i&gt; pattern, wherein you start by rewarding anything that sort of looks like what you want her to do - like just looking at the target when you show it to her, then progressively extending the behavior needed until it's the one that you want. For example:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;look at the target&lt;/li&gt;
&lt;li&gt;touch the target&lt;/li&gt;
&lt;li&gt;follow the target a little&lt;/li&gt;
&lt;li&gt;follow the target further&lt;/li&gt;
&lt;li&gt;follow the target into her carrier&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6ab23d1" class="outline-2"&gt;
&lt;h2 id="org6ab23d1"&gt;Source&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6ab23d1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/bibliography/clicking-with-your-rabbit/"&gt;Clicking With Your Rabbit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>clicker training</category><category>rabbit</category><category>slipnote</category><guid>https://necromuralist.github.io/posts/step-one-get-the-behavior/</guid><pubDate>Fri, 31 Jul 2020 22:41:00 GMT</pubDate></item><item><title>Twitter Sentiment Classification Using Distant Supervison</title><link>https://necromuralist.github.io/posts/twitter-sentiment-classification-using-distant-supervison/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
This was a project report that looked at using emoticons to create a labeled data set for tweets.
&lt;/p&gt;

&lt;div id="outline-container-orge595eb1" class="outline-2"&gt;
&lt;h2 id="orge595eb1"&gt;About the Data&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge595eb1"&gt;
&lt;p&gt;
The authors noted that tweets are different from many other sources used for sentiment analysis - things like movie reviews - in that:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;they are character limited (140 characters at the time of the paper, it has since doubled)&lt;/li&gt;
&lt;li&gt;there is a huge amount of data to pull - and it is continuously being generated&lt;/li&gt;
&lt;li&gt;there is an unusual amount of slang and non-normal spelling&lt;/li&gt;
&lt;li&gt;it isn't subject specific - you can filter using the API, but twitter itself isn't a single-subject service&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7653134" class="outline-2"&gt;
&lt;h2 id="org7653134"&gt;Using Emoticons as Labels&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7653134"&gt;
&lt;p&gt;
The use of emoticons to decide if a tweet is positive, or negative has the benefit of automatically creating a labled dataset, but since they are used as the labels they have to remove them from the training set, removing one of the more useful ways of identifying the tweet sentiment.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org646b59e" class="outline-2"&gt;
&lt;h2 id="org646b59e"&gt;Getting and Cleaning the Data&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org646b59e"&gt;
&lt;p&gt;
The pulled 100 tweets form the API every 2 minutes until they had 800,000 positive and 800,000 negative tweets (after removing some tweets in pre-processing). The API lets you query by emoticon so the used ":)" to grab positive tweets (the API matches any known equivalent emoticon) and ":(" for negative tweets. They removed re-tweets and duplicates as well as any tweet that had both positive and negative emoticons in them. They then replaced usernames with the token &lt;code&gt;USERNAME&lt;/code&gt; and URLs with &lt;code&gt;URL&lt;/code&gt; and limited the number of consecutively repeated characters to 2.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>nlp</category><category>paper</category><category>sentiment analysis</category><category>slipnote</category><category>twitter</category><guid>https://necromuralist.github.io/posts/twitter-sentiment-classification-using-distant-supervison/</guid><pubDate>Fri, 31 Jul 2020 22:16:27 GMT</pubDate></item><item><title>Opinion Mining and Sentiment Analysis</title><link>https://necromuralist.github.io/posts/opinion-mining-and-sentiment-analysis/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org7312ab7" class="outline-2"&gt;
&lt;h2 id="org7312ab7"&gt;Note&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7312ab7"&gt;
&lt;p&gt;
An &lt;i&gt;opinion&lt;/i&gt; is a subjective statement about what a &lt;b&gt;&lt;b&gt;person&lt;/b&gt;&lt;/b&gt; thinks or believes about &lt;b&gt;&lt;b&gt;something&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
There are three basic parts needed to understand an opinion:
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;The opinion holder (&lt;b&gt;&lt;b&gt;person&lt;/b&gt;&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;The opinion target (&lt;b&gt;&lt;b&gt;something&lt;/b&gt;&lt;/b&gt;)&lt;/li&gt;
&lt;li&gt;The opinion content&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
In addition, to make it meaningful, you can add:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;The Context of the opinion&lt;/li&gt;
&lt;li&gt;The Sentiment of the opinion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/posts/bibliography/text-data-management-and-analysis/"&gt;(Zhai &amp;amp; Massung, 2016)&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Sentiment Analysis is a part of Natural Language Processing that looks to transform freeform text into structured data. Opinion is an expression of belief, while sentiment is an expression of feeling. What is sometimes called Sentiment Analysis - the measurement of positive or negative sentiment of a text is really Polarity Classification, a subset of Sentiment Analysis. &lt;a href="https://necromuralist.github.io/posts/bibliography/sentiment-analysis-in-social-networks/"&gt;(Pozzi, Fersini, et al., 2017)&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>nlp</category><category>sentiment analysis</category><category>slipnote</category><guid>https://necromuralist.github.io/posts/opinion-mining-and-sentiment-analysis/</guid><pubDate>Thu, 30 Jul 2020 20:12:55 GMT</pubDate></item><item><title>Memorizing Binaries</title><link>https://necromuralist.github.io/posts/memorizing-binaries/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
This is one way that you can memorize binary states - not just binary number, since you can encode the binary states as binary numbers.
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Encode as bits (e.g. &lt;i&gt;white=0&lt;/i&gt;, &lt;i&gt;black=1&lt;/i&gt;)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Arrange the bits into 3x3 grids - 3 bits per row, 3 rows per grid
&lt;/p&gt;

&lt;p&gt;
\[
  000\\
  110\\
  101\\
  \]
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
Convert each row to decimal numbers.
&lt;/p&gt;

&lt;p&gt;
\[
  000 = 0\\
  110 = 6\\
  101 = 5\\
  \]
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;Convert the decimal to a word-image using a system. In the case of the Major System you might get &lt;i&gt;065 = sgl = seagull&lt;/i&gt;.&lt;/li&gt;

&lt;li&gt;Repeat until you have all the bits covered&lt;/li&gt;

&lt;li&gt;Put the images into a Memory Palace, two images per location.&lt;/li&gt;
&lt;/ol&gt;

&lt;div id="outline-container-orgf2fb684" class="outline-2"&gt;
&lt;h2 id="orgf2fb684"&gt;Bibliography&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf2fb684"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/bibliography/mnemonic-alphabet-systems/"&gt;Mnemonic Alphabet Systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>memory</category><category>slipnote</category><guid>https://necromuralist.github.io/posts/memorizing-binaries/</guid><pubDate>Thu, 30 Jul 2020 06:41:28 GMT</pubDate></item><item><title>Basics Steps of Clicker Training</title><link>https://necromuralist.github.io/posts/basics-steps-of-clicker-training/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
These are the basic steps of clicker training.
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Get your rabbit to do what you want it to do&lt;/li&gt;
&lt;li&gt;Click the instant she does it&lt;/li&gt;
&lt;li&gt;Reward your rabbit with a treat&lt;/li&gt;
&lt;li&gt;Add a cue once she's learned to do it so she knows the name of what she's doing&lt;/li&gt;
&lt;li&gt;Gradually fade out the clicks and treats&lt;/li&gt;
&lt;/ol&gt;

&lt;div id="outline-container-orgf4157d4" class="outline-2"&gt;
&lt;h2 id="orgf4157d4"&gt;Links&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf4157d4"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/clicking-basics/"&gt;Clicking Basics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgccaa37a" class="outline-2"&gt;
&lt;h2 id="orgccaa37a"&gt;Source&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgccaa37a"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/bibliography/clicking-with-your-rabbit/"&gt;Clicking With Your Rabbit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>clicker training</category><category>rabbit</category><category>slipnote</category><guid>https://necromuralist.github.io/posts/basics-steps-of-clicker-training/</guid><pubDate>Thu, 30 Jul 2020 06:33:37 GMT</pubDate></item><item><title>Why Is Ham Radio Called Ham Radio?</title><link>https://necromuralist.github.io/posts/why-is-ham-radio-called-ham-radio/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
So, why is &lt;a href="https://www.wikiwand.com/en/Amateur_radio"&gt;Amateur Radio called&lt;/a&gt; &lt;i&gt;ham&lt;/i&gt; radio? It appears that the term originated with Telegraph Operators who referred to unskilled operators as "hams", presumably because they were considered "ham-fisted" (or "ham-handed"). When radio first became available to the general population many of the first radio ("wireless telegraph") operators were former telegraph operators and it became the norm for both amateurs and professionals to refer to amateur operators who accidentally interfered with other broadcasts as "hams" and eventually the term was adopted by the amateur radio community as the term for "amateur" radio.
&lt;/p&gt;

&lt;div id="outline-container-orgbd47385" class="outline-2"&gt;
&lt;h2 id="orgbd47385"&gt;Citations&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbd47385"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/bibliography/arrl-ham-radio-license-manual/"&gt;ARRL Ham Radio License Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>etymology</category><category>ham radio</category><category>slipnote</category><guid>https://necromuralist.github.io/posts/why-is-ham-radio-called-ham-radio/</guid><pubDate>Thu, 30 Jul 2020 03:21:08 GMT</pubDate></item><item><title>The Alphabet Peg</title><link>https://necromuralist.github.io/posts/the-alphabet-peg/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
This is a type of Mnemonic Peg System that helps you memorize lists using a pre-built Peg List based on the alphabet. It doesn't have to be the alphabet, it can be any ordered list of words that you already have memorized.
&lt;/p&gt;

&lt;p&gt;
First you created a list of words wherein the first letter of each word matches the letters of the alphabet - &lt;i&gt;Ape, Bat, Crane&lt;/i&gt;, etc. Now whenever you need to memorize a list you associate each item on the list with a word in the alphabet list in order. So if you need to memorize &lt;i&gt;a loaf of bread, a container of milk, and a stick of butter&lt;/i&gt; you would do something like this:
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Abecadarium&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;List&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;Ape&lt;/td&gt;
&lt;td class="org-left"&gt;Loaf of Bread&lt;/td&gt;
&lt;td class="org-left"&gt;King Kong climbing the Empire State Building holding a loaf of bread&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Bat&lt;/td&gt;
&lt;td class="org-left"&gt;Container of Milk&lt;/td&gt;
&lt;td class="org-left"&gt;Supermarket milk jug with a bat in it&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Crane&lt;/td&gt;
&lt;td class="org-left"&gt;Stick of Butter&lt;/td&gt;
&lt;td class="org-left"&gt;A crane choking on a giant stick of butter&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
Once you've made the associations you can remember the list by starting with Ape and working through the alphabet.
&lt;/p&gt;

&lt;div id="outline-container-org6d3c4b9" class="outline-2"&gt;
&lt;h2 id="org6d3c4b9"&gt;Bibliography&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6d3c4b9"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/posts/bibliography/mnemonic-alphabet-systems/"&gt;Mnemonic Alphabet Systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>memory</category><category>mnemonic peg system</category><category>slipnote</category><guid>https://necromuralist.github.io/posts/the-alphabet-peg/</guid><pubDate>Thu, 30 Jul 2020 02:54:16 GMT</pubDate></item></channel></rss>